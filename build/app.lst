ARM GAS  /tmp/ccHyRziO.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 4
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"app.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Src/app.c"
  25              		.section	.text.LL_Buffer_addr_start,"ax",%progbits
  26              		.align	1
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	LL_Buffer_addr_start:
  32              	.LVL0:
  33              	.LFB3353:
  34              		.file 2 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h"
   1:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
   2:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   3:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @file    ll_aton_NN_interface.h
   4:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @author  SRA Artificial Intelligence & Embedded Architectures
   5:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief   Interface that defines a NN generated by the AtoNN Compiler.
   6:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   7:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @attention
   8:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
   9:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * Copyright (c) 2024 STMicroelectronics.
  10:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * All rights reserved.
  11:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  12:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * in the root directory of this software component.
  14:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  16:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
  17:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
  18:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  19:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef __LL_ATON_NN_INTERFACE_H
  20:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define __LL_ATON_NN_INTERFACE_H
  21:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  22:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef __cplusplus
  23:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** extern "C"
  24:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** {
ARM GAS  /tmp/ccHyRziO.s 			page 2


  25:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
  26:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  27:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <assert.h>
  28:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdbool.h>
  29:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stddef.h>
  30:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdint.h>
  31:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  32:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_config.h"
  33:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  34:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_attributes.h"
  35:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_util.h"
  36:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  37:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /* this is needed to avoid some compilers (e.g. KEIL) that observe a strict semantic about conver
  38:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * pointers to integers in cost initializers
  39:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  40:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef union
  41:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  42:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     unsigned char *p;
  43:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t i;
  44:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } __LL_address_t;
  45:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  46:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*EpochBlock_FuncPtr_t)(const void *epoch_block);
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  48:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_RT_RetValues
  49:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  50:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_NO_WFE = 0,
  51:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_WFE,
  52:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_DONE,
  53:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_RT_RetValues_t;
  54:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  55:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_RT_Callbacktype
  56:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  57:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_START,  /**< Callback called before start_epoch_block */
  58:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_START, /**< Callback called after start_epoch_block */
  59:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_END,    /**< Callback called before end_epoch_block */
  60:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_END,   /**< Callback called after end_epoch_block */
  61:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_Init,    /**< Callback called after `LL_ATON_RT_Init_Network`,
  62:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  63:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_DeInit,  /**< Callback called after `LL_ATON_RT_DeInit_Network`,
  64:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  65:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Init,    /**< Callback called after `LL_ATON_RT_RuntimeInit` */
  66:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Deinit,  /**< Callback called before `LL_ATON_RT_RuntimeDeInit` */
  67:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_RT_Callbacktype_t;
  68:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  69:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_User_IO_Result
  70:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  71:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_NOERROR,     /**< */
  72:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_ALIGN, /**< */
  73:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_SIZE,  /**< */
  74:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_INDEX, /**< */
  75:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_User_IO_Result_t;
  76:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  77:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
  78:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  79:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_NONE = 0x0,               /**< */
  80:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_start = (0x1 << 0), /**< First EpochBlock of an Epoch */
  81:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_end = (0x1 << 1),   /**< Last EpochBlock of an Epoch */
ARM GAS  /tmp/ccHyRziO.s 			page 3


  82:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob = (0x1 << 2),        /**< Item is an Epoch Blob */
  83:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_last_eb = (0x1 << 3),     /**< Last EpochBlock */
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_hw = (0x1 << 4),     /**< Pure HW EpochBlock */
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_sw = (0x1 << 5),     /**< Pure SW EpochBlock */
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_hybrid = (0x1 << 6),      /**< Hybrid EpochBlock (i.e. mixed HW/SW) */
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_internal = (0x1 << 7),    /**< ATON lib internal EpochBlock (used to implement
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_Flags_t;
  89:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  90:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
  91:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  92:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t start_epoch_block; /**< Method to execute the EpochBlock */
  93:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t end_epoch_block;   /**< Method to be executed when the EpochBlock ends */
  94:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t blob_address;                 /**< Blob address (in case this EpochBlock represents a
  95:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t wait_mask;                     /**< Mask needed to check when an EpochBlock ends
  96:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - if epoch blob: number (not bitmask) of epoch co
  97:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - otherwise: bitmask with all output streaming en
  98:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t flags;                         /**< EpochBlock flags */
  99:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef LL_ATON_EB_DBG_INFO
 100:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t epoch_num;             /**< Epoch number / First epoch number within blob */
 101:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t last_epoch_num;        /**< Epoch number / Last epoch number within blob */
 102:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t in_streng_mask;       /**< Debug information about input streaming engines used in epo
 103:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t out_streng_mask;      /**< Debug information about output streaming engines used in ep
 104:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_npu_cycles; /**< Debug information estimates for NPU cycles in epoch w/o mem
 105:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_tot_cycles; /**< Debug information estimates for NPU cycles in epoch w/ memo
 106:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                             // LL_ATON_EB_DBG_INFO
 107:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_ItemTypeDef;
 108:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 109:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 110:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last one of an array of `const EpochBlock_ItemType
 111:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 112:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 113:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb);
 114:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 115:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 116:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the first EpochBlock of an Epoch
 117:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 118:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 119:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb);
 120:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 121:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 122:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last EpochBlock of an Epoch
 123:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 124:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 125:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb);
 126:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 127:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 128:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the an Epoch Blob
 129:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 130:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 131:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb);
 132:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 133:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 134:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is pure SW epoch
 135:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 136:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 137:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb);
 138:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccHyRziO.s 			page 4


 139:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 140:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a pure HW or mixed SW/HW epoch
 141:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 142:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 143:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb);
 144:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 145:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 146:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a hybrid epoch
 147:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 148:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 149:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb);
 150:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 151:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 152:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is an internal epoch
 153:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 154:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 155:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb);
 156:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 157:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 158:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the Epoch controller id to use
 159:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 160:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 161:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb);
 162:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 163:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 164:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the address of the configuration of the epoch controller (the blob address)
 165:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 166:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 167:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb);
 168:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 169:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 170:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer types definition
 171:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 172:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 173:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 174:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 175:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UNDEFINED = 0,
 176:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT = 1,
 177:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT8 = 2,
 178:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT8 = 3,
 179:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT16 = 4,
 180:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT16 = 5,
 181:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT32 = 6,
 182:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT64 = 7,
 183:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_STRING = 8,
 184:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BOOL = 9,
 185:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT16 = 10,
 186:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_DOUBLE = 11,
 187:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT32 = 12,
 188:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT64 = 13,
 189:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX64 = 14,
 190:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX128 = 15,
 191:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BFLOAT16 = 16,
 192:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FXP = 100 // AtoNN specific
 193:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_DataType_TypeDef;
 194:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 195:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
ARM GAS  /tmp/ccHyRziO.s 			page 5


 196:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer Channel position
 197:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 198:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 199:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 200:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 201:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_UNDEFINED = 0, /**< No channel present */
 202:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_First = 1,     /**< Channel First         ( ...B C H W )*/
 203:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Last = 2,      /**< Channel Last          ( ...B H W C ) */
 204:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Mixed = 3,     /**< Channel with Batch(b) ( ...B C/b H W b ) */
 205:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_CHPos_TypeDef;
 206:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 207:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 208:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer definition
 209:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 210:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 211:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 212:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *name;             /**< Buffer name. NULL if end of list */
 213:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     __LL_address_t addr_base;     /**< Buffer base address */
 214:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_start;        /**< Offset of the buffer start address from the base address */
 215:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_end;          /**< Offset of the buffer end address from the base address
 216:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (first bytes address beyond buffer length) */
 217:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_limit;        /**< Offset of the limiter address from the base address,
 218:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (needed for configuring streaming engines) */
 219:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_user_allocated;    /**< */
 220:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_param;             /**< */
 221:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t epoch;               /**< */
 222:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t batch;               /**< */
 223:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *mem_shape;    /**< shape as seen by the user in memory (only valid for input/ou
 224:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t mem_ndims;           /**< Number of dimensions of mem_shape (Length of mem_shape) */
 225:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_CHPos_TypeDef chpos;   /**< Position  of channels dimension in mem shape */
 226:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_DataType_TypeDef type; /**< */
 227:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qm;                    /**< */
 228:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qn;                    /**< */
 229:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t Qunsigned;            /**< */
 230:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t ndims;                /**< */
 231:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t nbits;                /**< */
 232:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t per_channel;          /**< */
 233:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *shape;        /**< */
 234:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const float *scale;           /**< */
 235:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const int16_t *offset;        /**< This can become int8 or uint8 based on the Qunsigned field.
 236:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (This field Must have the same format of the quantized value
 237:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_Buffer_InfoTypeDef;
 238:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 239:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 240:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the base address of the mem pool the buffer is allocated in
 241:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 242:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 243:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf);
 244:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 245:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 246:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the start address of the buffer
 247:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 248:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 249:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf);
 250:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 251:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 252:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the end address of the buffer
ARM GAS  /tmp/ccHyRziO.s 			page 6


 253:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 254:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 255:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf);
 256:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 257:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 258:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the limit address of the buffer
 259:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 260:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 261:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf);
 262:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 263:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 264:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the length of the buffer
 265:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 266:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 267:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf);
 268:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 269:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 270:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the buffer elements number of bits
 271:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 272:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 273:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_bits(const LL_Buffer_InfoTypeDef *buf);
 274:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 275:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup ATONN_COMPILER Functions autogenerated by the AtoNN compiler
 276:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 277:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 278:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 279:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 280:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Initialize a Network internal structures for the Epoch Controller
 281:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 282:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 283:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 284:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 285:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @retval returns if the action succeded or an error occured
 286:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 287:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Network_Init_Default(void);
 288:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 289:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 290:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Update a Network internal structures for the Epoch Controller before the execution of 
 291:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 292:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 293:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 294:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 295:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @retval returns if the action succeded or an error occured
 296:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 297:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Inference_Init_Default(void);
 298:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 299:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 300:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Sets user allocated inputs (one at a time)
 301:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 302:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 303:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 304:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 305:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @param  num zero base index of the input buffer to set
 306:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @param  buffer pointer to the area used to store this input
 307:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @param  size size of the memory reserved for this input
 308:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 309:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_Default(uint32_t num, void *buffer,
ARM GAS  /tmp/ccHyRziO.s 			page 7


 310:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 311:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 312:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Gets user allocated inputs (one at a time)
 313:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 314:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 315:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 316:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 317:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @param  num zero base index of the input buffer to get
 318:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @retval returns a pointer to the specified user allocated input
 319:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 320:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Input_Buffer_Default(uint32_t num);
 321:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 322:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 323:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Sets user allocated outputs (one at a time)
 324:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 325:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 326:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 327:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 328:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @param  num zero base index of the output buffer to set
 329:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @param  buffer pointer to the area used to store this output
 330:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @param  size size of the memory reserved for this output
 331:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 332:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_Default(uint32_t num, void *buffer
 333:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 334:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 335:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Gets user allocated inputs (one at a time)
 336:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 337:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 338:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 339:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 340:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @param  num zero base index of the output buffer to get
 341:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @retval returns a pointer to the specified user allocated output
 342:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 343:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Output_Buffer_Default(uint32_t num);
 344:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 345:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 346:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Returns an array of structures describing the epoch blocks of the NN to execute
 347:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 348:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 349:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 350:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 351:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @retval returns a pointer to an array of `const EpochBlock_ItemTypeDef`,
 352:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         if `flags` contain `EpochBlock_Flags_last_eb` identifies the last (empty) EpochBlock (
 353:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (see helper function `EpochBlock_IsLastEpochBlock()`)
 354:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 355:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_Default(void);
 356:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 357:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 358:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Returns an array of structures describing input buffers
 359:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 360:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 361:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 362:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 363:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @retval returns a pointer to the array of LL_Buffer_InfoTypeDef, name is NULL for the last one
 364:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 365:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_Default(void);
 366:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccHyRziO.s 			page 8


 367:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 368:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Returns an array of structures describing output buffers
 369:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 370:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 371:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 372:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 373:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @retval Returns a pointer to the array of LL_Buffer_InfoTypeDef, name is NULL for the last one
 374:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 375:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_Default(void);
 376:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 377:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 378:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Returns an array of structures describing epoch output transient buffers
 379:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   This function is generated by the AtoNN compiler when called without a network name
 380:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (i.e. without option `--network-name`)
 381:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @note   Use macro `LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)` instead when the network has
 382:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *         (by the AtoNN compiler) with a network name (i.e. with option `--network-name`)
 383:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @retval Returns a pointer to the array of LL_Buffer_InfoTypeDef, name is NULL for the last one
 384:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 385:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_Default(void);
 386:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 387:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 388:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare the function prototypes for named NN interface functions generated by the AtoNN c
 389:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param network_name name of the network as provided by option `--network-name`
 390:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 391:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)                                              
 392:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Network_Init_##network_name(void);                                        
 393:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Inference_Init_##network_name(void);                                      
 394:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_##network_name(uint32_t num, void *
 395:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                uint32_t size);     
 396:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Input_Buffer_##network_name(uint32_t num);                         
 397:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_##network_name(uint32_t num, void 
 398:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                 uint32_t size);    
 399:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Output_Buffer_##network_name(uint32_t num);                        
 400:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_##network_name(void);               
 401:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_##network_name(void);            
 402:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_##network_name(void);             
 403:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_##network_name(void);
 404:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 405:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 406:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Type definitions for NN interface functions
 407:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 408:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef bool (*NN_EC_Hook_TypeDef)(void);
 409:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_InputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t s
 410:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_InputGetter_TypeDef)(uint32_t num);
 411:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_OutputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t 
 412:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_OutputGetter_TypeDef)(uint32_t num);
 413:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const EpochBlock_ItemTypeDef *(*NN_EpochBlockItems_TypeDef)(void);
 414:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const LL_Buffer_InfoTypeDef *(*NN_Buffers_Info_TypeDef)(void);
 415:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 416:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceRuntime_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype);
 417:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 418:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct; // forward declaration
 419:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct __nn_instance_struct NN_Instance_TypeDef;
 420:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceEpochBlock_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype, const NN_Instance_Type
 421:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                             const EpochBlock_ItemTypeDef *epoch_block);
 422:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 423:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
ARM GAS  /tmp/ccHyRziO.s 			page 9


 424:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 425:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *network_name;
 426:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_network_init;
 427:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_inference_init;
 428:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputSetter_TypeDef input_setter;
 429:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputGetter_TypeDef input_getter;
 430:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputSetter_TypeDef output_setter;
 431:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputGetter_TypeDef output_getter;
 432:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EpochBlockItems_TypeDef epoch_block_items;
 433:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef output_buffers_info;
 434:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef input_buffers_info;
 435:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef internal_buffers_info;
 436:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Interface_TypeDef;
 437:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 438:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 439:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 440:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile current_epoch_block; // pointer to current epoch block
 441:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile first_epoch_block;   // pointer to first epoch block in 
 442:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile next_epoch_block;    // pointer to epoch block to be ins
 443:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 444:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile saved_current_epoch_block; // pointer to saved current e
 445:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef
 446:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         *volatile saved_first_epoch_block; // pointer to saved first epoch block in current epoch l
 447:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 448:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     bool inference_started; // inference has been started
 449:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 450:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 451:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t triggered_events;        // currently triggered events/IRQs in current epoch
 452:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile bool current_epoch_block_started; // has current epoch block already been started
 453:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                         // (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 454:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 455:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef NDEBUG
 456:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t
 457:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         nr_of_epoch_blocks; // number of epoch blocks in network (includes also terminating empty e
 458:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t saved_nr_of_epoch_blocks; // number of epoch blocks in saved network (include
 459:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                 // empty epoch block)
 460:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                          // NDEBUG
 461:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 462:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     TraceEpochBlock_FuncPtr_t epoch_callback_function; // epoch callback function
 463:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 464:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if defined(LL_ATON_RT_RELOC)
 465:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t inst_reloc;
 466:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
 467:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 468:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Execution_State_TypeDef;
 469:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 470:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct
 471:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 472:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const NN_Interface_TypeDef *network;
 473:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Execution_State_TypeDef exec_state;
 474:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   };
 475:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 476:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 477:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare and fill a constant named NN interface object
 478:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param nn_if_name name of the network as provided by option `--network-name`
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 480:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_INTERFACE(nn_if_name)                                             
ARM GAS  /tmp/ccHyRziO.s 			page 10


 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   LL_ATON_DECLARE_NAMED_NN_PROTOS(nn_if_name);                                                     
 482:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                                    
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static const NN_Interface_TypeDef NN_Interface_##nn_if_name = {                                  
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .network_name = #nn_if_name,                                                                 
 485:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .ec_network_init = &LL_ATON_EC_Network_Init_##nn_if_name,                                    
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .ec_inference_init = &LL_ATON_EC_Inference_Init_##nn_if_name,                                
 487:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .input_setter = &LL_ATON_Set_User_Input_Buffer_##nn_if_name,                                 
 488:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .input_getter = &LL_ATON_Get_User_Input_Buffer_##nn_if_name,                                 
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .output_setter = &LL_ATON_Set_User_Output_Buffer_##nn_if_name,                               
 490:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .output_getter = &LL_ATON_Get_User_Output_Buffer_##nn_if_name,                               
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .epoch_block_items = &LL_ATON_EpochBlockItems_##nn_if_name,                                  
 492:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .output_buffers_info = &LL_ATON_Output_Buffers_Info_##nn_if_name,                            
 493:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .input_buffers_info = &LL_ATON_Input_Buffers_Info_##nn_if_name,                              
 494:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       .internal_buffers_info = &LL_ATON_Internal_Buffers_Info_##nn_if_name}
 495:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 496:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 497:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare and fill a non-constant named NN execution instance
 498:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param nn_exec_name typically name of the network as provided by option `--network-name`
 499:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param _nn_if_name pointer to network interface
 500:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 501:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_INSTANCE(nn_exec_name, _nn_if_name)                               
 502:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static NN_Instance_TypeDef NN_Instance_##nn_exec_name = {.network = _nn_if_name, .exec_state = {0
 503:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 505:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare and fill a non-constant named NN execution instance and constant network interfac
 506:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *        which get linked together (by this macro).
 507:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param nn_name name of the network as provided by option `--network-name`
 508:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 509:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(nn_name)                                   
 510:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   LL_ATON_DECLARE_NAMED_NN_INTERFACE(nn_name);                                                     
 511:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   LL_ATON_DECLARE_NAMED_NN_INSTANCE(nn_name, &NN_Interface_##nn_name);
 512:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 513:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 514:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 515:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 516:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 517:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb)
 518:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 519:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_last_eb) != 0);
 520:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 521:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 522:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb)
 523:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 524:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_start) != 0);
 525:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 526:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 527:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb)
 528:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 529:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_end) != 0);
 530:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 531:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 532:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb)
 533:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 534:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob) != 0);
 535:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 536:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 537:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb)
ARM GAS  /tmp/ccHyRziO.s 			page 11


 538:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 539:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_sw) != 0);
 540:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 541:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 542:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb)
 543:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 544:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_hw) != 0);
 545:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 546:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 547:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb)
 548:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 549:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_hybrid) != 0);
 550:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 551:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 552:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb)
 553:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 554:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_internal) != 0);
 555:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 556:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 557:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb)
 558:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 559:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 560:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->wait_mask;
 561:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 562:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 563:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb)
 564:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 565:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 566:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->blob_address;
 567:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 568:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 569:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf)
 570:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 571:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     if (buf->is_user_allocated)
 572:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 573:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       unsigned char **tmp = (unsigned char **)buf->addr_base.p;
 574:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 575:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 576:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->addr_base.p;
 577:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 578:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 579:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf)
 580:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  35              		.loc 2 580 3 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
 581:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_start;
  40              		.loc 2 581 5 view .LVU1
  41              	.LBB225:
  42              	.LBI225:
 569:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43              		.loc 2 569 32 view .LVU2
  44              	.LBB226:
 571:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  45              		.loc 2 571 5 view .LVU3
ARM GAS  /tmp/ccHyRziO.s 			page 12


 571:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  46              		.loc 2 571 8 is_stmt 0 view .LVU4
  47 0000 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
  48              	.LBB227:
 573:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  49              		.loc 2 573 23 view .LVU5
  50 0002 4368     		ldr	r3, [r0, #4]
  51              	.LBE227:
 571:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  52              		.loc 2 571 8 view .LVU6
  53 0004 02B1     		cbz	r2, .L2
  54              	.LBB228:
 573:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  55              		.loc 2 573 7 is_stmt 1 view .LVU7
  56              	.LVL1:
 574:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  57              		.loc 2 574 7 view .LVU8
 574:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  58              		.loc 2 574 14 is_stmt 0 view .LVU9
  59 0006 1B68     		ldr	r3, [r3]
  60              	.LVL2:
  61              	.L2:
 574:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  62              		.loc 2 574 14 view .LVU10
  63              	.LBE228:
  64              	.LBE226:
  65              	.LBE225:
  66              		.loc 2 581 37 discriminator 1 view .LVU11
  67 0008 8068     		ldr	r0, [r0, #8]
  68              	.LVL3:
 582:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
  69              		.loc 2 582 3 view .LVU12
  70 000a 1844     		add	r0, r0, r3
  71 000c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE3353:
  75              		.section	.text.copy_pd_box,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	copy_pd_box:
  82              	.LVL4:
  83              	.LFB7351:
   1:Src/app.c     **** /**
   2:Src/app.c     ****   ******************************************************************************
   3:Src/app.c     ****   * @file    app.c
   4:Src/app.c     ****   * @author  MDG Application Team
   5:Src/app.c     ****   ******************************************************************************
   6:Src/app.c     ****   * @attention
   7:Src/app.c     ****   *
   8:Src/app.c     ****   * Copyright (c) 2024 STMicroelectronics.
   9:Src/app.c     ****   * All rights reserved.
  10:Src/app.c     ****   *
  11:Src/app.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Src/app.c     ****   * in the root directory of this software component.
  13:Src/app.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /tmp/ccHyRziO.s 			page 13


  14:Src/app.c     ****   *
  15:Src/app.c     ****   ******************************************************************************
  16:Src/app.c     ****   */
  17:Src/app.c     **** 
  18:Src/app.c     **** /*TODO: DECLARE MODELS 
  19:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(yolo_detector);
  20:Src/app.c     **** //static roi_t rois[YOLO_MAX_NB];
  21:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(face_landmark);
  22:Src/app.c     **** //static ld_point_t fl_landmarks[1[FL_LANDMARK_NB]; // Use new constants
  23:Src/app.c     **** */
  24:Src/app.c     **** /*TODO: REMOVE ROTATION LOGICS AS DMS WILL NOT USE IT
  25:Src/app.c     ****  * NOTE THAT ROTATION LOGIC IS USED FOR N6 BOARD 
  26:Src/app.c     **** */
  27:Src/app.c     **** #include "app.h"
  28:Src/app.c     **** 
  29:Src/app.c     **** #include <stdint.h>
  30:Src/app.c     **** #include <stdio.h>
  31:Src/app.c     **** 
  32:Src/app.c     **** #include "app_cam.h"
  33:Src/app.c     **** #include "app_config.h"
  34:Src/app.c     **** #include "IPL_resize.h"
  35:Src/app.c     **** #include "app_postprocess.h"
  36:Src/app.c     **** #include "isp_api.h"
  37:Src/app.c     **** #include "ld.h"
  38:Src/app.c     **** #include "ll_aton_runtime.h"
  39:Src/app.c     **** #include "cmw_camera.h"
  40:Src/app.c     **** #include "scrl.h"
  41:Src/app.c     **** #ifdef STM32N6570_DK_REV
  42:Src/app.c     **** #include "stm32n6570_discovery.h"
  43:Src/app.c     **** #else
  44:Src/app.c     **** #include "stm32n6xx_nucleo.h"
  45:Src/app.c     **** #endif
  46:Src/app.c     **** #include "stm32_lcd.h"
  47:Src/app.c     **** #include "stm32_lcd_ex.h"
  48:Src/app.c     **** #include "stm32n6xx_hal.h"
  49:Src/app.c     **** #include "FreeRTOS.h"
  50:Src/app.c     **** #include "task.h"
  51:Src/app.c     **** #include "semphr.h"
  52:Src/app.c     **** #include "utils.h"
  53:Src/app.c     **** 
  54:Src/app.c     **** #define FREERTOS_PRIORITY(p) ((UBaseType_t)((int)tskIDLE_PRIORITY + configMAX_PRIORITIES / 2 + (p))
  55:Src/app.c     **** 
  56:Src/app.c     **** #ifndef M_PI
  57:Src/app.c     **** #define M_PI 3.14159265358979323846
  58:Src/app.c     **** #endif
  59:Src/app.c     **** 
  60:Src/app.c     **** #include "nema_core.h"
  61:Src/app.c     **** #include "nema_error.h"
  62:Src/app.c     **** void nema_enable_tiling(int);
  63:Src/app.c     **** 
  64:Src/app.c     **** #define LCD_FG_WIDTH LCD_BG_WIDTH
  65:Src/app.c     **** #define LCD_FG_HEIGHT LCD_BG_HEIGHT
  66:Src/app.c     **** 
  67:Src/app.c     **** #define CACHE_OP(__op__) do { \
  68:Src/app.c     ****   if (is_cache_enable()) { \
  69:Src/app.c     ****     __op__; \
  70:Src/app.c     ****   } \
ARM GAS  /tmp/ccHyRziO.s 			page 14


  71:Src/app.c     **** } while (0)
  72:Src/app.c     **** 
  73:Src/app.c     **** #define DBG_INFO 0
  74:Src/app.c     **** #define USE_FILTERED_TS 1
  75:Src/app.c     **** 
  76:Src/app.c     **** #define BQUEUE_MAX_BUFFERS 2
  77:Src/app.c     **** #define CPU_LOAD_HISTORY_DEPTH 8
  78:Src/app.c     **** 
  79:Src/app.c     **** #define DISPLAY_BUFFER_NB (DISPLAY_DELAY + 2)
  80:Src/app.c     **** 
  81:Src/app.c     **** /* palm detector */
  82:Src/app.c     **** #define PD_MAX_HAND_NB 1
  83:Src/app.c     **** #define YOLO_MAX_NB 20
  84:Src/app.c     **** 
  85:Src/app.c     **** typedef float app_v3_t[3];
  86:Src/app.c     **** 
  87:Src/app.c     **** /**
  88:Src/app.c     ****  * @brief Defines a Region Of Interest (ROI).
  89:Src/app.c     ****  * @details This is a key structure used to pass the location of a detected object
  90:Src/app.c     ****  * (like a hand or face) to the next stage of the pipeline.
  91:Src/app.c     ****  */
  92:Src/app.c     **** typedef struct {
  93:Src/app.c     ****   float cx;
  94:Src/app.c     ****   float cy;
  95:Src/app.c     ****   float w;
  96:Src/app.c     ****   float h;
  97:Src/app.c     ****   float rotation;
  98:Src/app.c     **** } roi_t;
  99:Src/app.c     **** 
 100:Src/app.c     **** #define UTIL_LCD_COLOR_TRANSPARENT 0
 101:Src/app.c     **** 
 102:Src/app.c     **** #ifdef STM32N6570_DK_REV
 103:Src/app.c     **** #define LCD_FONT Font20
 104:Src/app.c     **** #define DISK_RADIUS 2
 105:Src/app.c     **** #else
 106:Src/app.c     **** #define LCD_FONT Font12
 107:Src/app.c     **** #define DISK_RADIUS 1
 108:Src/app.c     **** #endif
 109:Src/app.c     **** 
 110:Src/app.c     **** /**
 111:Src/app.c     ****  * @brief A simple rectangle definition using top-left corner and size.
 112:Src/app.c     ****  */
 113:Src/app.c     **** typedef struct
 114:Src/app.c     **** {
 115:Src/app.c     ****   uint32_t X0;
 116:Src/app.c     ****   uint32_t Y0;
 117:Src/app.c     ****   uint32_t XSize;
 118:Src/app.c     ****   uint32_t YSize;
 119:Src/app.c     **** } Rectangle_TypeDef;
 120:Src/app.c     **** 
 121:Src/app.c     **** /**
 122:Src/app.c     ****  * @brief A thread-safe buffer queue for passing data between tasks (e.g., camera and NN).
 123:Src/app.c     ****  * @details Implements a classic producer-consumer model using semaphores.
 124:Src/app.c     ****  */
 125:Src/app.c     **** typedef struct {
 126:Src/app.c     ****   SemaphoreHandle_t free;         /* Signals that a buffer is free for writing. */
 127:Src/app.c     ****   StaticSemaphore_t free_buffer;
ARM GAS  /tmp/ccHyRziO.s 			page 15


 128:Src/app.c     ****   SemaphoreHandle_t ready;        /* Signals that a buffer is ready for reading. */
 129:Src/app.c     ****   StaticSemaphore_t ready_buffer; 
 130:Src/app.c     ****   int buffer_nb;                  /* Total number of buffers in the queue. */
 131:Src/app.c     ****   uint8_t *buffers[BQUEUE_MAX_BUFFERS];
 132:Src/app.c     ****   int free_idx;          /* Index of the next free buffer. */ 
 133:Src/app.c     ****   int ready_idx;        /* Index of the next ready buffer. */
 134:Src/app.c     **** } bqueue_t;
 135:Src/app.c     **** 
 136:Src/app.c     **** /**
 137:Src/app.c     ****  * @brief Holds data for calculating CPU load.
 138:Src/app.c     ****  */
 139:Src/app.c     **** 
 140:Src/app.c     **** typedef struct {
 141:Src/app.c     ****   uint64_t current_total;
 142:Src/app.c     ****   uint64_t current_thread_total;
 143:Src/app.c     ****   uint64_t prev_total;
 144:Src/app.c     ****   uint64_t prev_thread_total;
 145:Src/app.c     ****   struct {
 146:Src/app.c     ****     uint64_t total;
 147:Src/app.c     ****     uint64_t thread;
 148:Src/app.c     ****     uint32_t tick;
 149:Src/app.c     ****   } history[CPU_LOAD_HISTORY_DEPTH];
 150:Src/app.c     **** } cpuload_info_t;
 151:Src/app.c     **** 
 152:Src/app.c     **** /**
 153:Src/app.c     ****  * @brief Holds all information for a single detected hand/face instance.
 154:Src/app.c     ****  * @details This is the main data structure linking the output of the first model
 155:Src/app.c     ****  * to the input of the second, and finally to the display.
 156:Src/app.c     ****  */
 157:Src/app.c     **** typedef struct {
 158:Src/app.c     ****   int is_valid;             /* Flag to check if the detection in this struct is current. */
 159:Src/app.c     ****   pd_pp_box_t pd_hands;     /* Palm Detector raw output. */
 160:Src/app.c     ****   roi_t roi;            /* Region of Interest for the detected hand. */
 161:Src/app.c     ****   ld_point_t ld_landmarks[LD_LANDMARK_NB];        /* Final output from the landmark model */
 162:Src/app.c     **** } hand_info_t;
 163:Src/app.c     **** 
 164:Src/app.c     **** /**
 165:Src/app.c     ****  * @brief Holds all information for a single detected hand/face instance.
 166:Src/app.c     ****  * @details This is the main data structure linking the output of the first model
 167:Src/app.c     ****  * to the input of the second, and finally to the display.
 168:Src/app.c     ****  */
 169:Src/app.c     **** typedef struct {
 170:Src/app.c     ****   int is_valid;             /* Flag to check if the detection in this struct is current. */
 171:Src/app.c     ****   pd_pp_box_t pd_hands;     /* Palm Detector raw output. */
 172:Src/app.c     ****   roi_t roi;            /* Region of Interest for the detected hand. */
 173:Src/app.c     ****   ld_point_t ld_landmarks[LD_LANDMARK_NB];        /* Final output from the landmark model */
 174:Src/app.c     **** } face_info_t;
 175:Src/app.c     **** 
 176:Src/app.c     **** 
 177:Src/app.c     **** /**
 178:Src/app.c     ****  * @brief Aggregates all information needed by the display thread to render one frame.
 179:Src/app.c     ****  */
 180:Src/app.c     **** typedef struct {
 181:Src/app.c     ****   float nn_period_ms;
 182:Src/app.c     ****   uint32_t pd_ms;
 183:Src/app.c     ****   uint32_t hl_ms;
 184:Src/app.c     ****   uint32_t pp_ms;
ARM GAS  /tmp/ccHyRziO.s 			page 16


 185:Src/app.c     ****   uint32_t disp_ms;
 186:Src/app.c     ****   int is_ld_displayed;    /* Toggle for showing landmarks. */
 187:Src/app.c     ****   int is_pd_displayed;    /* Toggle for showing palm detector boxes. */
 188:Src/app.c     ****   int pd_hand_nb;       /* Number of valid hands detected by the palm detector. */
 189:Src/app.c     ****   float pd_max_prob;      /* Maximum confidence score of the detected hands. */
 190:Src/app.c     ****   hand_info_t hands[PD_MAX_HAND_NB];  /* Array of detected hands. */
 191:Src/app.c     **** } display_info_t;
 192:Src/app.c     **** 
 193:Src/app.c     **** /**
 194:Src/app.c     ****  * @brief A wrapper for the display_info_t struct to make it thread-safe.
 195:Src/app.c     ****  */
 196:Src/app.c     **** typedef struct {
 197:Src/app.c     ****   SemaphoreHandle_t update;         /* Semaphore to signal that new info is ready. */
 198:Src/app.c     ****   StaticSemaphore_t update_buffer;  
 199:Src/app.c     ****   SemaphoreHandle_t lock;           /* Mutex to protect access to the 'info' struct. */
 200:Src/app.c     ****   StaticSemaphore_t lock_buffer;
 201:Src/app.c     ****   display_info_t info;
 202:Src/app.c     **** } display_t;
 203:Src/app.c     **** 
 204:Src/app.c     **** /**
 205:Src/app.c     ****  * @brief Encapsulates all data related to the Palm Detector (PD) model.
 206:Src/app.c     ****  * @details This will be adapted for our Face Detector (FD) model.
 207:Src/app.c     ****  */
 208:Src/app.c     **** typedef struct {
 209:Src/app.c     ****   uint32_t nn_in_len;       /* Size of the model's input tensor. */
 210:Src/app.c     ****   float *prob_out;          /* Output probabilities for each detected hand. */
 211:Src/app.c     ****   uint32_t prob_out_len;
 212:Src/app.c     ****   float *boxes_out;         /* Pointer to the bounding box output tensor. */
 213:Src/app.c     ****   uint32_t boxes_out_len;
 214:Src/app.c     ****   pd_model_pp_static_param_t static_param;    /* Parameters for post-processing. */
 215:Src/app.c     ****   pd_postprocess_out_t pd_out;    /* Struct to hold post-processing results. */
 216:Src/app.c     **** } pd_model_info_t;
 217:Src/app.c     **** 
 218:Src/app.c     **** /**
 219:Src/app.c     ****  * @brief Encapsulates all data related to the YOLO model.
 220:Src/app.c     ****  * @details This struct holds pointers to the model's raw output and contains the
 221:Src/app.c     ****  * necessary parameters and buffers for the YOLOv8 post-processing library.
 222:Src/app.c     ****  */
 223:Src/app.c     **** typedef struct {
 224:Src/app.c     ****   /* Model I/O Info */
 225:Src/app.c     ****   uint32_t nn_in_len;               /* Size of the model's input tensor. */
 226:Src/app.c     ****   void *raw_output_tensor;          /* Pointer to the single raw output tensor from YOLOv8. */
 227:Src/app.c     ****   uint32_t raw_output_len;          /* Size of the raw output tensor. */
 228:Src/app.c     **** 
 229:Src/app.c     ****   /* Post-Processing Parameters & Buffers */
 230:Src/app.c     ****   yolov8_pp_static_param_t pp_params; /* Static configuration for the YOLOv8 post-processing librar
 231:Src/app.c     ****   od_pp_out_t pp_output;              /* Struct to hold the final, processed detection results. */
 232:Src/app.c     ****   od_pp_outBuffer_t final_boxes[YOLO_MAX_NB]; /* The actual buffer to store the final bounding boxe
 233:Src/app.c     **** 
 234:Src/app.c     **** } yolo_model_info_t;
 235:Src/app.c     **** 
 236:Src/app.c     **** /**
 237:Src/app.c     ****  * @brief Encapsulates all data related to the Hand Landmark (HL) model.
 238:Src/app.c     ****  * @details This will be adapted for our Face Landmark model.
 239:Src/app.c     ****  */
 240:Src/app.c     **** typedef struct {
 241:Src/app.c     ****   uint8_t *nn_in;       /* Pointer to the model's input tensor. */
ARM GAS  /tmp/ccHyRziO.s 			page 17


 242:Src/app.c     ****   uint32_t nn_in_len;
 243:Src/app.c     ****   float *prob_out;      /* Pointer to the landmark presence probability output. */
 244:Src/app.c     ****   uint32_t prob_out_len;
 245:Src/app.c     ****   float *landmarks_out; /* Pointer to the landmark coordinates output tensor. */
 246:Src/app.c     ****   uint32_t landmarks_out_len;
 247:Src/app.c     **** } hl_model_info_t;
 248:Src/app.c     **** 
 249:Src/app.c     **** /**
 250:Src/app.c     ****  * @brief Encapsulates all data related to the Face Landmark model.
 251:Src/app.c     ****  */
 252:Src/app.c     **** typedef struct {
 253:Src/app.c     ****   uint8_t *nn_in;       /* Pointer to the model's input tensor. */
 254:Src/app.c     ****   uint32_t nn_in_len;
 255:Src/app.c     ****   float *prob_out;      /* Pointer to the landmark presence probability output. */
 256:Src/app.c     ****   uint32_t prob_out_len;
 257:Src/app.c     ****   float *landmarks_out; /* Pointer to the landmark coordinates output tensor. */
 258:Src/app.c     ****   uint32_t landmarks_out_len;
 259:Src/app.c     **** } fl_model_info_t;
 260:Src/app.c     **** 
 261:Src/app.c     **** 
 262:Src/app.c     **** /**
 263:Src/app.c     ****  * @brief A simple structure to manage a UI button's state and callback.
 264:Src/app.c     ****  */
 265:Src/app.c     **** typedef struct {
 266:Src/app.c     ****   Button_TypeDef button_id;
 267:Src/app.c     ****   int prev_state;
 268:Src/app.c     ****   void (*on_click_handler)(void *cb_args);
 269:Src/app.c     ****   void *cb_args;
 270:Src/app.c     **** } button_t;
 271:Src/app.c     **** 
 272:Src/app.c     **** /* Globals */
 273:Src/app.c     **** 
 274:Src/app.c     **** /* Rectangle definitions for the full background and foreground layers. */
 275:Src/app.c     **** static Rectangle_TypeDef lcd_bg_area = {
 276:Src/app.c     ****   .X0 = 0,
 277:Src/app.c     ****   .Y0 = 0,
 278:Src/app.c     ****   .XSize = LCD_BG_WIDTH,
 279:Src/app.c     ****   .YSize = LCD_BG_HEIGHT,
 280:Src/app.c     **** };
 281:Src/app.c     **** 
 282:Src/app.c     **** static Rectangle_TypeDef lcd_fg_area = {
 283:Src/app.c     ****   .X0 = 0,
 284:Src/app.c     ****   .Y0 = 0,
 285:Src/app.c     ****   .XSize = LCD_FG_WIDTH,
 286:Src/app.c     ****   .YSize = LCD_FG_HEIGHT,
 287:Src/app.c     **** };
 288:Src/app.c     **** 
 289:Src/app.c     **** /* The main display buffers. This is a set of 3+ full-frame buffers for smooth video.
 290:Src/app.c     ****    ALIGN_32 ensures 32-byte alignment for performance (DMA/cache).
 291:Src/app.c     ****    IN_PSRAM places this large buffer in external PSRAM. */
 292:Src/app.c     **** /* Lcd Background Buffer */
 293:Src/app.c     **** static uint8_t lcd_bg_buffer[DISPLAY_BUFFER_NB][LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP] ALIGN_3
 294:Src/app.c     **** static int lcd_bg_buffer_disp_idx = 1;
 295:Src/app.c     **** static int lcd_bg_buffer_capt_idx = 0;
 296:Src/app.c     **** /* Lcd Foreground Buffer */
 297:Src/app.c     **** static uint8_t lcd_fg_buffer[2][LCD_FG_WIDTH * LCD_FG_HEIGHT* 2] ALIGN_32 IN_PSRAM;
 298:Src/app.c     **** static int lcd_fg_buffer_rd_idx;
ARM GAS  /tmp/ccHyRziO.s 			page 18


 299:Src/app.c     **** static display_t disp = {
 300:Src/app.c     ****   .info.is_ld_displayed = 1,
 301:Src/app.c     ****   .info.is_pd_displayed = 0,
 302:Src/app.c     **** };
 303:Src/app.c     **** static cpuload_info_t cpu_load;
 304:Src/app.c     **** /* screen buffer */
 305:Src/app.c     **** static uint8_t screen_buffer[LCD_BG_WIDTH * LCD_BG_HEIGHT * 2] ALIGN_32 IN_PSRAM;
 306:Src/app.c     **** 
 307:Src/app.c     **** /* model */
 308:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(palm_detector);
 309:Src/app.c     ****  /* Declare the necessary runtime instances and global buffers to hold outputs */
 310:Src/app.c     ****  /* palm detector */
 311:Src/app.c     **** static roi_t rois[PD_MAX_HAND_NB];
 312:Src/app.c     ****  /* hand landmark */
 313:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(hand_landmark);
 314:Src/app.c     **** static ld_point_t ld_landmarks[PD_MAX_HAND_NB][LD_LANDMARK_NB];
 315:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(yolo_detector);
 316:Src/app.c     **** static roi_t rois_yolo[YOLO_MAX_NB];
 317:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(face_landmark);
 318:Src/app.c     **** static ld_point_t fl_landmarks[1][FL_LANDMARK_NB]; // Use new constants
 319:Src/app.c     **** /* Counters for frame synchronization. */
 320:Src/app.c     **** static uint32_t frame_event_nb;
 321:Src/app.c     **** static volatile uint32_t frame_event_nb_for_resize;
 322:Src/app.c     **** 
 323:Src/app.c     **** /*TODO: UPDATE THE DEFINED MACROS UNDER app.h
 324:Src/app.c     **** * OR postprocess_conf.h which defines the postprocessing type, we should be able to define it to YO
 325:Src/app.c     **** */
 326:Src/app.c     ****  /* nn input buffers */
 327:Src/app.c     **** static uint8_t nn_input_buffers[2][NN_WIDTH * NN_HEIGHT * NN_BPP] ALIGN_32 IN_PSRAM;
 328:Src/app.c     **** static bqueue_t nn_input_queue;
 329:Src/app.c     **** 
 330:Src/app.c     **** /* --- RTOS Task (Thread) Declarations --- */
 331:Src/app.c     **** /* Statically allocates the memory for the three main application tasks and their stacks. */static 
 332:Src/app.c     **** static StackType_t nn_thread_stack[2 * configMINIMAL_STACK_SIZE];
 333:Src/app.c     **** static StaticTask_t dp_thread;
 334:Src/app.c     **** static StackType_t dp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 335:Src/app.c     **** static StaticTask_t isp_thread;
 336:Src/app.c     **** static StackType_t isp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 337:Src/app.c     **** static SemaphoreHandle_t isp_sem;
 338:Src/app.c     **** static StaticSemaphore_t isp_sem_buffer;
 339:Src/app.c     **** 
 340:Src/app.c     **** static GFXMMU_HandleTypeDef hgfxmmu;
 341:Src/app.c     **** static nema_cmdlist_t cl;
 342:Src/app.c     **** 
 343:Src/app.c     **** static int is_cache_enable()
 344:Src/app.c     **** {
 345:Src/app.c     **** #if defined(USE_DCACHE)
 346:Src/app.c     ****   return 1;
 347:Src/app.c     **** #else
 348:Src/app.c     ****   return 0;
 349:Src/app.c     **** #endif
 350:Src/app.c     **** }
 351:Src/app.c     **** 
 352:Src/app.c     **** /* THESE FUNCTIONS ARE TO BE DEPRECIATED*/
 353:Src/app.c     **** 
 354:Src/app.c     **** /** HELPER FUNCTIONS
 355:Src/app.c     ****  * @brief Normalizes an angle to the range [-PI, PI].
ARM GAS  /tmp/ccHyRziO.s 			page 19


 356:Src/app.c     ****  * @param angle The input angle in radians.
 357:Src/app.c     ****  * @return The equivalent angle within the range [-PI, PI].
 358:Src/app.c     ****  */
 359:Src/app.c     **** static float pd_normalize_angle(float angle)
 360:Src/app.c     **** {
 361:Src/app.c     ****   return angle - 2 * M_PI * floorf((angle - (-M_PI)) / (2 * M_PI));
 362:Src/app.c     **** }
 363:Src/app.c     **** 
 364:Src/app.c     **** static float pd_cook_rotation(float angle)
 365:Src/app.c     **** {
 366:Src/app.c     ****   return angle;
 367:Src/app.c     **** }
 368:Src/app.c     **** 
 369:Src/app.c     **** static float pd_compute_rotation(pd_pp_box_t *box)
 370:Src/app.c     **** {
 371:Src/app.c     ****   float x0, y0, x1, y1;
 372:Src/app.c     ****   float rotation;
 373:Src/app.c     **** 
 374:Src/app.c     ****   x0 = box->pKps[0].x;
 375:Src/app.c     ****   y0 = box->pKps[0].y;
 376:Src/app.c     ****   x1 = box->pKps[2].x;
 377:Src/app.c     ****   y1 = box->pKps[2].y;
 378:Src/app.c     **** 
 379:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
 380:Src/app.c     **** 
 381:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
 382:Src/app.c     **** }
 383:Src/app.c     **** /* END OF DEPRECIATED FUNCTIONS */
 384:Src/app.c     **** 
 385:Src/app.c     **** /* TO WRITE EQUIVALENT FOR YOLO FACE DETECTOR*/
 386:Src/app.c     **** 
 387:Src/app.c     **** /**
 388:Src/app.c     ****  * @brief Converts normalized AI model coordinates (0.0 to 1.0) to screen pixel coordinates.
 389:Src/app.c     ****  * @details The AI model outputs coordinates relative to its square input buffer. This
 390:Src/app.c     ****  * function scales them to match the final display resolution.
 391:Src/app.c     ****  * @param box Pointer to the detection box with normalized coordinates.
 392:Src/app.c     ****  */
 393:Src/app.c     **** static void cvt_pd_coord_to_screen_coord(pd_pp_box_t *box)
 394:Src/app.c     **** {
 395:Src/app.c     ****   int i;
 396:Src/app.c     **** 
 397:Src/app.c     ****   /* This is not a typo. Since screen aspect ratio was conserved. We really want to use LCD_BG_WIDT
 398:Src/app.c     ****    * y positions.
 399:Src/app.c     ****    */
 400:Src/app.c     **** 
 401:Src/app.c     ****   box->x_center *= LCD_BG_WIDTH;
 402:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 403:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
 404:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 405:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 406:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 407:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 408:Src/app.c     ****   }
 409:Src/app.c     **** }
 410:Src/app.c     **** 
 411:Src/app.c     **** /**
 412:Src/app.c     ****  * @brief Adjusts a Region of Interest (ROI) by shifting its center and scaling its size.
ARM GAS  /tmp/ccHyRziO.s 			page 20


 413:Src/app.c     ****  * @details This is used to create the final input for the second model. It takes the
 414:Src/app.c     ****  * initial detection, shifts it, and scales it up to ensure the full object (e.g.,
 415:Src/app.c     ****  * the whole hand, not just the palm) is included. It also makes the ROI a square.
 416:Src/app.c     ****  */
 417:Src/app.c     **** static void roi_shift_and_scale(roi_t *roi, float shift_x, float shift_y, float scale_x, float scal
 418:Src/app.c     **** {
 419:Src/app.c     ****   float long_side;
 420:Src/app.c     ****   float sx, sy;
 421:Src/app.c     **** 
 422:Src/app.c     ****   sx = (roi->w * shift_x * cos(roi->rotation) - roi->h * shift_y * sin(roi->rotation));
 423:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 424:Src/app.c     **** 
 425:Src/app.c     ****   roi->cx += sx;
 426:Src/app.c     ****   roi->cy += sy;
 427:Src/app.c     **** 
 428:Src/app.c     ****   long_side = MAX(roi->w, roi->h);
 429:Src/app.c     ****   roi->w = long_side;
 430:Src/app.c     ****   roi->h = long_side;
 431:Src/app.c     **** 
 432:Src/app.c     ****   roi->w *= scale_x;
 433:Src/app.c     ****   roi->h *= scale_y;
 434:Src/app.c     **** }
 435:Src/app.c     **** 
 436:Src/app.c     **** /* TO WRITE EQUIVALENT FUNCTION FOR YOLO FACE DETECTOR
 437:Src/app.c     ****  * WHICH HANDLES THE MULTI-CLASS OUTPUT OF THE YOLO DETECTOR
 438:Src/app.c     ****  * AND CONVERTS IT INTO A PROPER FACE ROI FOR THE LANDMARK MODEL.
 439:Src/app.c     **** */
 440:Src/app.c     **** /**
 441:Src/app.c     ****  * @brief Converts the output of the first model (detector) into an ROI for the second model.
 442:Src/app.c     ****  * @details This is the core "glue" function between the two AI models. It takes the raw
 443:Src/app.c     ****  * palm/face detection and transforms it into a properly scaled, rotated, and positioned
 444:Src/app.c     ****  * ROI that the second (landmark) model can use.
 445:Src/app.c     ****  * @param box The raw output from the palm/face detector.
 446:Src/app.c     ****  * @param roi The ROI structure to be filled for the landmark model.
 447:Src/app.c     ****  */
 448:Src/app.c     **** static void pd_box_to_roi(pd_pp_box_t *box,  roi_t *roi)
 449:Src/app.c     **** {
 450:Src/app.c     ****   const float shift_x = 0;
 451:Src/app.c     ****   const float shift_y = -0.5;
 452:Src/app.c     ****   const float scale = 2.6;
 453:Src/app.c     **** 
 454:Src/app.c     ****   roi->cx = box->x_center;
 455:Src/app.c     ****   roi->cy = box->y_center;
 456:Src/app.c     ****   roi->w = box->width;
 457:Src/app.c     ****   roi->h = box->height;
 458:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 459:Src/app.c     **** 
 460:Src/app.c     ****   roi_shift_and_scale(roi, shift_x, shift_y, scale, scale);
 461:Src/app.c     **** 
 462:Src/app.c     **** }
 463:Src/app.c     **** 
 464:Src/app.c     **** /**
 465:Src/app.c     ****  * @brief A utility function to copy data from one detection box struct to another.
 466:Src/app.c     ****  * TODO: ADAPT INTO COPYING FD BOXES
 467:Src/app.c     ****  */
 468:Src/app.c     **** static void copy_pd_box(pd_pp_box_t *dst, pd_pp_box_t *src)
 469:Src/app.c     **** {
ARM GAS  /tmp/ccHyRziO.s 			page 21


  84              		.loc 1 469 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
 470:Src/app.c     ****   int i;
  88              		.loc 1 470 3 view .LVU14
 471:Src/app.c     **** 
 472:Src/app.c     ****   dst->prob = src->prob;
  89              		.loc 1 472 3 view .LVU15
 469:Src/app.c     ****   int i;
  90              		.loc 1 469 1 is_stmt 0 view .LVU16
  91 0000 30B5     		push	{r4, r5, lr}
  92              		.cfi_def_cfa_offset 12
  93              		.cfi_offset 4, -12
  94              		.cfi_offset 5, -8
  95              		.cfi_offset 14, -4
 473:Src/app.c     ****   dst->x_center = src->x_center;
 474:Src/app.c     ****   dst->y_center = src->y_center;
 475:Src/app.c     ****   dst->width = src->width;
 476:Src/app.c     ****   dst->height = src->height;
 477:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
  96              		.loc 1 477 10 view .LVU17
  97 0002 4FF0070E 		mov	lr, #7
 472:Src/app.c     ****   dst->x_center = src->x_center;
  98              		.loc 1 472 18 view .LVU18
  99 0006 0B68     		ldr	r3, [r1]	@ float
 100              		.loc 1 477 10 view .LVU19
 101 0008 4EF001E0 		dls	lr, lr
 472:Src/app.c     ****   dst->x_center = src->x_center;
 102              		.loc 1 472 13 view .LVU20
 103 000c 0360     		str	r3, [r0]	@ float
 473:Src/app.c     ****   dst->x_center = src->x_center;
 104              		.loc 1 473 3 is_stmt 1 view .LVU21
 473:Src/app.c     ****   dst->x_center = src->x_center;
 105              		.loc 1 473 22 is_stmt 0 view .LVU22
 106 000e 4B68     		ldr	r3, [r1, #4]	@ float
 478:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 107              		.loc 1 478 23 view .LVU23
 108 0010 4C69     		ldr	r4, [r1, #20]
 473:Src/app.c     ****   dst->x_center = src->x_center;
 109              		.loc 1 473 17 view .LVU24
 110 0012 4360     		str	r3, [r0, #4]	@ float
 474:Src/app.c     ****   dst->width = src->width;
 111              		.loc 1 474 3 is_stmt 1 view .LVU25
 474:Src/app.c     ****   dst->width = src->width;
 112              		.loc 1 474 22 is_stmt 0 view .LVU26
 113 0014 8B68     		ldr	r3, [r1, #8]	@ float
 114              		.loc 1 478 8 view .LVU27
 115 0016 4569     		ldr	r5, [r0, #20]
 474:Src/app.c     ****   dst->width = src->width;
 116              		.loc 1 474 17 view .LVU28
 117 0018 8360     		str	r3, [r0, #8]	@ float
 475:Src/app.c     ****   dst->height = src->height;
 118              		.loc 1 475 3 is_stmt 1 view .LVU29
 475:Src/app.c     ****   dst->height = src->height;
 119              		.loc 1 475 19 is_stmt 0 view .LVU30
 120 001a CB68     		ldr	r3, [r1, #12]	@ float
ARM GAS  /tmp/ccHyRziO.s 			page 22


 475:Src/app.c     ****   dst->height = src->height;
 121              		.loc 1 475 14 view .LVU31
 122 001c C360     		str	r3, [r0, #12]	@ float
 476:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 123              		.loc 1 476 3 is_stmt 1 view .LVU32
 476:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 124              		.loc 1 476 20 is_stmt 0 view .LVU33
 125 001e 0B69     		ldr	r3, [r1, #16]	@ float
 476:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 126              		.loc 1 476 15 view .LVU34
 127 0020 0361     		str	r3, [r0, #16]	@ float
 477:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 128              		.loc 1 477 3 is_stmt 1 view .LVU35
 129              	.LVL5:
 477:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 130              		.loc 1 477 18 discriminator 1 view .LVU36
 477:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 131              		.loc 1 477 10 is_stmt 0 view .LVU37
 132 0022 0023     		movs	r3, #0
 133              	.LVL6:
 134              	.L7:
 135              		.loc 1 478 5 is_stmt 1 view .LVU38
 136              		.loc 1 478 18 is_stmt 0 view .LVU39
 137 0024 05EBC302 		add	r2, r5, r3, lsl #3
 138 0028 04EBC301 		add	r1, r4, r3, lsl #3
 139 002c 03C9     		ldm	r1, {r0, r1}
 477:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 140              		.loc 1 477 50 discriminator 3 view .LVU40
 141 002e 0133     		adds	r3, r3, #1
 142              	.LVL7:
 143              		.loc 1 478 18 view .LVU41
 144 0030 82E80300 		stm	r2, {r0, r1}
 477:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 145              		.loc 1 477 50 is_stmt 1 discriminator 3 view .LVU42
 146              	.LVL8:
 477:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 147              		.loc 1 477 18 discriminator 1 view .LVU43
 148 0034 0FF00BC0 		le	lr, .L7
 479:Src/app.c     **** }
 149              		.loc 1 479 1 is_stmt 0 view .LVU44
 150 0038 30BD     		pop	{r4, r5, pc}
 151              		.cfi_endproc
 152              	.LFE7351:
 154              		.section	.text.clamp_point,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	clamp_point:
 161              	.LVL9:
 162              	.LFB7366:
 480:Src/app.c     **** 
 481:Src/app.c     **** /**
 482:Src/app.c     ****  * @brief Initializes a hardware button using the Board Support Package (BSP).
 483:Src/app.c     ****  * @param on_click_handler Function pointer to call when the button is pressed.
 484:Src/app.c     ****  */
 485:Src/app.c     **** static void button_init(button_t *b, Button_TypeDef id, void (*on_click_handler)(void *), void *cb_
ARM GAS  /tmp/ccHyRziO.s 			page 23


 486:Src/app.c     **** {
 487:Src/app.c     ****   int ret;
 488:Src/app.c     **** 
 489:Src/app.c     ****   ret = BSP_PB_Init(id, BUTTON_MODE_GPIO);
 490:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 491:Src/app.c     **** 
 492:Src/app.c     ****   b->button_id = id;
 493:Src/app.c     ****   b->on_click_handler = on_click_handler;
 494:Src/app.c     ****   b->prev_state = 0;
 495:Src/app.c     ****   b->cb_args = cb_args;
 496:Src/app.c     **** }
 497:Src/app.c     **** 
 498:Src/app.c     **** /**
 499:Src/app.c     ****  * @brief Polls a button's state and triggers its callback on a press event.
 500:Src/app.c     ****  * @details This should be called periodically in a UI or main task.
 501:Src/app.c     ****  */
 502:Src/app.c     **** static void button_process(button_t *b)
 503:Src/app.c     **** {
 504:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 505:Src/app.c     **** 
 506:Src/app.c     ****   if (state != b->prev_state && state && b->on_click_handler)
 507:Src/app.c     ****     b->on_click_handler(b->cb_args);
 508:Src/app.c     **** 
 509:Src/app.c     ****   b->prev_state = state;
 510:Src/app.c     **** }
 511:Src/app.c     **** 
 512:Src/app.c     **** /**
 513:Src/app.c     ****  * @brief Initializes the CPU load tracking structure.
 514:Src/app.c     ****  */
 515:Src/app.c     **** static void cpuload_init(cpuload_info_t *cpu_load)
 516:Src/app.c     **** {
 517:Src/app.c     ****   memset(cpu_load, 0, sizeof(cpuload_info_t));
 518:Src/app.c     **** }
 519:Src/app.c     **** 
 520:Src/app.c     **** /**
 521:Src/app.c     ****  * @brief Updates the CPU load history with a new data point.
 522:Src/app.c     ****  * @details Uses FreeRTOS's runtime counters to get total time and idle time.
 523:Src/app.c     ****  */
 524:Src/app.c     **** static void cpuload_update(cpuload_info_t *cpu_load)
 525:Src/app.c     **** {
 526:Src/app.c     ****   int i;
 527:Src/app.c     **** 
 528:Src/app.c     ****   cpu_load->history[1] = cpu_load->history[0];
 529:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 530:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 531:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 532:Src/app.c     **** 
 533:Src/app.c     ****   if (cpu_load->history[1].tick - cpu_load->history[2].tick < 1000)
 534:Src/app.c     ****     return ;
 535:Src/app.c     **** 
 536:Src/app.c     ****   for (i = 0; i < CPU_LOAD_HISTORY_DEPTH - 2; i++)
 537:Src/app.c     ****     cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 1 - i] = cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 
 538:Src/app.c     **** }
 539:Src/app.c     **** 
 540:Src/app.c     **** /**
 541:Src/app.c     ****  * @brief Calculates CPU load percentages over different time windows.
 542:Src/app.c     ****  */
ARM GAS  /tmp/ccHyRziO.s 			page 24


 543:Src/app.c     **** static void cpuload_get_info(cpuload_info_t *cpu_load, float *cpu_load_last, float *cpu_load_last_s
 544:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 545:Src/app.c     **** {
 546:Src/app.c     ****   if (cpu_load_last)
 547:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 548:Src/app.c     ****                      (cpu_load->history[0].total - cpu_load->history[1].total);
 549:Src/app.c     ****   if (cpu_load_last_second)
 550:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 551:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 552:Src/app.c     ****   if (cpu_load_last_five_seconds)
 553:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 554:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[7].total);
 555:Src/app.c     **** }
 556:Src/app.c     **** 
 557:Src/app.c     **** /**
 558:Src/app.c     ****  * @brief Initializes a thread-safe buffer queue (bqueue).
 559:Src/app.c     ****  * @details Creates the FreeRTOS semaphores needed for producer-consumer synchronization.
 560:Src/app.c     ****  * @return 0 on success, -1 on failure.
 561:Src/app.c     ****  */
 562:Src/app.c     **** static int bqueue_init(bqueue_t *bq, int buffer_nb, uint8_t **buffers)
 563:Src/app.c     **** {
 564:Src/app.c     ****   int i;
 565:Src/app.c     **** 
 566:Src/app.c     ****   if (buffer_nb > BQUEUE_MAX_BUFFERS)
 567:Src/app.c     ****     return -1;
 568:Src/app.c     **** 
 569:Src/app.c     ****   bq->free = xSemaphoreCreateCountingStatic(buffer_nb, buffer_nb, &bq->free_buffer);
 570:Src/app.c     ****   if (!bq->free)
 571:Src/app.c     ****     goto free_sem_error;
 572:Src/app.c     ****   bq->ready = xSemaphoreCreateCountingStatic(buffer_nb, 0, &bq->ready_buffer);
 573:Src/app.c     ****   if (!bq->ready)
 574:Src/app.c     ****     goto ready_sem_error;
 575:Src/app.c     **** 
 576:Src/app.c     ****   bq->buffer_nb = buffer_nb;
 577:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 578:Src/app.c     ****     assert(buffers[i]);
 579:Src/app.c     ****     bq->buffers[i] = buffers[i];
 580:Src/app.c     ****   }
 581:Src/app.c     ****   bq->free_idx = 0;
 582:Src/app.c     ****   bq->ready_idx = 0;
 583:Src/app.c     **** 
 584:Src/app.c     ****   return 0;
 585:Src/app.c     **** 
 586:Src/app.c     **** ready_sem_error:
 587:Src/app.c     ****   vSemaphoreDelete(bq->free);
 588:Src/app.c     **** free_sem_error:
 589:Src/app.c     ****   return -1;
 590:Src/app.c     **** }
 591:Src/app.c     **** 
 592:Src/app.c     **** /**
 593:Src/app.c     ****  * @brief Gets a free buffer from the queue for a producer to write to.
 594:Src/app.c     ****  * @param is_blocking If true, will wait indefinitely for a free buffer.
 595:Src/app.c     ****  * @return Pointer to a free buffer, or NULL if non-blocking and none are available.
 596:Src/app.c     ****  */
 597:Src/app.c     **** static uint8_t *bqueue_get_free(bqueue_t *bq, int is_blocking)
 598:Src/app.c     **** {
 599:Src/app.c     ****   uint8_t *res;
ARM GAS  /tmp/ccHyRziO.s 			page 25


 600:Src/app.c     ****   int ret;
 601:Src/app.c     **** 
 602:Src/app.c     ****   ret = xSemaphoreTake(bq->free, is_blocking ? portMAX_DELAY : 0);
 603:Src/app.c     ****   if (ret == pdFALSE)
 604:Src/app.c     ****     return NULL;
 605:Src/app.c     **** 
 606:Src/app.c     ****   res = bq->buffers[bq->free_idx];
 607:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 608:Src/app.c     **** 
 609:Src/app.c     ****   return res;
 610:Src/app.c     **** }
 611:Src/app.c     **** 
 612:Src/app.c     **** /**
 613:Src/app.c     ****  * @brief Returns a buffer to the free pool (used by a consumer).
 614:Src/app.c     ****  */
 615:Src/app.c     **** static void bqueue_put_free(bqueue_t *bq)
 616:Src/app.c     **** {
 617:Src/app.c     ****   int ret;
 618:Src/app.c     **** 
 619:Src/app.c     ****   ret = xSemaphoreGive(bq->free);
 620:Src/app.c     ****   assert(ret == pdTRUE);
 621:Src/app.c     **** }
 622:Src/app.c     **** 
 623:Src/app.c     **** /**
 624:Src/app.c     ****  * @brief Gets a ready buffer from the queue for a consumer to read from.
 625:Src/app.c     ****  * @details This function will block until a buffer is ready.
 626:Src/app.c     ****  * @return Pointer to a ready buffer.
 627:Src/app.c     ****  */
 628:Src/app.c     **** static uint8_t *bqueue_get_ready(bqueue_t *bq)
 629:Src/app.c     **** {
 630:Src/app.c     ****   uint8_t *res;
 631:Src/app.c     ****   int ret;
 632:Src/app.c     **** 
 633:Src/app.c     ****   ret = xSemaphoreTake(bq->ready, portMAX_DELAY);
 634:Src/app.c     ****   assert(ret == pdTRUE);
 635:Src/app.c     **** 
 636:Src/app.c     ****   res = bq->buffers[bq->ready_idx];
 637:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 638:Src/app.c     **** 
 639:Src/app.c     ****   return res;
 640:Src/app.c     **** }
 641:Src/app.c     **** 
 642:Src/app.c     **** /**
 643:Src/app.c     ****  * @brief Puts a buffer into the ready pool (used by a producer).
 644:Src/app.c     ****  * @details Handles being called from an Interrupt Service Routine (ISR).
 645:Src/app.c     ****  */
 646:Src/app.c     **** static void bqueue_put_ready(bqueue_t *bq)
 647:Src/app.c     **** {
 648:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 649:Src/app.c     ****   int ret;
 650:Src/app.c     **** 
 651:Src/app.c     ****   if (xPortIsInsideInterrupt()) {
 652:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 653:Src/app.c     ****     assert(ret == pdTRUE);
 654:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 655:Src/app.c     ****   } else {
 656:Src/app.c     ****     ret = xSemaphoreGive(bq->ready);
ARM GAS  /tmp/ccHyRziO.s 			page 26


 657:Src/app.c     ****     assert(ret == pdTRUE);
 658:Src/app.c     ****   }
 659:Src/app.c     **** }
 660:Src/app.c     **** 
 661:Src/app.c     **** /**
 662:Src/app.c     ****  * @brief Updates the display controller to show a new background buffer.
 663:Src/app.c     ****  * @details This function directly interacts with the screen layer driver to perform
 664:Src/app.c     ****  * a "flip," making the newly rendered frame visible.
 665:Src/app.c     ****  * @param next_disp_idx The index of the buffer in lcd_bg_buffer to display.
 666:Src/app.c     ****  */
 667:Src/app.c     **** static void reload_bg_layer(int next_disp_idx)
 668:Src/app.c     **** {
 669:Src/app.c     ****   int ret;
 670:Src/app.c     **** 
 671:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_bg_buffer[next_disp_idx], SCRL_LAYER_0);
 672:Src/app.c     ****   assert(ret == 0);
 673:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 674:Src/app.c     ****   assert(ret == 0);
 675:Src/app.c     **** 
 676:Src/app.c     ****   ret = SRCL_Update();
 677:Src/app.c     ****   assert(ret == 0);
 678:Src/app.c     **** }
 679:Src/app.c     **** 
 680:Src/app.c     **** /**
 681:Src/app.c     ****  * @brief Frame event callback for the main display pipe (Pipe 1).
 682:Src/app.c     ****  * @details This function is triggered by a hardware interrupt every time the DCMIPP
 683:Src/app.c     ****  * has finished writing a new video frame for the display. It implements
 684:Src/app.c     ****  * a triple-buffering scheme for smooth, tear-free video.
 685:Src/app.c     ****  */
 686:Src/app.c     **** static void app_main_pipe_frame_event()
 687:Src/app.c     **** {
 688:Src/app.c     ****   /* Calculate the indices for the next display buffer and next capture buffer in a circular manner
 689:Src/app.c     ****   int next_disp_idx = (lcd_bg_buffer_disp_idx + 1) % DISPLAY_BUFFER_NB;
 690:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 691:Src/app.c     ****   int ret;
 692:Src/app.c     **** 
 693:Src/app.c     ****   /* Tell the DCMIPP hardware where to write the *next* frame it captures. */
 694:Src/app.c     ****   ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE1,
 695:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 696:Src/app.c     ****   assert(ret == HAL_OK);
 697:Src/app.c     **** 
 698:Src/app.c     ****   /* Update the global indices to track the buffers. */
 699:Src/app.c     ****   reload_bg_layer(next_disp_idx);
 700:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 701:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 702:Src/app.c     **** 
 703:Src/app.c     ****   frame_event_nb++;
 704:Src/app.c     **** }
 705:Src/app.c     **** 
 706:Src/app.c     **** /**
 707:Src/app.c     ****  * @brief Frame event callback for the ancillary NN pipe (Pipe 2).
 708:Src/app.c     ****  * @details This function is triggered by a hardware interrupt every time the DCMIPP
 709:Src/app.c     ****  * has finished writing a new, smaller frame for the AI model.
 710:Src/app.c     ****  */
 711:Src/app.c     **** static void app_ancillary_pipe_frame_event()
 712:Src/app.c     **** {
 713:Src/app.c     ****   uint8_t *next_buffer;
ARM GAS  /tmp/ccHyRziO.s 			page 27


 714:Src/app.c     ****   int ret;
 715:Src/app.c     **** 
 716:Src/app.c     ****   next_buffer = bqueue_get_free(&nn_input_queue, 0);
 717:Src/app.c     ****   if (next_buffer) {
 718:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 719:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 720:Src/app.c     ****     assert(ret == HAL_OK);
 721:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 722:Src/app.c     ****     frame_event_nb_for_resize = frame_event_nb - 1;
 723:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);     /* Put the buffer into the 'ready' queue so the NN task 
 724:Src/app.c     ****   }
 725:Src/app.c     **** }
 726:Src/app.c     **** 
 727:Src/app.c     **** /**
 728:Src/app.c     ****  * @brief VSYNC event callback for the display.
 729:Src/app.c     ****  * @details This is triggered by a hardware interrupt at the start of each vertical
 730:Src/app.c     ****  * blanking interval of the display. It's used to synchronize the camera's
 731:Src/app.c     ****  * Image Signal Processing (ISP) task with the display refresh rate.
 732:Src/app.c     ****  */
 733:Src/app.c     **** static void app_main_pipe_vsync_event()
 734:Src/app.c     **** {
 735:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 736:Src/app.c     ****   int ret;
 737:Src/app.c     **** 
 738:Src/app.c     ****   ret = xSemaphoreGiveFromISR(isp_sem, &xHigherPriorityTaskWoken);
 739:Src/app.c     ****   if (ret == pdTRUE)
 740:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 741:Src/app.c     **** }
 742:Src/app.c     **** 
 743:Src/app.c     **** /**
 744:Src/app.c     ****  * @brief Clamps a 2D point to ensure it's within the screen boundaries.
 745:Src/app.c     ****  * @return 1 if the point was moved, 0 otherwise.
 746:Src/app.c     ****  */
 747:Src/app.c     **** static int clamp_point(int *x, int *y)
 748:Src/app.c     **** {
 163              		.loc 1 748 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 749:Src/app.c     ****   int xi = *x;
 167              		.loc 1 749 3 view .LVU46
 168              		.loc 1 749 7 is_stmt 0 view .LVU47
 169 0000 0368     		ldr	r3, [r0]
 170              	.LVL10:
 750:Src/app.c     ****   int yi = *y;
 171              		.loc 1 750 3 is_stmt 1 view .LVU48
 748:Src/app.c     ****   int xi = *x;
 172              		.loc 1 748 1 is_stmt 0 view .LVU49
 173 0002 10B5     		push	{r4, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
 751:Src/app.c     **** 
 752:Src/app.c     ****   if (*x < 0)
 177              		.loc 1 752 6 view .LVU50
 178 0004 002B     		cmp	r3, #0
 753:Src/app.c     ****     *x = 0;
ARM GAS  /tmp/ccHyRziO.s 			page 28


 179              		.loc 1 753 8 view .LVU51
 180 0006 B8BF     		it	lt
 181 0008 0024     		movlt	r4, #0
 750:Src/app.c     **** 
 182              		.loc 1 750 7 view .LVU52
 183 000a 0A68     		ldr	r2, [r1]
 184              	.LVL11:
 752:Src/app.c     ****     *x = 0;
 185              		.loc 1 752 3 is_stmt 1 view .LVU53
 186              		.loc 1 753 5 view .LVU54
 187              		.loc 1 753 8 is_stmt 0 view .LVU55
 188 000c B8BF     		it	lt
 189 000e 0460     		strlt	r4, [r0]
 754:Src/app.c     ****   if (*y < 0)
 190              		.loc 1 754 3 is_stmt 1 view .LVU56
 191              		.loc 1 754 6 is_stmt 0 view .LVU57
 192 0010 0C68     		ldr	r4, [r1]
 193 0012 002C     		cmp	r4, #0
 755:Src/app.c     ****     *y = 0;
 194              		.loc 1 755 5 is_stmt 1 view .LVU58
 195              		.loc 1 755 8 is_stmt 0 view .LVU59
 196 0014 BCBF     		itt	lt
 197 0016 0024     		movlt	r4, #0
 198 0018 0C60     		strlt	r4, [r1]
 756:Src/app.c     ****   if (*x >= lcd_bg_area.XSize)
 199              		.loc 1 756 3 is_stmt 1 view .LVU60
 200              		.loc 1 756 6 is_stmt 0 view .LVU61
 201 001a 0468     		ldr	r4, [r0]
 202 001c B4F5487F 		cmp	r4, #800
 757:Src/app.c     ****     *x = lcd_bg_area.XSize - 1;
 203              		.loc 1 757 5 is_stmt 1 view .LVU62
 204              		.loc 1 757 8 is_stmt 0 view .LVU63
 205 0020 24BF     		itt	cs
 206 0022 40F21F34 		movwcs	r4, #799
 207 0026 0460     		strcs	r4, [r0]
 758:Src/app.c     ****   if (*y >= lcd_bg_area.YSize)
 208              		.loc 1 758 3 is_stmt 1 view .LVU64
 209              		.loc 1 758 6 is_stmt 0 view .LVU65
 210 0028 0C68     		ldr	r4, [r1]
 211 002a B4F5F07F 		cmp	r4, #480
 759:Src/app.c     ****     *y = lcd_bg_area.YSize - 1;
 212              		.loc 1 759 5 is_stmt 1 view .LVU66
 213              		.loc 1 759 8 is_stmt 0 view .LVU67
 214 002e 24BF     		itt	cs
 215 0030 40F2DF14 		movwcs	r4, #479
 216 0034 0C60     		strcs	r4, [r1]
 760:Src/app.c     **** 
 761:Src/app.c     ****   return (xi != *x) || (yi != *y);
 217              		.loc 1 761 3 is_stmt 1 view .LVU68
 218              		.loc 1 761 21 is_stmt 0 view .LVU69
 219 0036 0068     		ldr	r0, [r0]
 220              	.LVL12:
 221              		.loc 1 761 21 view .LVU70
 222 0038 9842     		cmp	r0, r3
 223 003a 04D1     		bne	.L15
 224              		.loc 1 761 21 discriminator 2 view .LVU71
 225 003c 0868     		ldr	r0, [r1]
ARM GAS  /tmp/ccHyRziO.s 			page 29


 226 003e 801A     		subs	r0, r0, r2
 227 0040 18BF     		it	ne
 228 0042 0120     		movne	r0, #1
 229              	.L9:
 762:Src/app.c     **** }
 230              		.loc 1 762 1 view .LVU72
 231 0044 10BD     		pop	{r4, pc}
 232              	.L15:
 761:Src/app.c     **** }
 233              		.loc 1 761 21 discriminator 3 view .LVU73
 234 0046 0120     		movs	r0, #1
 761:Src/app.c     **** }
 235              		.loc 1 761 21 view .LVU74
 236 0048 FCE7     		b	.L9
 237              		.cfi_endproc
 238              	.LFE7366:
 240              		.section	.text.decode_ld_landmark,"ax",%progbits
 241              		.align	1
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	decode_ld_landmark:
 247              	.LVL13:
 248              	.LFB7373:
 763:Src/app.c     **** 
 764:Src/app.c     **** /**
 765:Src/app.c     ****  * @brief Clamps a 2D point, keeping a minimum margin from the screen edges.
 766:Src/app.c     ****  * @return 1 if the point was moved, 0 otherwise.
 767:Src/app.c     ****  */
 768:Src/app.c     **** static int clamp_point_with_margin(int *x, int *y, int margin)
 769:Src/app.c     **** {
 770:Src/app.c     ****   int xi = *x;
 771:Src/app.c     ****   int yi = *y;
 772:Src/app.c     **** 
 773:Src/app.c     ****   if (*x < margin)
 774:Src/app.c     ****     *x = margin;
 775:Src/app.c     ****   if (*y < margin)
 776:Src/app.c     ****     *y = margin;
 777:Src/app.c     ****   if (*x >= lcd_bg_area.XSize - margin)
 778:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 779:Src/app.c     ****   if (*y >= lcd_bg_area.YSize - margin)
 780:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 781:Src/app.c     **** 
 782:Src/app.c     ****   return (xi != *x) || (yi != *y);
 783:Src/app.c     **** }
 784:Src/app.c     **** 
 785:Src/app.c     **** /**
 786:Src/app.c     ****  * @brief Draws the output of the first model (palm/face detector).
 787:Src/app.c     ****  * @param hand Pointer to the raw detection box data.
 788:Src/app.c     ****  */
 789:Src/app.c     **** static void display_pd_hand(pd_pp_box_t *hand)
 790:Src/app.c     **** {
 791:Src/app.c     ****   int xc, yc;
 792:Src/app.c     ****   int x0, y0;
 793:Src/app.c     ****   int x1, y1;
 794:Src/app.c     ****   int w, h;
 795:Src/app.c     ****   int i;
ARM GAS  /tmp/ccHyRziO.s 			page 30


 796:Src/app.c     **** 
 797:Src/app.c     ****   /* display box around palm */
 798:Src/app.c     ****   xc = (int)hand->x_center;
 799:Src/app.c     ****   yc = (int)hand->y_center;
 800:Src/app.c     ****   w = (int)hand->width;
 801:Src/app.c     ****   h = (int)hand->height;
 802:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 803:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 804:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 805:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 806:Src/app.c     ****   clamp_point(&x0, &y0);
 807:Src/app.c     ****   clamp_point(&x1, &y1);
 808:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 809:Src/app.c     **** 
 810:Src/app.c     ****   /* display palm key points */
 811:Src/app.c     ****   for (i = 0; i < 7; i++) {
 812:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 813:Src/app.c     **** 
 814:Src/app.c     ****     x0 = (int)hand->pKps[i].x;
 815:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 816:Src/app.c     ****     clamp_point(&x0, &y0);
 817:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 818:Src/app.c     ****   }
 819:Src/app.c     **** }
 820:Src/app.c     **** 
 821:Src/app.c     **** /**
 822:Src/app.c     ****  * @brief Rotates a 2D point around the origin.
 823:Src/app.c     ****  */
 824:Src/app.c     **** static void rotate_point(float pt[2], float rotation)
 825:Src/app.c     **** {
 826:Src/app.c     ****   float x = pt[0];
 827:Src/app.c     ****   float y = pt[1];
 828:Src/app.c     **** 
 829:Src/app.c     ****   pt[0] = cos(rotation) * x - sin(rotation) * y;
 830:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 831:Src/app.c     **** }
 832:Src/app.c     **** 
 833:Src/app.c     **** /**
 834:Src/app.c     ****  * @brief Calculates the four corner coordinates of a rotated ROI rectangle.
 835:Src/app.c     ****  */
 836:Src/app.c     **** static void roi_to_corners(roi_t *roi, float corners[4][2])
 837:Src/app.c     **** {
 838:Src/app.c     ****   const float corners_init[4][2] = {
 839:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 840:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 841:Src/app.c     ****     { roi->w / 2,  roi->h / 2},
 842:Src/app.c     ****     {-roi->w / 2,  roi->h / 2},
 843:Src/app.c     ****   };
 844:Src/app.c     ****   int i;
 845:Src/app.c     **** 
 846:Src/app.c     ****   memcpy(corners, corners_init, sizeof(corners_init));
 847:Src/app.c     ****   /* rotate */
 848:Src/app.c     ****   for (i = 0; i < 4; i++)
 849:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 850:Src/app.c     **** 
 851:Src/app.c     ****   /* shift */
 852:Src/app.c     ****   for (i = 0; i < 4; i++) {
ARM GAS  /tmp/ccHyRziO.s 			page 31


 853:Src/app.c     ****     corners[i][0] += roi->cx;
 854:Src/app.c     ****     corners[i][1] += roi->cy;
 855:Src/app.c     ****   }
 856:Src/app.c     **** }
 857:Src/app.c     **** 
 858:Src/app.c     **** /**
 859:Src/app.c     ****  * @brief Clamps all four corners of a rectangle to the screen boundaries.
 860:Src/app.c     ****  */
 861:Src/app.c     **** static int clamp_corners(float corners_in[4][2], int corners_out[4][2])
 862:Src/app.c     **** {
 863:Src/app.c     ****   int is_clamp = 0;
 864:Src/app.c     ****   int i;
 865:Src/app.c     **** 
 866:Src/app.c     ****   for (i = 0; i < 4; i++) {
 867:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 868:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 869:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 870:Src/app.c     ****   }
 871:Src/app.c     **** 
 872:Src/app.c     ****   return is_clamp;
 873:Src/app.c     **** }
 874:Src/app.c     **** 
 875:Src/app.c     **** /**
 876:Src/app.c     ****  * @brief Draws the rotated red ROI box for debugging purposes.
 877:Src/app.c     ****  * @details This shows the exact region that was cropped and sent to the second model.
 878:Src/app.c     ****  */
 879:Src/app.c     **** static void display_roi(roi_t *roi)
 880:Src/app.c     **** {
 881:Src/app.c     ****   float corners_f[4][2];
 882:Src/app.c     ****   int corners[4][2];
 883:Src/app.c     ****   int is_clamp;
 884:Src/app.c     ****   int i;
 885:Src/app.c     **** 
 886:Src/app.c     ****   /* compute box corners */
 887:Src/app.c     ****   roi_to_corners(roi, corners_f);
 888:Src/app.c     **** 
 889:Src/app.c     ****   /* clamp */
 890:Src/app.c     ****   is_clamp = clamp_corners(corners_f, corners);
 891:Src/app.c     ****   if (is_clamp)
 892:Src/app.c     ****     return ;
 893:Src/app.c     **** 
 894:Src/app.c     ****   /* display */
 895:Src/app.c     ****   for (i = 0; i < 4; i++)
 896:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 897:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 898:Src/app.c     **** }
 899:Src/app.c     **** 
 900:Src/app.c     **** /**
 901:Src/app.c     ****  * @brief Decodes a landmark's relative coordinates into absolute screen coordinates.
 902:Src/app.c     ****  * @details The landmark model outputs coordinates relative to the ROI (0.0 to 1.0).
 903:Src/app.c     ****  * This function transforms them back into the main screen's coordinate space by
 904:Src/app.c     ****  * applying the ROI's translation, scaling, and rotation.
 905:Src/app.c     ****  * @param roi The Region of Interest that was used as input for the landmark model.
 906:Src/app.c     ****  * @param lm The landmark point with relative coordinates.
 907:Src/app.c     ****  * @param decoded The landmark point with absolute screen coordinates (output).
 908:Src/app.c     ****  */
 909:Src/app.c     **** static void decode_ld_landmark(roi_t *roi, ld_point_t *lm, ld_point_t *decoded)
ARM GAS  /tmp/ccHyRziO.s 			page 32


 910:Src/app.c     **** {
 249              		.loc 1 910 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 911:Src/app.c     ****   float rotation = roi->rotation;
 253              		.loc 1 911 3 view .LVU76
 912:Src/app.c     ****   float w = roi->w;
 254              		.loc 1 912 3 view .LVU77
 913:Src/app.c     ****   float h = roi->h;
 255              		.loc 1 913 3 view .LVU78
 910:Src/app.c     ****   float rotation = roi->rotation;
 256              		.loc 1 910 1 is_stmt 0 view .LVU79
 257 0000 70B5     		push	{r4, r5, r6, lr}
 258              		.cfi_def_cfa_offset 16
 259              		.cfi_offset 4, -16
 260              		.cfi_offset 5, -12
 261              		.cfi_offset 6, -8
 262              		.cfi_offset 14, -4
 263 0002 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 264              		.cfi_def_cfa_offset 72
 265              		.cfi_offset 80, -72
 266              		.cfi_offset 81, -68
 267              		.cfi_offset 82, -64
 268              		.cfi_offset 83, -60
 269              		.cfi_offset 84, -56
 270              		.cfi_offset 85, -52
 271              		.cfi_offset 86, -48
 272              		.cfi_offset 87, -44
 273              		.cfi_offset 88, -40
 274              		.cfi_offset 89, -36
 275              		.cfi_offset 90, -32
 276              		.cfi_offset 91, -28
 277              		.cfi_offset 92, -24
 278              		.cfi_offset 93, -20
 914:Src/app.c     **** 
 915:Src/app.c     ****   decoded->x = roi->cx + (lm->x - 0.5) * w * cos(rotation) - (lm->y - 0.5) * h * sin(rotation);
 279              		.loc 1 915 46 view .LVU80
 280 0006 90ED04DA 		vldr.32	s26, [r0, #16]
 281 000a B7EECDDA 		vcvt.f64.f32	d13, s26
 910:Src/app.c     ****   float rotation = roi->rotation;
 282              		.loc 1 910 1 view .LVU81
 283 000e 0D46     		mov	r5, r1
 284              		.loc 1 915 46 view .LVU82
 285 0010 B0EE4D0B 		vmov.f64	d0, d13
 913:Src/app.c     **** 
 286              		.loc 1 913 9 view .LVU83
 287 0014 90ED03EA 		vldr.32	s28, [r0, #12]
 288              	.LVL14:
 289              		.loc 1 915 3 is_stmt 1 view .LVU84
 290              		.loc 1 915 40 is_stmt 0 view .LVU85
 291 0018 90ED02BA 		vldr.32	s22, [r0, #8]
 910:Src/app.c     ****   float rotation = roi->rotation;
 292              		.loc 1 910 1 view .LVU86
 293 001c 0446     		mov	r4, r0
 294 001e 1646     		mov	r6, r2
 295              		.loc 1 915 46 view .LVU87
ARM GAS  /tmp/ccHyRziO.s 			page 33


 296 0020 FFF7FEFF 		bl	cos
 297              	.LVL15:
 298              		.loc 1 915 29 view .LVU88
 299 0024 95ED007A 		vldr.32	s14, [r5]
 300              		.loc 1 915 33 view .LVU89
 301 0028 B6EE00CB 		vmov.f64	d12, #5.0e-1
 302              		.loc 1 915 29 view .LVU90
 303 002c B7EEC77A 		vcvt.f64.f32	d7, s14
 304              		.loc 1 915 65 discriminator 1 view .LVU91
 305 0030 95ED019A 		vldr.32	s18, [r5, #4]
 306              		.loc 1 915 40 view .LVU92
 307 0034 B7EECBBA 		vcvt.f64.f32	d11, s22
 308              		.loc 1 915 19 view .LVU93
 309 0038 94ED008A 		vldr.32	s16, [r4]
 310              		.loc 1 915 33 view .LVU94
 311 003c 37EE4C7B 		vsub.f64	d7, d7, d12
 312              		.loc 1 915 65 discriminator 1 view .LVU95
 313 0040 B7EEC99A 		vcvt.f64.f32	d9, s18
 314              		.loc 1 915 40 view .LVU96
 315 0044 27EE0B7B 		vmul.f64	d7, d7, d11
 316              		.loc 1 915 19 view .LVU97
 317 0048 B7EEC88A 		vcvt.f64.f32	d8, s16
 318              		.loc 1 915 69 discriminator 1 view .LVU98
 319 004c 39EE4C9B 		vsub.f64	d9, d9, d12
 320              		.loc 1 915 76 discriminator 1 view .LVU99
 321 0050 B7EECEEA 		vcvt.f64.f32	d14, s28
 322              	.LVL16:
 323              		.loc 1 915 24 discriminator 1 view .LVU100
 324 0054 A7EE008B 		vfma.f64	d8, d7, d0
 325              		.loc 1 915 46 view .LVU101
 326 0058 B0EE40AB 		vmov.f64	d10, d0
 327              		.loc 1 915 82 discriminator 1 view .LVU102
 328 005c B0EE4D0B 		vmov.f64	d0, d13
 329 0060 FFF7FEFF 		bl	sin
 330              	.LVL17:
 331              		.loc 1 915 76 discriminator 1 view .LVU103
 332 0064 29EE0E9B 		vmul.f64	d9, d9, d14
 333              		.loc 1 915 60 discriminator 2 view .LVU104
 334 0068 A9EE408B 		vfms.f64	d8, d9, d0
 335 006c B7EEC88B 		vcvt.f32.f64	s16, d8
 336 0070 86ED008A 		vstr.32	s16, [r6]
 916:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 337              		.loc 1 916 3 is_stmt 1 view .LVU105
 338              		.loc 1 916 29 is_stmt 0 view .LVU106
 339 0074 95ED006A 		vldr.32	s12, [r5]
 340 0078 B7EEC66A 		vcvt.f64.f32	d6, s12
 341              		.loc 1 916 19 view .LVU107
 342 007c 94ED017A 		vldr.32	s14, [r4, #4]
 343              		.loc 1 916 33 view .LVU108
 344 0080 36EE4C6B 		vsub.f64	d6, d6, d12
 345              		.loc 1 916 19 view .LVU109
 346 0084 B7EEC77A 		vcvt.f64.f32	d7, s14
 347              		.loc 1 916 40 view .LVU110
 348 0088 26EE0B6B 		vmul.f64	d6, d6, d11
 349              		.loc 1 916 24 discriminator 1 view .LVU111
 350 008c A0EE067B 		vfma.f64	d7, d0, d6
 351              		.loc 1 916 60 discriminator 2 view .LVU112
ARM GAS  /tmp/ccHyRziO.s 			page 34


 352 0090 AAEE097B 		vfma.f64	d7, d10, d9
 917:Src/app.c     **** }
 353              		.loc 1 917 1 view .LVU113
 354 0094 BDEC0E8B 		vldm	sp!, {d8-d14}
 355              		.cfi_restore 92
 356              		.cfi_restore 93
 357              		.cfi_restore 90
 358              		.cfi_restore 91
 359              		.cfi_restore 88
 360              		.cfi_restore 89
 361              		.cfi_restore 86
 362              		.cfi_restore 87
 363              		.cfi_restore 84
 364              		.cfi_restore 85
 365              		.cfi_restore 82
 366              		.cfi_restore 83
 367              		.cfi_restore 80
 368              		.cfi_restore 81
 369              		.cfi_def_cfa_offset 16
 916:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 370              		.loc 1 916 60 discriminator 2 view .LVU114
 371 0098 B7EEC77B 		vcvt.f32.f64	s14, d7
 372 009c 86ED017A 		vstr.32	s14, [r6, #4]
 373              		.loc 1 917 1 view .LVU115
 374 00a0 70BD     		pop	{r4, r5, r6, pc}
 375              		.loc 1 917 1 view .LVU116
 376              		.cfi_endproc
 377              	.LFE7373:
 379              		.section	.rodata.isp_thread_fct.str1.1,"aMS",%progbits,1
 380              	.LC4:
 381 0000 72657420 		.ascii	"ret == pdTRUE\000"
 381      3D3D2070 
 381      64545255 
 381      4500
 382              	.LC5:
 383 000e 5372632F 		.ascii	"Src/app.c\000"
 383      6170702E 
 383      6300
 384              		.section	.text.isp_thread_fct,"ax",%progbits
 385              		.align	1
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 390              	isp_thread_fct:
 391              	.LVL18:
 392              	.LFB7396:
 918:Src/app.c     **** 
 919:Src/app.c     **** /**
 920:Src/app.c     ****  * @brief Draws the output of the second model (hand/face landmarks).
 921:Src/app.c     ****  */
 922:Src/app.c     **** static void display_ld_hand(hand_info_t *hand)
 923:Src/app.c     **** {
 924:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 925:Src/app.c     ****   roi_t *roi = &hand->roi;
 926:Src/app.c     ****   int x[LD_LANDMARK_NB];
 927:Src/app.c     ****   int y[LD_LANDMARK_NB];
 928:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
ARM GAS  /tmp/ccHyRziO.s 			page 35


 929:Src/app.c     ****   ld_point_t decoded;
 930:Src/app.c     ****   int i;
 931:Src/app.c     **** 
 932:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 933:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 934:Src/app.c     ****     x[i] = (int)decoded.x;
 935:Src/app.c     ****     y[i] = (int)decoded.y;
 936:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 937:Src/app.c     ****   }
 938:Src/app.c     **** 
 939:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 940:Src/app.c     ****     if (is_clamped[i])
 941:Src/app.c     ****       continue;
 942:Src/app.c     ****     UTIL_LCD_FillCircle(x[i], y[i], disk_radius, UTIL_LCD_COLOR_YELLOW);
 943:Src/app.c     ****   }
 944:Src/app.c     **** 
 945:Src/app.c     ****   for (i = 0; i < LD_BINDING_NB; i++) {
 946:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 947:Src/app.c     ****       continue;
 948:Src/app.c     ****     UTIL_LCD_DrawLine(x[ld_bindings_idx[i][0]], y[ld_bindings_idx[i][0]],
 949:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 950:Src/app.c     ****                       UTIL_LCD_COLOR_BLACK);
 951:Src/app.c     ****   }
 952:Src/app.c     **** }
 953:Src/app.c     **** 
 954:Src/app.c     **** /**
 955:Src/app.c     ****  * @brief Main drawing wrapper to display all info for a single detected hand/face.
 956:Src/app.c     ****  * @details Checks UI toggles to decide whether to draw the bounding box and/or the landmarks.
 957:Src/app.c     ****  */
 958:Src/app.c     **** void display_hand(display_info_t *info, hand_info_t *hand)
 959:Src/app.c     **** {
 960:Src/app.c     ****   if (info->is_pd_displayed) {
 961:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 962:Src/app.c     ****     display_roi(&hand->roi);
 963:Src/app.c     ****   }
 964:Src/app.c     ****   if (info->is_ld_displayed)
 965:Src/app.c     ****     display_ld_hand(hand);
 966:Src/app.c     **** }
 967:Src/app.c     **** 
 968:Src/app.c     **** /**
 969:Src/app.c     ****  * @brief Renders the entire UI overlay for one frame.
 970:Src/app.c     ****  * @details This is the main function called by the display task. It clears the
 971:Src/app.c     ****  * overlay, draws performance stats, and then draws the AI model results.
 972:Src/app.c     ****  * @param info The main display structure containing all data to be rendered.
 973:Src/app.c     ****  */
 974:Src/app.c     **** static void Display_NetworkOutput(display_info_t *info)
 975:Src/app.c     **** {
 976:Src/app.c     ****   float cpu_load_one_second;
 977:Src/app.c     ****   int line_nb = 0;
 978:Src/app.c     ****   float nn_fps;
 979:Src/app.c     ****   int i;
 980:Src/app.c     **** 
 981:Src/app.c     ****   /* clear previous ui */
 982:Src/app.c     ****   UTIL_LCD_FillRect(lcd_fg_area.X0, lcd_fg_area.Y0, lcd_fg_area.XSize, lcd_fg_area.YSize, 0x0000000
 983:Src/app.c     **** 
 984:Src/app.c     ****   /* cpu load */
 985:Src/app.c     ****   cpuload_update(&cpu_load);
ARM GAS  /tmp/ccHyRziO.s 			page 36


 986:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 987:Src/app.c     **** 
 988:Src/app.c     ****   /* draw metrics */
 989:Src/app.c     ****   nn_fps = 1000.0 / info->nn_period_ms;
 990:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 991:Src/app.c     ****   line_nb += 1;
 992:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 993:Src/app.c     ****   line_nb += 2;
 994:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 995:Src/app.c     ****   line_nb += 1;
 996:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 997:Src/app.c     ****   line_nb += 1;
 998:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 999:Src/app.c     ****   line_nb += 2;
1000:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
1001:Src/app.c     ****   line_nb += 2;
1002:Src/app.c     ****   if (DBG_INFO) {
1003:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
1004:Src/app.c     ****     line_nb += 1;
1005:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "   %ums", info->disp_ms);
1006:Src/app.c     ****     line_nb += 1;
1007:Src/app.c     ****   }
1008:Src/app.c     **** 
1009:Src/app.c     ****   /* display palm detector output */
1010:Src/app.c     ****   for (i = 0; i < info->pd_hand_nb; i++) {
1011:Src/app.c     ****     if (info->hands[i].is_valid)
1012:Src/app.c     ****       display_hand(info, &info->hands[i]);
1013:Src/app.c     ****   }
1014:Src/app.c     **** 
1015:Src/app.c     ****   if (DBG_INFO)
1016:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
1017:Src/app.c     **** }
1018:Src/app.c     **** 
1019:Src/app.c     **** /**
1020:Src/app.c     ****  * @brief Initializes the Palm Detector model and its post-processor.
1021:Src/app.c     ****  * @details This function gets memory addresses for the model's output tensors
1022:Src/app.c     ****  * (where the NPU writes its results) and prepares the software-based
1023:Src/app.c     ****  * post-processing library. This is for the FIRST model in the sequence.
1024:Src/app.c     ****  * @param info Pointer to the palm detector model info structure to be filled.
1025:Src/app.c     ****  */
1026:Src/app.c     **** static void palm_detector_init(pd_model_info_t *info)
1027:Src/app.c     **** {
1028:Src/app.c     ****   /* Get pointers to the model's output and input buffer information from the AI library. */
1029:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_palm_detector();
1030:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
1031:Src/app.c     ****   int ret;
1032:Src/app.c     **** 
1033:Src/app.c     ****   /* Store pointers and sizes for the model's input and output tensors. */
1034:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1035:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
1036:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
1037:Src/app.c     ****   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
1038:Src/app.c     ****   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
1039:Src/app.c     ****   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
1040:Src/app.c     ****   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
1041:Src/app.c     **** 
1042:Src/app.c     ****   /* Initialize the post-processing library with model-specific parameters (e.g., anchor boxes). */
ARM GAS  /tmp/ccHyRziO.s 			page 37


1043:Src/app.c     ****   ret = app_postprocess_init(&info->static_param);
1044:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1045:Src/app.c     **** }
1046:Src/app.c     **** 
1047:Src/app.c     **** /**
1048:Src/app.c     ****  * @brief Initializes the YOLOv8 Detector model and its post-processor parameters.
1049:Src/app.c     ****  * @details This function gets the memory address for the model's single raw output
1050:Src/app.c     ****  * tensor and configures the parameters for the YOLOv8 post-processing library.
1051:Src/app.c     ****  * @param info Pointer to the yolo_detector_info_t structure to be filled.
1052:Src/app.c     ****  */
1053:Src/app.c     **** static void yolo_detector_init(yolo_model_info_t *info)
1054:Src/app.c     **** {
1055:Src/app.c     ****   /* Get pointers to the model's buffer information from the AI library. */
1056:Src/app.c     ****   /* The model name "yolo_detector" is used here as requested. */
1057:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_yolo_detector();
1058:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
1059:Src/app.c     **** 
1060:Src/app.c     ****   /* --- 1. Configure Model I/O --- */
1061:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1062:Src/app.c     ****   /* YOLOv8 has a single, large raw output tensor. */
1063:Src/app.c     ****   info->raw_output_tensor = LL_Buffer_addr_start(&nn_out_info[0]);
1064:Src/app.c     ****   info->raw_output_len = LL_Buffer_len(&nn_out_info[0]);
1065:Src/app.c     **** 
1066:Src/app.c     ****   /* --- 2. Configure Post-Processing Library Parameters --- */
1067:Src/app.c     ****   /* These parameters MUST match the properties of your trained YOLOv8 model. */
1068:Src/app.c     ****   info->pp_params.nb_classes = 3;      // Your model has 3 classes: cigarette, phone, face
1069:Src/app.c     ****   info->pp_params.nb_total_boxes = 2100; // Standard for many YOLOv8 models
1070:Src/app.c     ****   info->pp_params.conf_threshold = 0.5f; // Set your desired confidence threshold
1071:Src/app.c     ****   info->pp_params.iou_threshold = 0.45f; // Set your desired NMS overlap threshold
1072:Src/app.c     ****   info->pp_params.max_boxes_limit = YOLO_MAX_NB; // Use our new constant
1073:Src/app.c     **** 
1074:Src/app.c     ****   /* For INT8 quantized models, you must also provide the scale and zero-point. */
1075:Src/app.c     ****   // info->pp_params.raw_output_scale = 0.1234f;      // Example value
1076:Src/app.c     ****   // info->pp_params.raw_output_zero_point = -128;   // Example value
1077:Src/app.c     **** 
1078:Src/app.c     ****   /* Link the output buffer for the post-processing results. */
1079:Src/app.c     ****   info->pp_output.pOutBuff = info->final_boxes;
1080:Src/app.c     ****   info->pp_output.nb_detect = 0;
1081:Src/app.c     **** }
1082:Src/app.c     **** 
1083:Src/app.c     **** /**
1084:Src/app.c     ****  * @brief Runs one inference of the YOLOv8 Detector model.
1085:Src/app.c     ****  * @details This function runs the NPU inference, calls the YOLOv8 post-processing
1086:Src/app.c     ****  * library, filters the results for faces (class ID 2), and prepares the
1087:Src/app.c     ****  * Regions of Interest (ROIs) for the next stage.
1088:Src/app.c     ****  * @param buffer Pointer to the input image from the camera.
1089:Src/app.c     ****  * @param info Pointer to the initialized yolo_detector_info_t structure.
1090:Src/app.c     ****  * @param yolo_exec_time Pointer to store the execution time of this stage.
1091:Src/app.c     ****  * @return The number of *faces* detected.
1092:Src/app.c     ****  */
1093:Src/app.c     **** static int yolo_detector_run(uint8_t *buffer, yolo_model_info_t *info, uint32_t *yolo_exec_time)
1094:Src/app.c     **** {
1095:Src/app.c     ****   uint32_t start_ts;
1096:Src/app.c     ****   int total_detections;
1097:Src/app.c     ****   int face_nb = 0; /* This will count only the faces we find. */
1098:Src/app.c     ****   int ret;
1099:Src/app.c     **** 
ARM GAS  /tmp/ccHyRziO.s 			page 38


1100:Src/app.c     ****   start_ts = HAL_GetTick();
1101:Src/app.c     **** 
1102:Src/app.c     ****   /* --- 1. Run Inference --- */
1103:Src/app.c     ****   /* Set the input buffer for the NPU using your model's name. */
1104:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_yolo_detector(0, buffer, info->nn_in_len);
1105:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
1106:Src/app.c     **** 
1107:Src/app.c     ****   /* Trigger the NPU to run the inference. This is a blocking call. */
1108:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_yolo_detector);
1109:Src/app.c     **** 
1110:Src/app.c     ****   /* The NPU wrote to the output buffer. Invalidate the CPU's Data Cache to see the new data. */
1111:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->raw_output_tensor, info->raw_output_len));
1112:Src/app.c     **** 
1113:Src/app.c     ****   /* --- 2. Run YOLOv8 Post-Processing --- */
1114:Src/app.c     ****   /* Set up the input struct for the post-processing library. */
1115:Src/app.c     ****   yolov8_pp_in_centroid_int8_t pp_input;
1116:Src/app.c     ****   pp_input.pRaw_detections = info->raw_output_tensor;
1117:Src/app.c     **** 
1118:Src/app.c     ****   /* Call the YOLOv8 post-processing function. */
1119:Src/app.c     ****   /* NOTE: Use od_yolov8_pp_process_int8 if you have a quantized INT8 model. */
1120:Src/app.c     ****   ret = od_yolov8_pp_process_int8(&pp_input, &info->pp_output, &info->pp_params);
1121:Src/app.c     ****   assert(ret == AI_OD_POSTPROCESS_ERROR_NO);
1122:Src/app.c     ****   total_detections = info->pp_output.nb_detect;
1123:Src/app.c     **** 
1124:Src/app.c     ****   /* --- 3. Filter for Faces & Prepare ROIs --- */
1125:Src/app.c     ****   for (int i = 0; i < total_detections; i++)
1126:Src/app.c     ****   {
1127:Src/app.c     ****     /* Check if the detected object is a face (class ID 2). */
1128:Src/app.c     ****     if (info->pp_output.pOutBuff[i].class_index == 2)
1129:Src/app.c     ****     {
1130:Src/app.c     ****       /* To reuse existing helper functions, we map the YOLO output to the old struct format. */
1131:Src/app.c     ****       pd_pp_box_t temp_box = {0};
1132:Src/app.c     ****       temp_box.x_center = info->pp_output.pOutBuff[i].x_center;
1133:Src/app.c     ****       temp_box.y_center = info->pp_output.pOutBuff[i].y_center;
1134:Src/app.c     ****       temp_box.width    = info->pp_output.pOutBuff[i].width;
1135:Src/app.c     ****       temp_box.height   = info->pp_output.pOutBuff[i].height;
1136:Src/app.c     ****       temp_box.prob     = info->pp_output.pOutBuff[i].conf;
1137:Src/app.c     **** 
1138:Src/app.c     ****       /* Call the helper functions to convert coords and create the ROI for the landmark model. */
1139:Src/app.c     ****       /* NOTE: We will rename these functions and adapt their logic later. */
1140:Src/app.c     ****       cvt_pd_coord_to_screen_coord(&temp_box);
1141:Src/app.c     ****       pd_box_to_roi(&temp_box, &rois[face_nb]);
1142:Src/app.c     **** 
1143:Src/app.c     ****       face_nb++; /* Increment the count of found faces. */
1144:Src/app.c     ****       if (face_nb >= YOLO_MAX_NB) { break; } /* Stop if we've reached our limit. */
1145:Src/app.c     ****     }
1146:Src/app.c     ****   }
1147:Src/app.c     **** 
1148:Src/app.c     ****   *yolo_exec_time = HAL_GetTick() - start_ts;
1149:Src/app.c     ****   return face_nb; /* Return the count of faces, not total objects. */
1150:Src/app.c     **** }
1151:Src/app.c     **** 
1152:Src/app.c     **** /**
1153:Src/app.c     ****  * @brief Initializes the Face Landmark model.
1154:Src/app.c     ****  * @details This function gets memory addresses for the model's input and output
1155:Src/app.c     ****  * tensors. It is configured based on analysis of the Python post-processing script.
1156:Src/app.c     ****  * @param info Pointer to the face landmark model info structure to be filled.
ARM GAS  /tmp/ccHyRziO.s 			page 39


1157:Src/app.c     ****  * @note The indices for nn_out_info have been updated to match the model's
1158:Src/app.c     ****  * actual output order: [0] for score, [1] for landmarks.
1159:Src/app.c     ****  */
1160:Src/app.c     **** static void face_landmark_init(fl_model_info_t *info)
1161:Src/app.c     **** {
1162:Src/app.c     ****   // Get pointers to the info structures for the model's input/output buffers
1163:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_face_landmark();
1164:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
1165:Src/app.c     **** 
1166:Src/app.c     ****   // --- INPUT TENSOR ---
1167:Src/app.c     ****   // The input is the image buffer for the model to process.
1168:Src/app.c     ****   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
1169:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1170:Src/app.c     **** 
1171:Src/app.c     ****   // --- OUTPUT TENSORS (Order corrected based on Python analysis) ---
1172:Src/app.c     **** 
1173:Src/app.c     ****   // Output 0: Presence Score
1174:Src/app.c     ****   // This buffer will contain a single float indicating the confidence that a face was detected.
1175:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
1176:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
1177:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
1178:Src/app.c     **** 
1179:Src/app.c     ****   // Output 1: Landmarks
1180:Src/app.c     ****   // This buffer contains the raw coordinates for all 468 facial landmarks.
1181:Src/app.c     ****   // Even if post-processing only uses x and y, we must map the full 3D output buffer.
1182:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
1183:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
1184:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 1404); // 468 landmarks * 3 (x,y,z)
1185:Src/app.c     **** }
1186:Src/app.c     **** 
1187:Src/app.c     **** 
1188:Src/app.c     **** /**
1189:Src/app.c     ****  * @brief Runs one inference of the Palm Detector model.
1190:Src/app.c     ****  * @param buffer Pointer to the input image from the camera.
1191:Src/app.c     ****  * @param info Pointer to the initialized model info structure.
1192:Src/app.c     ****  * @param pd_exec_time Pointer to store the execution time of this stage.
1193:Src/app.c     ****  * @return The number of hands/faces detected.
1194:Src/app.c     ****  */
1195:Src/app.c     **** static int palm_detector_run(uint8_t *buffer, pd_model_info_t *info, uint32_t *pd_exec_time)
1196:Src/app.c     **** {
1197:Src/app.c     ****   uint32_t start_ts;
1198:Src/app.c     ****   int hand_nb;
1199:Src/app.c     ****   int ret;
1200:Src/app.c     ****   int i;
1201:Src/app.c     **** 
1202:Src/app.c     ****   start_ts = HAL_GetTick();
1203:Src/app.c     ****   /* Set the input buffer for the NPU. */
1204:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
1205:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_palm_detector(0, buffer, info->nn_in_len);
1206:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
1207:Src/app.c     **** 
1208:Src/app.c     ****   /* Trigger the NPU to run the inference. This is a blocking call. */
1209:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_palm_detector);
1210:Src/app.c     **** 
1211:Src/app.c     ****   /* Run software post-processing to decode the raw NPU output into human-readable boxes and scores
1212:Src/app.c     ****   ret = app_postprocess_run((void * []){info->prob_out, info->boxes_out}, 2, &info->pd_out, &info->
1213:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
ARM GAS  /tmp/ccHyRziO.s 			page 40


1214:Src/app.c     ****   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
1215:Src/app.c     **** 
1216:Src/app.c     ****   /* For each detected hand/face, convert its coordinates and generate an ROI for the next model. *
1217:Src/app.c     ****   for (i = 0; i < hand_nb; i++) {
1218:Src/app.c     ****     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
1219:Src/app.c     ****     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
1220:Src/app.c     ****   }
1221:Src/app.c     **** 
1222:Src/app.c     ****   /* Discard nn_out region (used by pp_outputs variables) to avoid Dcache evictions during nn infer
1223:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1224:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
1225:Src/app.c     **** 
1226:Src/app.c     ****   *pd_exec_time = HAL_GetTick() - start_ts;
1227:Src/app.c     **** 
1228:Src/app.c     ****   return hand_nb;
1229:Src/app.c     **** }
1230:Src/app.c     **** 
1231:Src/app.c     **** /**
1232:Src/app.c     ****  * @brief Initializes the Hand Landmark model.
1233:Src/app.c     ****  * @details This function gets memory addresses for the SECOND model's input and output
1234:Src/app.c     ****  * tensors, allowing the application to prepare the input and read the results.
1235:Src/app.c     ****  * @param info Pointer to the hand landmark model info structure to be filled.
1236:Src/app.c     ****  */
1237:Src/app.c     **** static void hand_landmark_init(hl_model_info_t *info)
1238:Src/app.c     **** {
1239:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_hand_landmark();
1240:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
1241:Src/app.c     **** 
1242:Src/app.c     ****   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
1243:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1244:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[2]);
1245:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
1246:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
1247:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
1248:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
1249:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 63);
1250:Src/app.c     **** }
1251:Src/app.c     **** 
1252:Src/app.c     **** 
1253:Src/app.c     **** static void app_transform(nema_matrix3x3_t t, app_v3_t v)
1254:Src/app.c     **** {
1255:Src/app.c     ****   app_v3_t r;
1256:Src/app.c     ****   int i;
1257:Src/app.c     **** 
1258:Src/app.c     ****   for (i = 0; i < 3; i++)
1259:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
1260:Src/app.c     **** 
1261:Src/app.c     ****   for (i = 0; i < 3; i++)
1262:Src/app.c     ****     v[i] = r[i];
1263:Src/app.c     **** }
1264:Src/app.c     **** /**
1265:Src/app.c     ****  * @brief Prepares the landmark model's input using the NEMA GPU.
1266:Src/app.c     ****  * @details This function offloads the entire crop, rotate, and resize operation to
1267:Src/app.c     ****  * the hardware accelerator. It builds a transformation matrix and submits it
1268:Src/app.c     ****  * to the GPU, which is much faster than the CPU-based version.
1269:Src/app.c     ****  * @return 0 on success.
1270:Src/app.c     ****  */
ARM GAS  /tmp/ccHyRziO.s 			page 41


1271:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1272:Src/app.c     **** {
1273:Src/app.c     ****   app_v3_t vertex[] = {
1274:Src/app.c     ****     {           0,             0, 1},
1275:Src/app.c     ****     {LCD_BG_WIDTH,             0, 1},
1276:Src/app.c     ****     {LCD_BG_WIDTH, LCD_BG_HEIGHT, 1},
1277:Src/app.c     ****     {           0, LCD_BG_HEIGHT, 1},
1278:Src/app.c     ****   };
1279:Src/app.c     ****   GFXMMU_BuffersTypeDef buffers = { 0 };
1280:Src/app.c     ****   nema_matrix3x3_t t;
1281:Src/app.c     ****   int ret;
1282:Src/app.c     ****   int i;
1283:Src/app.c     **** 
1284:Src/app.c     ****   buffers.Buf0Address = (uint32_t) info->nn_in;
1285:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
1286:Src/app.c     ****   assert(ret == HAL_OK);
1287:Src/app.c     **** 
1288:Src/app.c     ****   /* bind destination texture */
1289:Src/app.c     ****   nema_bind_dst_tex(GFXMMU_VIRTUAL_BUFFER0_BASE, LD_WIDTH, LD_HEIGHT, NEMA_RGBA8888, -1);
1290:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
1291:Src/app.c     ****   nema_clear(0);
1292:Src/app.c     ****   /* bind source texture */
1293:Src/app.c     ****   nema_bind_src_tex((uintptr_t) buffer, LCD_BG_WIDTH, LCD_BG_HEIGHT, NEMA_RGBA8888, -1, NEMA_FILTER
1294:Src/app.c     ****   nema_enable_tiling(1);
1295:Src/app.c     ****   nema_set_blend_blit(NEMA_BL_SRC);
1296:Src/app.c     **** 
1297:Src/app.c     ****   /* let's go */
1298:Src/app.c     ****   nema_mat3x3_load_identity(t);
1299:Src/app.c     ****   nema_mat3x3_translate(t, -roi->cx, -roi->cy);
1300:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
1301:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
1302:Src/app.c     ****   nema_mat3x3_translate(t, LD_WIDTH / 2, LD_HEIGHT / 2);
1303:Src/app.c     ****   for (i = 0 ; i < 4; i++)
1304:Src/app.c     ****     app_transform(t, vertex[i]);
1305:Src/app.c     ****   nema_blit_quad_fit(vertex[0][0], vertex[0][1], vertex[1][0], vertex[1][1],
1306:Src/app.c     ****                      vertex[2][0], vertex[2][1], vertex[3][0], vertex[3][1]);
1307:Src/app.c     **** 
1308:Src/app.c     ****   nema_cl_submit(&cl);
1309:Src/app.c     ****   nema_cl_wait(&cl);
1310:Src/app.c     ****   HAL_ICACHE_Invalidate();
1311:Src/app.c     **** 
1312:Src/app.c     ****   assert(!nema_get_error());
1313:Src/app.c     **** 
1314:Src/app.c     ****   return 0;
1315:Src/app.c     **** }
1316:Src/app.c     **** 
1317:Src/app.c     **** /**
1318:Src/app.c     ****  * @brief Runs one inference of the Hand Landmark model.
1319:Src/app.c     ****  * @param buffer Pointer to the source display buffer (for cropping).
1320:Src/app.c     ****  * @param info Pointer to the initialized landmark model info.
1321:Src/app.c     ****  * @param roi The Region of Interest to process.
1322:Src/app.c     ****  * @param ld_landmarks Output array to store the final landmark coordinates.
1323:Src/app.c     ****  * @return 1 if a hand was found and landmarks are valid, 0 otherwise.
1324:Src/app.c     ****  */
1325:Src/app.c     **** static int hand_landmark_run(uint8_t *buffer, hl_model_info_t *info, roi_t *roi,
1326:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
1327:Src/app.c     **** {
ARM GAS  /tmp/ccHyRziO.s 			page 42


1328:Src/app.c     ****   int is_clamped;
1329:Src/app.c     ****   int is_valid;
1330:Src/app.c     **** 
1331:Src/app.c     ****   is_clamped = hand_landmark_prepare_input(buffer, roi, info);
1332:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
1333:Src/app.c     ****   if (is_clamped)
1334:Src/app.c     ****     return 0;
1335:Src/app.c     **** 
1336:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_hand_landmark);
1337:Src/app.c     **** 
1338:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
1339:Src/app.c     **** 
1340:Src/app.c     ****   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions du
1341:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1342:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
1343:Src/app.c     **** 
1344:Src/app.c     ****   return is_valid;
1345:Src/app.c     **** }
1346:Src/app.c     **** 
1347:Src/app.c     **** 
1348:Src/app.c     **** /**
1349:Src/app.c     ****  * @brief Initializes the NEMA GPU and its associated drivers.
1350:Src/app.c     ****  */
1351:Src/app.c     **** static void app_rot_init(hl_model_info_t *info)
1352:Src/app.c     **** {
1353:Src/app.c     ****   GFXMMU_PackingTypeDef packing = { 0 };
1354:Src/app.c     ****   int ret;
1355:Src/app.c     **** 
1356:Src/app.c     ****   printf("init nema\n");
1357:Src/app.c     ****   nema_init();
1358:Src/app.c     ****   assert(!nema_get_error());
1359:Src/app.c     ****   nema_ext_hold_enable(2);
1360:Src/app.c     ****   nema_ext_hold_irq_enable(2);
1361:Src/app.c     ****   nema_ext_hold_enable(3);
1362:Src/app.c     ****   nema_ext_hold_irq_enable(3);
1363:Src/app.c     ****   printf("init nema DONE %s\n", nema_get_sw_device_name());
1364:Src/app.c     **** 
1365:Src/app.c     ****   hgfxmmu.Instance = GFXMMU;
1366:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
1367:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
1368:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
1369:Src/app.c     ****   assert(ret == HAL_OK);
1370:Src/app.c     **** 
1371:Src/app.c     ****   packing.Buffer0Activation = ENABLE;
1372:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
1373:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
1374:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
1375:Src/app.c     ****   assert(ret == HAL_OK);
1376:Src/app.c     **** 
1377:Src/app.c     ****   cl = nema_cl_create_sized(8192);
1378:Src/app.c     ****   nema_cl_bind_circular(&cl);
1379:Src/app.c     **** }
1380:Src/app.c     **** 
1381:Src/app.c     **** /**
1382:Src/app.c     ****  * @brief Computes the rotation based on the final landmark points.
1383:Src/app.c     ****  * @details Uses landmark points 0 and 9 (e.g., wrist and middle finger base)
1384:Src/app.c     ****  * for a potentially more stable rotation estimate than the first model.
ARM GAS  /tmp/ccHyRziO.s 			page 43


1385:Src/app.c     ****  */
1386:Src/app.c     **** static float ld_compute_rotation(ld_point_t lm[LD_LANDMARK_NB])
1387:Src/app.c     **** {
1388:Src/app.c     ****   float x0, y0, x1, y1;
1389:Src/app.c     ****   float rotation;
1390:Src/app.c     **** 
1391:Src/app.c     ****   x0 = lm[0].x;
1392:Src/app.c     ****   y0 = lm[0].y;
1393:Src/app.c     ****   x1 = lm[9].x;
1394:Src/app.c     ****   y1 = lm[9].y;
1395:Src/app.c     **** 
1396:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
1397:Src/app.c     **** 
1398:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
1399:Src/app.c     **** }
1400:Src/app.c     **** 
1401:Src/app.c     **** /**
1402:Src/app.c     ****  * @brief Creates a new, tighter ROI based on the detected landmarks.
1403:Src/app.c     ****  * @details This is used to update the ROI for tracking in the next frame.
1404:Src/app.c     ****  */
1405:Src/app.c     **** static void ld_to_roi(ld_point_t lm[LD_LANDMARK_NB], roi_t *roi, pd_pp_box_t *next_pd)
1406:Src/app.c     **** {
1407:Src/app.c     ****   const int pd_to_ld_idx[AI_PD_MODEL_PP_NB_KEYPOINTS] = {0, 5, 9, 13, 17, 1, 2};
1408:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
1409:Src/app.c     ****   float max_x, max_y, min_x, min_y;
1410:Src/app.c     ****   int i;
1411:Src/app.c     **** 
1412:Src/app.c     ****   max_x = max_y = -10000;
1413:Src/app.c     ****   min_x = min_y =  10000;
1414:Src/app.c     **** 
1415:Src/app.c     ****   roi->rotation = ld_compute_rotation(lm);
1416:Src/app.c     **** 
1417:Src/app.c     ****   for (i = 0; i < ARRAY_NB(indices); i++) {
1418:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
1419:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
1420:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
1421:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
1422:Src/app.c     ****   }
1423:Src/app.c     **** 
1424:Src/app.c     ****   roi->cx = (max_x + min_x) / 2;
1425:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
1426:Src/app.c     ****   roi->w = (max_x - min_x);
1427:Src/app.c     ****   roi->h = (max_y - min_y);
1428:Src/app.c     **** 
1429:Src/app.c     ****   next_pd->x_center = roi->cx;
1430:Src/app.c     ****   next_pd->y_center = roi->cy;
1431:Src/app.c     ****   next_pd->width = roi->w;
1432:Src/app.c     ****   next_pd->height = roi->h;
1433:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
1434:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
1435:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
1436:Src/app.c     ****   }
1437:Src/app.c     **** }
1438:Src/app.c     **** 
1439:Src/app.c     **** /**
1440:Src/app.c     ****  * @brief Computes the predicted ROI for the next frame to enable tracking.
1441:Src/app.c     ****  * @details This is the core of the tracking logic. Instead of running the slow
ARM GAS  /tmp/ccHyRziO.s 			page 44


1442:Src/app.c     ****  * detector on every frame, we use the landmarks from the current frame to predict
1443:Src/app.c     ****  * where the hand/face will be in the next frame. We then only need to run the
1444:Src/app.c     ****  * fast landmark model on that small predicted ROI.
1445:Src/app.c     ****  */
1446:Src/app.c     **** static void compute_next_roi(roi_t *src, ld_point_t lm_in[LD_LANDMARK_NB], roi_t *next, pd_pp_box_t
1447:Src/app.c     **** {
1448:Src/app.c     ****   const float shift_x = 0;
1449:Src/app.c     ****   const float shift_y = -0.1;
1450:Src/app.c     ****   const float scale = 2.0;
1451:Src/app.c     ****   ld_point_t lm[LD_LANDMARK_NB];
1452:Src/app.c     ****   roi_t roi;
1453:Src/app.c     ****   int i;
1454:Src/app.c     **** 
1455:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++)
1456:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
1457:Src/app.c     **** 
1458:Src/app.c     ****   ld_to_roi(lm, &roi, next_pd);
1459:Src/app.c     ****   roi_shift_and_scale(&roi, shift_x, shift_y, scale, scale);
1460:Src/app.c     **** 
1461:Src/app.c     ****   *next = roi;
1462:Src/app.c     **** }
1463:Src/app.c     **** 
1464:Src/app.c     **** /**
1465:Src/app.c     ****  * @brief The main function for the Neural Network processing thread.
1466:Src/app.c     ****  * @details This is the entry point for the FreeRTOS task that handles all AI inference.
1467:Src/app.c     ****  * It will contain a `while(1)` loop to process frames as they become available.
1468:Src/app.c     ****  */
1469:Src/app.c     **** static void nn_thread_fct(void *arg)
1470:Src/app.c     **** {
1471:Src/app.c     ****   /* Variables for filtering/smoothing performance metrics. */
1472:Src/app.c     ****   float nn_period_filtered_ms = 0;
1473:Src/app.c     ****   float pd_filtered_ms = 0;
1474:Src/app.c     ****   float ld_filtered_ms = 0;
1475:Src/app.c     **** 
1476:Src/app.c     ****   /* Model-specific info structures. */
1477:Src/app.c     ****   hl_model_info_t hl_info;
1478:Src/app.c     ****   pd_model_info_t pd_info;
1479:Src/app.c     ****   yolo_model_info_t yolo_info;
1480:Src/app.c     **** 
1481:Src/app.c     ****   /* Timing variables. */
1482:Src/app.c     ****   uint32_t nn_period_ms;
1483:Src/app.c     ****   uint32_t nn_period[2];
1484:Src/app.c     ****   uint8_t *nn_pipe_dst;
1485:Src/app.c     **** 
1486:Src/app.c     ****   /* Structs for holding tracking information between frames. */
1487:Src/app.c     ****   pd_pp_point_t box_next_keypoints[AI_PD_MODEL_PP_NB_KEYPOINTS];
1488:Src/app.c     ****   pd_pp_box_t box_next;
1489:Src/app.c     ****   od_pp_out_t boxes_next[YOLO_MAX_NB];
1490:Src/app.c     **** 
1491:Src/app.c     **** 
1492:Src/app.c     ****   int is_tracking = 0;
1493:Src/app.c     ****   roi_t roi_next;
1494:Src/app.c     ****   uint32_t pd_ms;
1495:Src/app.c     ****   uint32_t hl_ms;
1496:Src/app.c     ****   uint32_t yolo_ms;
1497:Src/app.c     ****   uint32_t fl_ms;
1498:Src/app.c     ****   int ret;
ARM GAS  /tmp/ccHyRziO.s 			page 45


1499:Src/app.c     ****   int j;
1500:Src/app.c     ****   int temp = 0;
1501:Src/app.c     **** 
1502:Src/app.c     ****   /* Current tracking algo only support single hand */
1503:Src/app.c     ****   assert(PD_MAX_HAND_NB == 1);
1504:Src/app.c     **** 
1505:Src/app.c     ****   /* setup models buffer info */
1506:Src/app.c     ****   palm_detector_init(&pd_info);
1507:Src/app.c     ****   box_next.pKps = box_next_keypoints;
1508:Src/app.c     ****   hand_landmark_init(&hl_info);
1509:Src/app.c     ****   app_rot_init(&hl_info);
1510:Src/app.c     ****   yolo_detector_init(&yolo_info);
1511:Src/app.c     ****   /*** Application Main Loop ***************************************************************/
1512:Src/app.c     ****   nn_period[1] = HAL_GetTick();
1513:Src/app.c     **** 
1514:Src/app.c     ****   /* Get an initial free buffer and start the camera's NN pipe. */
1515:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1516:Src/app.c     ****   assert(nn_pipe_dst);
1517:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1518:Src/app.c     ****   while (1)
1519:Src/app.c     ****   {
1520:Src/app.c     ****     uint8_t *capture_buffer;
1521:Src/app.c     ****     int idx_for_resize;
1522:Src/app.c     ****     /* Measure and filter the time between loop iterations. */
1523:Src/app.c     ****     nn_period[0] = nn_period[1];
1524:Src/app.c     ****     nn_period[1] = HAL_GetTick();
1525:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
1526:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
1527:Src/app.c     ****     
1528:Src/app.c     ****     /* Block and wait for a new NN frame to be ready from the camera. */
1529:Src/app.c     ****     capture_buffer = bqueue_get_ready(&nn_input_queue);
1530:Src/app.c     ****     assert(capture_buffer);
1531:Src/app.c     ****     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
1532:Src/app.c     **** 
1533:Src/app.c     ****     /* --- Core Tracking Logic --- */
1534:Src/app.c     ****     /* If we are NOT currently tracking an object, run the full-frame detector. */
1535:Src/app.c     ****     if (!is_tracking) {
1536:Src/app.c     ****       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
1537:Src/app.c     ****       box_next.prob = pd_info.pd_out.pOutData[0].prob;
1538:Src/app.c     ****     } else {
1539:Src/app.c     ****       rois[0] = roi_next;
1540:Src/app.c     ****       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
1541:Src/app.c     ****       pd_ms = 0;
1542:Src/app.c     ****     }
1543:Src/app.c     ****     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1544:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
1545:Src/app.c     **** 
1546:Src/app.c     ****     /* then run hand landmark detector if needed */
1547:Src/app.c     ****     if (is_tracking) {
1548:Src/app.c     ****       hl_ms = HAL_GetTick();
1549:Src/app.c     ****       /* Run the landmark model. Note it uses the main display buffer for cropping. */
1550:Src/app.c     ****       is_tracking = hand_landmark_run(lcd_bg_buffer[idx_for_resize], &hl_info, &rois[0], ld_landmar
1551:Src/app.c     ****       /* Invalidate this buffer region as the CPU/GPU may have read from it. */
1552:Src/app.c     ****       CACHE_OP(SCB_InvalidateDCache_by_Addr(lcd_bg_buffer[idx_for_resize], sizeof(lcd_bg_buffer[idx
1553:Src/app.c     **** 
1554:Src/app.c     ****       /* If landmarks were successfully found, predict the ROI for the NEXT frame. */
1555:Src/app.c     ****       if (is_tracking)
ARM GAS  /tmp/ccHyRziO.s 			page 46


1556:Src/app.c     ****         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
1557:Src/app.c     ****       hl_ms = HAL_GetTick() - hl_ms;
1558:Src/app.c     ****     } else {
1559:Src/app.c     ****       /* If no object is being tracked, skip landmarking. */
1560:Src/app.c     ****       hl_ms = 0;
1561:Src/app.c     ****     }
1562:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1563:Src/app.c     **** 
1564:Src/app.c     ****     /* update display stats */
1565:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1566:Src/app.c     ****     assert(ret == pdTRUE);
1567:Src/app.c     ****     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
1568:Src/app.c     ****     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
1569:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
1570:Src/app.c     ****     disp.info.pd_hand_nb = is_tracking;
1571:Src/app.c     ****     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
1572:Src/app.c     ****     disp.info.hands[0].is_valid = is_tracking;
1573:Src/app.c     ****     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
1574:Src/app.c     ****     disp.info.hands[0].roi = rois[0];
1575:Src/app.c     ****     for (j = 0; j < LD_LANDMARK_NB; j++)
1576:Src/app.c     ****       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1577:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1578:Src/app.c     ****     assert(ret == pdTRUE);
1579:Src/app.c     **** 
1580:Src/app.c     ****     /* It's possible xqueue is empty if display is slow. So don't check error code that may by pdFA
1581:Src/app.c     ****     xSemaphoreGive(disp.update);
1582:Src/app.c     ****   }
1583:Src/app.c     **** }
1584:Src/app.c     **** 
1585:Src/app.c     **** /**
1586:Src/app.c     ****  * @brief Sets the memory address for the foreground layer for the next draw operation.
1587:Src/app.c     ****  * @details Part of a double-buffering scheme for the UI overlay. This function prepares
1588:Src/app.c     ****  * the off-screen buffer for drawing.
1589:Src/app.c     ****  */
1590:Src/app.c     **** static void dp_update_drawing_area()
1591:Src/app.c     **** {
1592:Src/app.c     ****   int ret;
1593:Src/app.c     **** 
1594:Src/app.c     ****   __disable_irq();
1595:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
1596:Src/app.c     ****   assert(ret == HAL_OK);
1597:Src/app.c     ****   __enable_irq();
1598:Src/app.c     **** }
1599:Src/app.c     **** 
1600:Src/app.c     **** /**
1601:Src/app.c     ****  * @brief Commits the newly drawn foreground buffer to the display.
1602:Src/app.c     ****  * @details This "flips" the foreground buffers, making the newly drawn UI visible.
1603:Src/app.c     ****  */
1604:Src/app.c     **** static void dp_commit_drawing_area()
1605:Src/app.c     **** {
1606:Src/app.c     ****   int ret;
1607:Src/app.c     **** 
1608:Src/app.c     ****   __disable_irq();
1609:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
1610:Src/app.c     ****   assert(ret == HAL_OK);
1611:Src/app.c     ****   __enable_irq();
1612:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
ARM GAS  /tmp/ccHyRziO.s 			page 47


1613:Src/app.c     **** }
1614:Src/app.c     **** 
1615:Src/app.c     **** /**
1616:Src/app.c     ****  * @brief Callback function to toggle the landmark display.
1617:Src/app.c     ****  */
1618:Src/app.c     **** static void on_ld_toggle_button_click(void *args)
1619:Src/app.c     **** {
1620:Src/app.c     ****   display_t *disp = (display_t *) args;
1621:Src/app.c     ****   int ret;
1622:Src/app.c     **** 
1623:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1624:Src/app.c     ****   assert(ret == pdTRUE);
1625:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
1626:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1627:Src/app.c     ****   assert(ret == pdTRUE);
1628:Src/app.c     **** }
1629:Src/app.c     **** 
1630:Src/app.c     **** /**
1631:Src/app.c     ****  * @brief Callback function to toggle the bounding box display.
1632:Src/app.c     ****  */
1633:Src/app.c     **** static void on_pd_toggle_button_click(void *args)
1634:Src/app.c     **** {
1635:Src/app.c     ****   display_t *disp = (display_t *) args;
1636:Src/app.c     ****   int ret;
1637:Src/app.c     **** 
1638:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1639:Src/app.c     ****   assert(ret == pdTRUE);
1640:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
1641:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1642:Src/app.c     ****   assert(ret == pdTRUE);
1643:Src/app.c     **** }
1644:Src/app.c     **** 
1645:Src/app.c     **** /**
1646:Src/app.c     ****  * @brief The main function for the Display Processor (DP) thread.
1647:Src/app.c     ****  * @details This task waits for a signal from the NN thread, then wakes up to
1648:Src/app.c     ****  * draw the entire UI overlay for one frame.
1649:Src/app.c     ****  */
1650:Src/app.c     **** static void dp_thread_fct(void *arg)
1651:Src/app.c     **** {
1652:Src/app.c     ****   button_t ld_toggle_button;
1653:Src/app.c     ****   button_t hd_toggle_button;
1654:Src/app.c     ****   uint32_t disp_ms = 0;
1655:Src/app.c     ****   display_info_t info;
1656:Src/app.c     ****   uint32_t ts;
1657:Src/app.c     ****   int ret;
1658:Src/app.c     **** 
1659:Src/app.c     **** #ifdef STM32N6570_DK_REV
1660:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER1, on_ld_toggle_button_click, &disp);
1661:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
1662:Src/app.c     **** #else
1663:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER, on_ld_toggle_button_click, &disp);
1664:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_USER, on_pd_toggle_button_click, &disp);
1665:Src/app.c     **** #endif
1666:Src/app.c     ****   while (1)
1667:Src/app.c     ****   {
1668:Src/app.c     ****     ret = xSemaphoreTake(disp.update, portMAX_DELAY);
1669:Src/app.c     ****     assert(ret == pdTRUE);
ARM GAS  /tmp/ccHyRziO.s 			page 48


1670:Src/app.c     **** 
1671:Src/app.c     ****     button_process(&ld_toggle_button);
1672:Src/app.c     ****     button_process(&hd_toggle_button);
1673:Src/app.c     **** 
1674:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1675:Src/app.c     ****     assert(ret == pdTRUE);
1676:Src/app.c     ****     info = disp.info;
1677:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1678:Src/app.c     ****     assert(ret == pdTRUE);
1679:Src/app.c     ****     info.disp_ms = disp_ms;
1680:Src/app.c     **** 
1681:Src/app.c     ****     ts = HAL_GetTick();
1682:Src/app.c     ****     dp_update_drawing_area();
1683:Src/app.c     ****     Display_NetworkOutput(&info);
1684:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
1685:Src/app.c     ****     dp_commit_drawing_area();
1686:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
1687:Src/app.c     ****   }
1688:Src/app.c     **** }
1689:Src/app.c     **** 
1690:Src/app.c     **** /**
1691:Src/app.c     ****  * @brief The main function for the Image Signal Processor (ISP) thread.
1692:Src/app.c     ****  * @details This task waits for the VSYNC signal and then runs the camera's
1693:Src/app.c     ****  * periodic processing functions (e.g., auto-exposure, auto-white-balance).
1694:Src/app.c     ****  */
1695:Src/app.c     **** static void isp_thread_fct(void *arg)
1696:Src/app.c     **** {
 393              		.loc 1 1696 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		.loc 1 1696 1 is_stmt 0 view .LVU118
 398 0000 10B5     		push	{r4, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 14, -4
1697:Src/app.c     ****   int ret;
1698:Src/app.c     **** 
1699:Src/app.c     ****   while (1) {
1700:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 402              		.loc 1 1700 11 view .LVU119
 403 0002 094C     		ldr	r4, .L20
 404              	.LVL19:
 405              	.L19:
1697:Src/app.c     ****   int ret;
 406              		.loc 1 1697 3 is_stmt 1 view .LVU120
1699:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 407              		.loc 1 1699 3 view .LVU121
 408              		.loc 1 1700 5 view .LVU122
 409              		.loc 1 1700 11 is_stmt 0 view .LVU123
 410 0004 4FF0FF31 		mov	r1, #-1
 411 0008 2068     		ldr	r0, [r4]
 412 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 413              	.LVL20:
1701:Src/app.c     ****     assert(ret == pdTRUE);
 414              		.loc 1 1701 5 is_stmt 1 view .LVU124
 415 000e 0128     		cmp	r0, #1
ARM GAS  /tmp/ccHyRziO.s 			page 49


 416 0010 06D0     		beq	.L18
 417              		.loc 1 1701 5 is_stmt 0 discriminator 1 view .LVU125
 418 0012 40F2A561 		movw	r1, #1701
 419 0016 054B     		ldr	r3, .L20+4
 420 0018 054A     		ldr	r2, .L20+8
 421 001a 0648     		ldr	r0, .L20+12
 422              	.LVL21:
 423              		.loc 1 1701 5 discriminator 1 view .LVU126
 424 001c FFF7FEFF 		bl	__assert_func
 425              	.LVL22:
 426              	.L18:
1702:Src/app.c     **** 
1703:Src/app.c     ****     CAM_IspUpdate();
 427              		.loc 1 1703 5 is_stmt 1 view .LVU127
 428 0020 FFF7FEFF 		bl	CAM_IspUpdate
 429              	.LVL23:
1699:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 430              		.loc 1 1699 9 view .LVU128
1700:Src/app.c     ****     assert(ret == pdTRUE);
 431              		.loc 1 1700 9 is_stmt 0 view .LVU129
 432 0024 EEE7     		b	.L19
 433              	.L21:
 434 0026 00BF     		.align	2
 435              	.L20:
 436 0028 00000000 		.word	isp_sem
 437 002c 00000000 		.word	.LC4
 438 0030 00000000 		.word	__func__.20
 439 0034 0E000000 		.word	.LC5
 440              		.cfi_endproc
 441              	.LFE7396:
 443              		.section	.text.on_pd_toggle_button_click,"ax",%progbits
 444              		.align	1
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 449              	on_pd_toggle_button_click:
 450              	.LVL24:
 451              	.LFB7394:
1634:Src/app.c     ****   display_t *disp = (display_t *) args;
 452              		.loc 1 1634 1 is_stmt 1 view -0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
1635:Src/app.c     ****   int ret;
 456              		.loc 1 1635 3 view .LVU131
1636:Src/app.c     **** 
 457              		.loc 1 1636 3 view .LVU132
1638:Src/app.c     ****   assert(ret == pdTRUE);
 458              		.loc 1 1638 3 view .LVU133
1634:Src/app.c     ****   display_t *disp = (display_t *) args;
 459              		.loc 1 1634 1 is_stmt 0 view .LVU134
 460 0000 10B5     		push	{r4, lr}
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 4, -8
 463              		.cfi_offset 14, -4
1638:Src/app.c     ****   assert(ret == pdTRUE);
 464              		.loc 1 1638 9 view .LVU135
ARM GAS  /tmp/ccHyRziO.s 			page 50


 465 0002 4FF0FF31 		mov	r1, #-1
1634:Src/app.c     ****   display_t *disp = (display_t *) args;
 466              		.loc 1 1634 1 view .LVU136
 467 0006 0446     		mov	r4, r0
1638:Src/app.c     ****   assert(ret == pdTRUE);
 468              		.loc 1 1638 9 view .LVU137
 469 0008 406D     		ldr	r0, [r0, #84]
 470              	.LVL25:
1638:Src/app.c     ****   assert(ret == pdTRUE);
 471              		.loc 1 1638 9 view .LVU138
 472 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 473              	.LVL26:
1639:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 474              		.loc 1 1639 3 is_stmt 1 view .LVU139
 475 000e 0128     		cmp	r0, #1
 476 0010 06D0     		beq	.L23
1639:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 477              		.loc 1 1639 3 is_stmt 0 discriminator 1 view .LVU140
 478 0012 40F26761 		movw	r1, #1639
 479 0016 0D4B     		ldr	r3, .L26
 480 0018 0D4A     		ldr	r2, .L26+4
 481              	.L25:
1642:Src/app.c     **** }
 482              		.loc 1 1642 3 discriminator 1 view .LVU141
 483 001a 0E48     		ldr	r0, .L26+8
 484              	.LVL27:
1642:Src/app.c     **** }
 485              		.loc 1 1642 3 discriminator 1 view .LVU142
 486 001c FFF7FEFF 		bl	__assert_func
 487              	.LVL28:
 488              	.L23:
1640:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 489              		.loc 1 1640 3 is_stmt 1 view .LVU143
1640:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 490              		.loc 1 1640 32 is_stmt 0 view .LVU144
 491 0020 D4F8C030 		ldr	r3, [r4, #192]
1641:Src/app.c     ****   assert(ret == pdTRUE);
 492              		.loc 1 1641 9 view .LVU145
 493 0024 606D     		ldr	r0, [r4, #84]
 494              	.LVL29:
1640:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 495              		.loc 1 1640 32 view .LVU146
 496 0026 B3FA83F3 		clz	r3, r3
 497 002a 5B09     		lsrs	r3, r3, #5
1640:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 498              		.loc 1 1640 30 view .LVU147
 499 002c C4F8C030 		str	r3, [r4, #192]
1641:Src/app.c     ****   assert(ret == pdTRUE);
 500              		.loc 1 1641 3 is_stmt 1 view .LVU148
1641:Src/app.c     ****   assert(ret == pdTRUE);
 501              		.loc 1 1641 9 is_stmt 0 view .LVU149
 502 0030 0023     		movs	r3, #0
 503 0032 1A46     		mov	r2, r3
 504 0034 1946     		mov	r1, r3
 505 0036 FFF7FEFF 		bl	xQueueGenericSend
 506              	.LVL30:
1642:Src/app.c     **** }
ARM GAS  /tmp/ccHyRziO.s 			page 51


 507              		.loc 1 1642 3 is_stmt 1 view .LVU150
 508 003a 0128     		cmp	r0, #1
 509 003c 04D0     		beq	.L22
1642:Src/app.c     **** }
 510              		.loc 1 1642 3 is_stmt 0 discriminator 1 view .LVU151
 511 003e 40F26A61 		movw	r1, #1642
 512 0042 024B     		ldr	r3, .L26
 513 0044 024A     		ldr	r2, .L26+4
 514 0046 E8E7     		b	.L25
 515              	.L22:
1643:Src/app.c     **** 
 516              		.loc 1 1643 1 view .LVU152
 517 0048 10BD     		pop	{r4, pc}
 518              	.LVL31:
 519              	.L27:
1643:Src/app.c     **** 
 520              		.loc 1 1643 1 view .LVU153
 521 004a 00BF     		.align	2
 522              	.L26:
 523 004c 00000000 		.word	.LC4
 524 0050 00000000 		.word	__func__.18
 525 0054 0E000000 		.word	.LC5
 526              		.cfi_endproc
 527              	.LFE7394:
 529              		.section	.text.on_ld_toggle_button_click,"ax",%progbits
 530              		.align	1
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	on_ld_toggle_button_click:
 536              	.LVL32:
 537              	.LFB7393:
1619:Src/app.c     ****   display_t *disp = (display_t *) args;
 538              		.loc 1 1619 1 is_stmt 1 view -0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
1620:Src/app.c     ****   int ret;
 542              		.loc 1 1620 3 view .LVU155
1621:Src/app.c     **** 
 543              		.loc 1 1621 3 view .LVU156
1623:Src/app.c     ****   assert(ret == pdTRUE);
 544              		.loc 1 1623 3 view .LVU157
1619:Src/app.c     ****   display_t *disp = (display_t *) args;
 545              		.loc 1 1619 1 is_stmt 0 view .LVU158
 546 0000 10B5     		push	{r4, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 4, -8
 549              		.cfi_offset 14, -4
1623:Src/app.c     ****   assert(ret == pdTRUE);
 550              		.loc 1 1623 9 view .LVU159
 551 0002 4FF0FF31 		mov	r1, #-1
1619:Src/app.c     ****   display_t *disp = (display_t *) args;
 552              		.loc 1 1619 1 view .LVU160
 553 0006 0446     		mov	r4, r0
1623:Src/app.c     ****   assert(ret == pdTRUE);
 554              		.loc 1 1623 9 view .LVU161
ARM GAS  /tmp/ccHyRziO.s 			page 52


 555 0008 406D     		ldr	r0, [r0, #84]
 556              	.LVL33:
1623:Src/app.c     ****   assert(ret == pdTRUE);
 557              		.loc 1 1623 9 view .LVU162
 558 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 559              	.LVL34:
1624:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 560              		.loc 1 1624 3 is_stmt 1 view .LVU163
 561 000e 0128     		cmp	r0, #1
 562 0010 06D0     		beq	.L29
1624:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 563              		.loc 1 1624 3 is_stmt 0 discriminator 1 view .LVU164
 564 0012 4FF4CB61 		mov	r1, #1624
 565 0016 0D4B     		ldr	r3, .L32
 566 0018 0D4A     		ldr	r2, .L32+4
 567              	.L31:
1627:Src/app.c     **** }
 568              		.loc 1 1627 3 discriminator 1 view .LVU165
 569 001a 0E48     		ldr	r0, .L32+8
 570              	.LVL35:
1627:Src/app.c     **** }
 571              		.loc 1 1627 3 discriminator 1 view .LVU166
 572 001c FFF7FEFF 		bl	__assert_func
 573              	.LVL36:
 574              	.L29:
1625:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 575              		.loc 1 1625 3 is_stmt 1 view .LVU167
1625:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 576              		.loc 1 1625 32 is_stmt 0 view .LVU168
 577 0020 D4F8BC30 		ldr	r3, [r4, #188]
1626:Src/app.c     ****   assert(ret == pdTRUE);
 578              		.loc 1 1626 9 view .LVU169
 579 0024 606D     		ldr	r0, [r4, #84]
 580              	.LVL37:
1625:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 581              		.loc 1 1625 32 view .LVU170
 582 0026 B3FA83F3 		clz	r3, r3
 583 002a 5B09     		lsrs	r3, r3, #5
1625:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 584              		.loc 1 1625 30 view .LVU171
 585 002c C4F8BC30 		str	r3, [r4, #188]
1626:Src/app.c     ****   assert(ret == pdTRUE);
 586              		.loc 1 1626 3 is_stmt 1 view .LVU172
1626:Src/app.c     ****   assert(ret == pdTRUE);
 587              		.loc 1 1626 9 is_stmt 0 view .LVU173
 588 0030 0023     		movs	r3, #0
 589 0032 1A46     		mov	r2, r3
 590 0034 1946     		mov	r1, r3
 591 0036 FFF7FEFF 		bl	xQueueGenericSend
 592              	.LVL38:
1627:Src/app.c     **** }
 593              		.loc 1 1627 3 is_stmt 1 view .LVU174
 594 003a 0128     		cmp	r0, #1
 595 003c 04D0     		beq	.L28
1627:Src/app.c     **** }
 596              		.loc 1 1627 3 is_stmt 0 discriminator 1 view .LVU175
 597 003e 40F25B61 		movw	r1, #1627
ARM GAS  /tmp/ccHyRziO.s 			page 53


 598 0042 024B     		ldr	r3, .L32
 599 0044 024A     		ldr	r2, .L32+4
 600 0046 E8E7     		b	.L31
 601              	.L28:
1628:Src/app.c     **** 
 602              		.loc 1 1628 1 view .LVU176
 603 0048 10BD     		pop	{r4, pc}
 604              	.LVL39:
 605              	.L33:
1628:Src/app.c     **** 
 606              		.loc 1 1628 1 view .LVU177
 607 004a 00BF     		.align	2
 608              	.L32:
 609 004c 00000000 		.word	.LC4
 610 0050 00000000 		.word	__func__.17
 611 0054 0E000000 		.word	.LC5
 612              		.cfi_endproc
 613              	.LFE7393:
 615              		.section	.text.button_process,"ax",%progbits
 616              		.align	1
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 621              	button_process:
 622              	.LVL40:
 623              	.LFB7353:
 503:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 624              		.loc 1 503 1 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 504:Src/app.c     **** 
 628              		.loc 1 504 3 view .LVU179
 503:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 629              		.loc 1 503 1 is_stmt 0 view .LVU180
 630 0000 38B5     		push	{r3, r4, r5, lr}
 631              		.cfi_def_cfa_offset 16
 632              		.cfi_offset 3, -16
 633              		.cfi_offset 4, -12
 634              		.cfi_offset 5, -8
 635              		.cfi_offset 14, -4
 503:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 636              		.loc 1 503 1 view .LVU181
 637 0002 0446     		mov	r4, r0
 504:Src/app.c     **** 
 638              		.loc 1 504 15 view .LVU182
 639 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 640              	.LVL41:
 504:Src/app.c     **** 
 641              		.loc 1 504 15 view .LVU183
 642 0006 FFF7FEFF 		bl	BSP_PB_GetState
 643              	.LVL42:
 506:Src/app.c     ****     b->on_click_handler(b->cb_args);
 644              		.loc 1 506 6 view .LVU184
 645 000a 6368     		ldr	r3, [r4, #4]
 504:Src/app.c     **** 
 646              		.loc 1 504 15 view .LVU185
ARM GAS  /tmp/ccHyRziO.s 			page 54


 647 000c 0546     		mov	r5, r0
 648              	.LVL43:
 506:Src/app.c     ****     b->on_click_handler(b->cb_args);
 649              		.loc 1 506 3 is_stmt 1 view .LVU186
 506:Src/app.c     ****     b->on_click_handler(b->cb_args);
 650              		.loc 1 506 6 is_stmt 0 view .LVU187
 651 000e 8342     		cmp	r3, r0
 652 0010 04D0     		beq	.L35
 506:Src/app.c     ****     b->on_click_handler(b->cb_args);
 653              		.loc 1 506 30 discriminator 1 view .LVU188
 654 0012 18B1     		cbz	r0, .L35
 506:Src/app.c     ****     b->on_click_handler(b->cb_args);
 655              		.loc 1 506 43 discriminator 2 view .LVU189
 656 0014 A368     		ldr	r3, [r4, #8]
 506:Src/app.c     ****     b->on_click_handler(b->cb_args);
 657              		.loc 1 506 39 discriminator 2 view .LVU190
 658 0016 0BB1     		cbz	r3, .L35
 507:Src/app.c     **** 
 659              		.loc 1 507 5 is_stmt 1 view .LVU191
 660 0018 E068     		ldr	r0, [r4, #12]
 661              	.LVL44:
 507:Src/app.c     **** 
 662              		.loc 1 507 5 is_stmt 0 view .LVU192
 663 001a 9847     		blx	r3
 664              	.LVL45:
 665              	.L35:
 509:Src/app.c     **** }
 666              		.loc 1 509 3 is_stmt 1 view .LVU193
 509:Src/app.c     **** }
 667              		.loc 1 509 17 is_stmt 0 view .LVU194
 668 001c 6560     		str	r5, [r4, #4]
 510:Src/app.c     **** 
 669              		.loc 1 510 1 view .LVU195
 670 001e 38BD     		pop	{r3, r4, r5, pc}
 510:Src/app.c     **** 
 671              		.loc 1 510 1 view .LVU196
 672              		.cfi_endproc
 673              	.LFE7353:
 675              		.section	.rodata.button_init.part.0.str1.1,"aMS",%progbits,1
 676              	.LC6:
 677 0000 72657420 		.ascii	"ret == BSP_ERROR_NONE\000"
 677      3D3D2042 
 677      53505F45 
 677      52524F52 
 677      5F4E4F4E 
 678              		.section	.text.button_init.part.0,"ax",%progbits
 679              		.align	1
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	button_init.part.0:
 685              	.LFB7401:
 485:Src/app.c     **** {
 686              		.loc 1 485 13 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ Volatile: function does not return.
 689              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccHyRziO.s 			page 55


 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              	.LVL46:
 485:Src/app.c     **** {
 692              		.loc 1 485 13 is_stmt 0 view .LVU198
 693 0000 08B5     		push	{r3, lr}
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 3, -8
 696              		.cfi_offset 14, -4
 490:Src/app.c     **** 
 697              		.loc 1 490 3 discriminator 1 view .LVU199
 698 0002 4FF4F571 		mov	r1, #490
 699 0006 024B     		ldr	r3, .L43
 700 0008 024A     		ldr	r2, .L43+4
 701 000a 0348     		ldr	r0, .L43+8
 702 000c FFF7FEFF 		bl	__assert_func
 703              	.LVL47:
 704              	.L44:
 705              		.align	2
 706              	.L43:
 707 0010 00000000 		.word	.LC6
 708 0014 00000000 		.word	__func__.16
 709 0018 0E000000 		.word	.LC5
 710              		.cfi_endproc
 711              	.LFE7401:
 713              		.section	.text.display_ld_hand,"ax",%progbits
 714              		.align	1
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 719              	display_ld_hand:
 720              	.LVL48:
 721              	.LFB7374:
 923:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 722              		.loc 1 923 1 is_stmt 1 view -0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 264
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 924:Src/app.c     ****   roi_t *roi = &hand->roi;
 726              		.loc 1 924 3 view .LVU201
 925:Src/app.c     ****   int x[LD_LANDMARK_NB];
 727              		.loc 1 925 3 view .LVU202
 923:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 728              		.loc 1 923 1 is_stmt 0 view .LVU203
 729 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 730              		.cfi_def_cfa_offset 32
 731              		.cfi_offset 4, -32
 732              		.cfi_offset 5, -28
 733              		.cfi_offset 6, -24
 734              		.cfi_offset 7, -20
 735              		.cfi_offset 8, -16
 736              		.cfi_offset 9, -12
 737              		.cfi_offset 10, -8
 738              		.cfi_offset 14, -4
 739 0004 C4B0     		sub	sp, sp, #272
 740              		.cfi_def_cfa_offset 304
 741 0006 2FAE     		add	r6, sp, #188
 925:Src/app.c     ****   int x[LD_LANDMARK_NB];
ARM GAS  /tmp/ccHyRziO.s 			page 56


 742              		.loc 1 925 10 view .LVU204
 743 0008 B146     		mov	r9, r6
 932:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 744              		.loc 1 932 10 view .LVU205
 745 000a 0025     		movs	r5, #0
 925:Src/app.c     ****   int x[LD_LANDMARK_NB];
 746              		.loc 1 925 10 view .LVU206
 747 000c 00F11C0A 		add	r10, r0, #28
 748              	.LVL49:
 926:Src/app.c     ****   int y[LD_LANDMARK_NB];
 749              		.loc 1 926 3 is_stmt 1 view .LVU207
 927:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 750              		.loc 1 927 3 view .LVU208
 928:Src/app.c     ****   ld_point_t decoded;
 751              		.loc 1 928 3 view .LVU209
 929:Src/app.c     ****   int i;
 752              		.loc 1 929 3 view .LVU210
 930:Src/app.c     **** 
 753              		.loc 1 930 3 view .LVU211
 932:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 754              		.loc 1 932 3 view .LVU212
 932:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 755              		.loc 1 932 17 discriminator 1 view .LVU213
 756 0010 00F13004 		add	r4, r0, #48
 757 0014 05AF     		add	r7, sp, #20
 758              	.LVL50:
 759              	.L47:
 933:Src/app.c     ****     x[i] = (int)decoded.x;
 760              		.loc 1 933 5 view .LVU214
 761 0016 2146     		mov	r1, r4
 762 0018 5046     		mov	r0, r10
 763 001a 03AA     		add	r2, sp, #12
 764 001c FFF7FEFF 		bl	decode_ld_landmark
 765              	.LVL51:
 934:Src/app.c     ****     y[i] = (int)decoded.y;
 766              		.loc 1 934 5 view .LVU215
 934:Src/app.c     ****     y[i] = (int)decoded.y;
 767              		.loc 1 934 12 is_stmt 0 view .LVU216
 768 0020 DDED037A 		vldr.32	s15, [sp, #12]
 769 0024 FDEEE77A 		vcvt.s32.f32	s15, s15
 770 0028 17EE901A 		vmov	r1, s15	@ int
 935:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 771              		.loc 1 935 5 is_stmt 1 view .LVU217
 935:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 772              		.loc 1 935 12 is_stmt 0 view .LVU218
 773 002c DDED047A 		vldr.32	s15, [sp, #16]
 774 0030 FDEEE77A 		vcvt.s32.f32	s15, s15
 775              	.LBB231:
 776              	.LBB232:
 773:Src/app.c     ****     *x = margin;
 777              		.loc 1 773 6 view .LVU219
 778 0034 0229     		cmp	r1, #2
 779 0036 0A46     		mov	r2, r1
 777:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 780              		.loc 1 777 6 view .LVU220
 781 0038 40F21D30 		movw	r0, #797
 773:Src/app.c     ****     *x = margin;
ARM GAS  /tmp/ccHyRziO.s 			page 57


 782              		.loc 1 773 6 view .LVU221
 783 003c B8BF     		it	lt
 784 003e 0222     		movlt	r2, #2
 785              	.LBE232:
 786              	.LBE231:
 935:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 787              		.loc 1 935 12 view .LVU222
 788 0040 17EE903A 		vmov	r3, s15	@ int
 936:Src/app.c     ****   }
 789              		.loc 1 936 5 is_stmt 1 view .LVU223
 790              	.LVL52:
 791              	.LBB234:
 792              	.LBI231:
 768:Src/app.c     **** {
 793              		.loc 1 768 12 view .LVU224
 794              	.LBB233:
 770:Src/app.c     ****   int yi = *y;
 795              		.loc 1 770 3 view .LVU225
 771:Src/app.c     **** 
 796              		.loc 1 771 3 view .LVU226
 773:Src/app.c     ****     *x = margin;
 797              		.loc 1 773 3 view .LVU227
 775:Src/app.c     ****     *y = margin;
 798              		.loc 1 775 3 view .LVU228
 777:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 799              		.loc 1 777 3 view .LVU229
 777:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 800              		.loc 1 777 6 is_stmt 0 view .LVU230
 801 0044 8242     		cmp	r2, r0
 802 0046 A8BF     		it	ge
 803 0048 0246     		movge	r2, r0
 775:Src/app.c     ****     *y = margin;
 804              		.loc 1 775 6 view .LVU231
 805 004a 022B     		cmp	r3, #2
 806 004c 1846     		mov	r0, r3
 779:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 807              		.loc 1 779 6 view .LVU232
 808 004e 40F2DD1C 		movw	ip, #477
 775:Src/app.c     ****     *y = margin;
 809              		.loc 1 775 6 view .LVU233
 810 0052 B8BF     		it	lt
 811 0054 0220     		movlt	r0, #2
 779:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 812              		.loc 1 779 6 view .LVU234
 813 0056 6045     		cmp	r0, ip
 814 0058 A8BF     		it	ge
 815 005a 6046     		movge	r0, ip
 782:Src/app.c     **** }
 816              		.loc 1 782 21 discriminator 2 view .LVU235
 817 005c 1B1A     		subs	r3, r3, r0
 818              	.LVL53:
 782:Src/app.c     **** }
 819              		.loc 1 782 21 discriminator 2 view .LVU236
 820 005e 18BF     		it	ne
 821 0060 0123     		movne	r3, #1
 822 0062 9142     		cmp	r1, r2
 823 0064 18BF     		it	ne
ARM GAS  /tmp/ccHyRziO.s 			page 58


 824 0066 0123     		movne	r3, #1
 825 0068 0DF16808 		add	r8, sp, #104
 826 006c 47F82520 		str	r2, [r7, r5, lsl #2]
 779:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 827              		.loc 1 779 3 is_stmt 1 view .LVU237
 828 0070 48F82500 		str	r0, [r8, r5, lsl #2]
 782:Src/app.c     **** }
 829              		.loc 1 782 3 view .LVU238
 830              	.LVL54:
 782:Src/app.c     **** }
 831              		.loc 1 782 3 is_stmt 0 view .LVU239
 832              	.LBE233:
 833              	.LBE234:
 932:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 834              		.loc 1 932 36 discriminator 3 view .LVU240
 835 0074 0135     		adds	r5, r5, #1
 836              	.LVL55:
 932:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 837              		.loc 1 932 17 discriminator 1 view .LVU241
 838 0076 152D     		cmp	r5, #21
 936:Src/app.c     ****   }
 839              		.loc 1 936 19 discriminator 1 view .LVU242
 840 0078 49F8043B 		str	r3, [r9], #4
 932:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 841              		.loc 1 932 36 is_stmt 1 discriminator 3 view .LVU243
 842              	.LVL56:
 932:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 843              		.loc 1 932 17 discriminator 1 view .LVU244
 844 007c 04F10804 		add	r4, r4, #8
 845 0080 C9D1     		bne	.L47
 939:Src/app.c     ****     if (is_clamped[i])
 846              		.loc 1 939 10 is_stmt 0 view .LVU245
 847 0082 0024     		movs	r4, #0
 848              	.LVL57:
 849              	.L49:
 940:Src/app.c     ****       continue;
 850              		.loc 1 940 5 is_stmt 1 view .LVU246
 940:Src/app.c     ****       continue;
 851              		.loc 1 940 19 is_stmt 0 view .LVU247
 852 0084 56F8043B 		ldr	r3, [r6], #4
 940:Src/app.c     ****       continue;
 853              		.loc 1 940 8 view .LVU248
 854 0088 43B9     		cbnz	r3, .L48
 942:Src/app.c     ****   }
 855              		.loc 1 942 5 is_stmt 1 view .LVU249
 856 008a 6FF0FF03 		mvn	r3, #255
 857 008e 0222     		movs	r2, #2
 858 0090 58F82410 		ldr	r1, [r8, r4, lsl #2]
 859 0094 57F82400 		ldr	r0, [r7, r4, lsl #2]
 860 0098 FFF7FEFF 		bl	UTIL_LCD_FillCircle
 861              	.LVL58:
 862              	.L48:
 939:Src/app.c     ****     if (is_clamped[i])
 863              		.loc 1 939 36 discriminator 2 view .LVU250
 864 009c 0134     		adds	r4, r4, #1
 865              	.LVL59:
 939:Src/app.c     ****     if (is_clamped[i])
ARM GAS  /tmp/ccHyRziO.s 			page 59


 866              		.loc 1 939 17 discriminator 1 view .LVU251
 867 009e 152C     		cmp	r4, #21
 868 00a0 F0D1     		bne	.L49
 945:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 869              		.loc 1 945 10 is_stmt 0 view .LVU252
 870 00a2 0025     		movs	r5, #0
 948:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 871              		.loc 1 948 5 view .LVU253
 872 00a4 4FF07F46 		mov	r6, #-16777216
 873 00a8 104C     		ldr	r4, .L56
 874              	.LVL60:
 875              	.L51:
 946:Src/app.c     ****       continue;
 876              		.loc 1 946 5 is_stmt 1 view .LVU254
 946:Src/app.c     ****       continue;
 877              		.loc 1 946 38 is_stmt 0 view .LVU255
 878 00aa 2068     		ldr	r0, [r4]
 946:Src/app.c     ****       continue;
 879              		.loc 1 946 19 view .LVU256
 880 00ac 44AB     		add	r3, sp, #272
 881 00ae 03EB8000 		add	r0, r3, r0, lsl #2
 946:Src/app.c     ****       continue;
 882              		.loc 1 946 8 view .LVU257
 883 00b2 50F8543C 		ldr	r3, [r0, #-84]
 884 00b6 8BB9     		cbnz	r3, .L50
 946:Src/app.c     ****       continue;
 885              		.loc 1 946 75 discriminator 2 view .LVU258
 886 00b8 6268     		ldr	r2, [r4, #4]
 946:Src/app.c     ****       continue;
 887              		.loc 1 946 56 discriminator 2 view .LVU259
 888 00ba 44AB     		add	r3, sp, #272
 889 00bc 03EB8202 		add	r2, r3, r2, lsl #2
 946:Src/app.c     ****       continue;
 890              		.loc 1 946 43 discriminator 2 view .LVU260
 891 00c0 52F8543C 		ldr	r3, [r2, #-84]
 892 00c4 53B9     		cbnz	r3, .L50
 948:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 893              		.loc 1 948 5 is_stmt 1 view .LVU261
 894 00c6 0096     		str	r6, [sp]
 895 00c8 52F8A83C 		ldr	r3, [r2, #-168]
 896 00cc 50F8A81C 		ldr	r1, [r0, #-168]
 897 00d0 52F8FC2C 		ldr	r2, [r2, #-252]
 898 00d4 50F8FC0C 		ldr	r0, [r0, #-252]
 899 00d8 FFF7FEFF 		bl	UTIL_LCD_DrawLine
 900              	.LVL61:
 901              	.L50:
 945:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 902              		.loc 1 945 35 discriminator 2 view .LVU262
 903 00dc 0135     		adds	r5, r5, #1
 904              	.LVL62:
 945:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 905              		.loc 1 945 17 discriminator 1 view .LVU263
 906 00de 152D     		cmp	r5, #21
 907 00e0 04F10804 		add	r4, r4, #8
 908 00e4 E1D1     		bne	.L51
 952:Src/app.c     **** 
 909              		.loc 1 952 1 is_stmt 0 view .LVU264
ARM GAS  /tmp/ccHyRziO.s 			page 60


 910 00e6 44B0     		add	sp, sp, #272
 911              		.cfi_def_cfa_offset 32
 912              		@ sp needed
 913 00e8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 914              	.LVL63:
 915              	.L57:
 952:Src/app.c     **** 
 916              		.loc 1 952 1 view .LVU265
 917              		.align	2
 918              	.L56:
 919 00ec 00000000 		.word	ld_bindings_idx
 920              		.cfi_endproc
 921              	.LFE7374:
 923              		.section	.text.roi_shift_and_scale.constprop.0,"ax",%progbits
 924              		.align	1
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 929              	roi_shift_and_scale.constprop.0:
 930              	.LVL64:
 931              	.LFB7403:
 417:Src/app.c     **** {
 932              		.loc 1 417 13 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 419:Src/app.c     ****   float sx, sy;
 936              		.loc 1 419 3 view .LVU267
 420:Src/app.c     **** 
 937              		.loc 1 420 3 view .LVU268
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 938              		.loc 1 422 3 view .LVU269
 417:Src/app.c     **** {
 939              		.loc 1 417 13 is_stmt 0 view .LVU270
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 2DED0C8B 		vpush.64	{d8, d9, d10, d11, d12, d13}
 945              		.cfi_def_cfa_offset 56
 946              		.cfi_offset 80, -56
 947              		.cfi_offset 81, -52
 948              		.cfi_offset 82, -48
 949              		.cfi_offset 83, -44
 950              		.cfi_offset 84, -40
 951              		.cfi_offset 85, -36
 952              		.cfi_offset 86, -32
 953              		.cfi_offset 87, -28
 954              		.cfi_offset 88, -24
 955              		.cfi_offset 89, -20
 956              		.cfi_offset 90, -16
 957              		.cfi_offset 91, -12
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 958              		.loc 1 422 28 view .LVU271
 959 0006 90ED04CA 		vldr.32	s24, [r0, #16]
 960 000a B7EECCCA 		vcvt.f64.f32	d12, s24
 417:Src/app.c     **** {
ARM GAS  /tmp/ccHyRziO.s 			page 61


 961              		.loc 1 417 13 view .LVU272
 962 000e 0446     		mov	r4, r0
 963 0010 B0EE40AA 		vmov.f32	s20, s0
 964 0014 F0EE609A 		vmov.f32	s19, s1
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 965              		.loc 1 422 28 view .LVU273
 966 0018 B0EE4C0B 		vmov.f64	d0, d12
 967              	.LVL65:
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 968              		.loc 1 422 12 view .LVU274
 969 001c D0ED02DA 		vldr.32	s27, [r0, #8]
 417:Src/app.c     **** {
 970              		.loc 1 417 13 view .LVU275
 971 0020 B0EE41DA 		vmov.f32	s26, s2
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 972              		.loc 1 422 28 view .LVU276
 973 0024 FFF7FEFF 		bl	cos
 974              	.LVL66:
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 975              		.loc 1 422 52 discriminator 1 view .LVU277
 976 0028 94ED039A 		vldr.32	s18, [r4, #12]
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 977              		.loc 1 422 16 view .LVU278
 978 002c 9FED1CBA 		vldr.32	s22, .L62
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 979              		.loc 1 422 56 discriminator 1 view .LVU279
 980 0030 29EE0AAA 		vmul.f32	s20, s18, s20
 981              	.LVL67:
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 982              		.loc 1 422 28 view .LVU280
 983 0034 B0EE408B 		vmov.f64	d8, d0
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 984              		.loc 1 422 68 discriminator 1 view .LVU281
 985 0038 B0EE4C0B 		vmov.f64	d0, d12
 986 003c FFF7FEFF 		bl	sin
 987              	.LVL68:
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 988              		.loc 1 422 56 discriminator 1 view .LVU282
 989 0040 B7EECAAA 		vcvt.f64.f32	d10, s20
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 990              		.loc 1 422 16 view .LVU283
 991 0044 2DEE8BBA 		vmul.f32	s22, s27, s22
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 992              		.loc 1 422 47 discriminator 2 view .LVU284
 993 0048 20EE4A7B 		vnmul.f64	d7, d0, d10
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 994              		.loc 1 422 16 view .LVU285
 995 004c B7EECBBA 		vcvt.f64.f32	d11, s22
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 996              		.loc 1 422 47 discriminator 2 view .LVU286
 997 0050 ABEE087B 		vfma.f64	d7, d11, d8
 423:Src/app.c     **** 
 998              		.loc 1 423 66 discriminator 2 view .LVU287
 999 0054 28EE0A8B 		vmul.f64	d8, d8, d10
 422:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 1000              		.loc 1 422 6 discriminator 2 view .LVU288
 1001 0058 B7EEC77B 		vcvt.f32.f64	s14, d7
ARM GAS  /tmp/ccHyRziO.s 			page 62


 1002              	.LVL69:
 423:Src/app.c     **** 
 1003              		.loc 1 423 3 is_stmt 1 view .LVU289
 425:Src/app.c     ****   roi->cy += sy;
 1004              		.loc 1 425 11 is_stmt 0 view .LVU290
 1005 005c D4ED007A 		vldr.32	s15, [r4]
 428:Src/app.c     ****   roi->w = long_side;
 1006              		.loc 1 428 15 discriminator 1 view .LVU291
 1007 0060 F4EE49DA 		vcmp.f32	s27, s18
 423:Src/app.c     **** 
 1008              		.loc 1 423 47 discriminator 2 view .LVU292
 1009 0064 ABEE008B 		vfma.f64	d8, d11, d0
 1010              	.LVL70:
 425:Src/app.c     ****   roi->cy += sy;
 1011              		.loc 1 425 3 is_stmt 1 view .LVU293
 425:Src/app.c     ****   roi->cy += sy;
 1012              		.loc 1 425 11 is_stmt 0 view .LVU294
 1013 0068 77EE877A 		vadd.f32	s15, s15, s14
 428:Src/app.c     ****   roi->w = long_side;
 1014              		.loc 1 428 15 discriminator 1 view .LVU295
 1015 006c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 423:Src/app.c     **** 
 1016              		.loc 1 423 6 discriminator 2 view .LVU296
 1017 0070 B7EEC88B 		vcvt.f32.f64	s16, d8
 1018              	.LVL71:
 425:Src/app.c     ****   roi->cy += sy;
 1019              		.loc 1 425 11 view .LVU297
 1020 0074 C4ED007A 		vstr.32	s15, [r4]
 426:Src/app.c     **** 
 1021              		.loc 1 426 3 is_stmt 1 view .LVU298
 426:Src/app.c     **** 
 1022              		.loc 1 426 11 is_stmt 0 view .LVU299
 1023 0078 D4ED017A 		vldr.32	s15, [r4, #4]
 428:Src/app.c     ****   roi->w = long_side;
 1024              		.loc 1 428 15 discriminator 1 view .LVU300
 1025 007c 3DFE899A 		vselgt.f32	s18, s27, s18
 432:Src/app.c     ****   roi->h *= scale_y;
 1026              		.loc 1 432 10 view .LVU301
 1027 0080 69EE299A 		vmul.f32	s19, s18, s19
 1028              	.LVL72:
 426:Src/app.c     **** 
 1029              		.loc 1 426 11 view .LVU302
 1030 0084 77EE887A 		vadd.f32	s15, s15, s16
 433:Src/app.c     **** }
 1031              		.loc 1 433 10 view .LVU303
 1032 0088 29EE0D9A 		vmul.f32	s18, s18, s26
 432:Src/app.c     ****   roi->h *= scale_y;
 1033              		.loc 1 432 10 view .LVU304
 1034 008c C4ED029A 		vstr.32	s19, [r4, #8]
 433:Src/app.c     **** }
 1035              		.loc 1 433 10 view .LVU305
 1036 0090 84ED039A 		vstr.32	s18, [r4, #12]
 434:Src/app.c     **** 
 1037              		.loc 1 434 1 view .LVU306
 1038 0094 BDEC0C8B 		vldm	sp!, {d8-d13}
 1039              		.cfi_restore 90
 1040              		.cfi_restore 91
ARM GAS  /tmp/ccHyRziO.s 			page 63


 1041              		.cfi_restore 88
 1042              		.cfi_restore 89
 1043              		.cfi_restore 86
 1044              		.cfi_restore 87
 1045              		.cfi_restore 84
 1046              		.cfi_restore 85
 1047              		.cfi_restore 82
 1048              		.cfi_restore 83
 1049              		.cfi_restore 80
 1050              		.cfi_restore 81
 1051              		.cfi_def_cfa_offset 8
 1052              	.LVL73:
 426:Src/app.c     **** 
 1053              		.loc 1 426 11 view .LVU307
 1054 0098 C4ED017A 		vstr.32	s15, [r4, #4]
 428:Src/app.c     ****   roi->w = long_side;
 1055              		.loc 1 428 3 is_stmt 1 view .LVU308
 429:Src/app.c     ****   roi->h = long_side;
 1056              		.loc 1 429 3 view .LVU309
 430:Src/app.c     **** 
 1057              		.loc 1 430 3 view .LVU310
 432:Src/app.c     ****   roi->h *= scale_y;
 1058              		.loc 1 432 3 view .LVU311
 433:Src/app.c     **** }
 1059              		.loc 1 433 3 view .LVU312
 434:Src/app.c     **** 
 1060              		.loc 1 434 1 is_stmt 0 view .LVU313
 1061 009c 10BD     		pop	{r4, pc}
 1062              	.LVL74:
 1063              	.L63:
 434:Src/app.c     **** 
 1064              		.loc 1 434 1 view .LVU314
 1065 009e 00BF     		.align	2
 1066              	.L62:
 1067 00a0 00000000 		.word	0
 1068              		.cfi_endproc
 1069              	.LFE7403:
 1071              		.section	.rodata.nn_thread_fct.str1.1,"aMS",%progbits,1
 1072              	.LC7:
 1073 0000 696E666F 		.ascii	"info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIO"
 1073      2D3E7072 
 1073      6F625F6F 
 1073      75745F6C 
 1073      656E203D 
 1074 0033 4E53202A 		.ascii	"NS * sizeof(float)\000"
 1074      2073697A 
 1074      656F6628 
 1074      666C6F61 
 1074      742900
 1075              	.LC8:
 1076 0046 696E666F 		.ascii	"info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTI"
 1076      2D3E626F 
 1076      7865735F 
 1076      6F75745F 
 1076      6C656E20 
 1077 0079 4F4E5320 		.ascii	"ONS * sizeof(float) * 18\000"
 1077      2A207369 
ARM GAS  /tmp/ccHyRziO.s 			page 64


 1077      7A656F66 
 1077      28666C6F 
 1077      61742920 
 1078              	.LC9:
 1079 0092 72657420 		.ascii	"ret == AI_PD_POSTPROCESS_ERROR_NO\000"
 1079      3D3D2041 
 1079      495F5044 
 1079      5F504F53 
 1079      5450524F 
 1080              	.LC10:
 1081 00b4 696E666F 		.ascii	"info->prob_out_len == sizeof(float)\000"
 1081      2D3E7072 
 1081      6F625F6F 
 1081      75745F6C 
 1081      656E203D 
 1082              	.LC11:
 1083 00d8 696E666F 		.ascii	"info->landmarks_out_len == sizeof(float) * 63\000"
 1083      2D3E6C61 
 1083      6E646D61 
 1083      726B735F 
 1083      6F75745F 
 1084              	.LC12:
 1085 0106 696E6974 		.ascii	"init nema\000"
 1085      206E656D 
 1085      6100
 1086              	.LC13:
 1087 0110 216E656D 		.ascii	"!nema_get_error()\000"
 1087      615F6765 
 1087      745F6572 
 1087      726F7228 
 1087      2900
 1088              	.LC14:
 1089 0122 696E6974 		.ascii	"init nema DONE %s\012\000"
 1089      206E656D 
 1089      6120444F 
 1089      4E452025 
 1089      730A00
 1090              	.LC15:
 1091 0135 72657420 		.ascii	"ret == HAL_OK\000"
 1091      3D3D2048 
 1091      414C5F4F 
 1091      4B00
 1092              	.LC16:
 1093 0143 6E6E5F70 		.ascii	"nn_pipe_dst\000"
 1093      6970655F 
 1093      64737400 
 1094              	.LC17:
 1095 014f 63617074 		.ascii	"capture_buffer\000"
 1095      7572655F 
 1095      62756666 
 1095      657200
 1096              	.LC18:
 1097 015e 72657420 		.ascii	"ret == LL_ATON_User_IO_NOERROR\000"
 1097      3D3D204C 
 1097      4C5F4154 
 1097      4F4E5F55 
 1097      7365725F 
ARM GAS  /tmp/ccHyRziO.s 			page 65


 1098              		.section	.text.nn_thread_fct,"ax",%progbits
 1099              		.align	1
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1104              	nn_thread_fct:
 1105              	.LVL75:
 1106              	.LFB7390:
1470:Src/app.c     ****   /* Variables for filtering/smoothing performance metrics. */
 1107              		.loc 1 1470 1 is_stmt 1 view -0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 1040
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
1472:Src/app.c     ****   float pd_filtered_ms = 0;
 1111              		.loc 1 1472 3 view .LVU316
1473:Src/app.c     ****   float ld_filtered_ms = 0;
 1112              		.loc 1 1473 3 view .LVU317
1474:Src/app.c     **** 
 1113              		.loc 1 1474 3 view .LVU318
1477:Src/app.c     ****   pd_model_info_t pd_info;
 1114              		.loc 1 1477 3 view .LVU319
1478:Src/app.c     ****   yolo_model_info_t yolo_info;
 1115              		.loc 1 1478 3 view .LVU320
1479:Src/app.c     **** 
 1116              		.loc 1 1479 3 view .LVU321
1482:Src/app.c     ****   uint32_t nn_period[2];
 1117              		.loc 1 1482 3 view .LVU322
1483:Src/app.c     ****   uint8_t *nn_pipe_dst;
 1118              		.loc 1 1483 3 view .LVU323
1484:Src/app.c     **** 
 1119              		.loc 1 1484 3 view .LVU324
1487:Src/app.c     ****   pd_pp_box_t box_next;
 1120              		.loc 1 1487 3 view .LVU325
1488:Src/app.c     ****   od_pp_out_t boxes_next[YOLO_MAX_NB];
 1121              		.loc 1 1488 3 view .LVU326
1489:Src/app.c     **** 
 1122              		.loc 1 1489 3 view .LVU327
1492:Src/app.c     ****   roi_t roi_next;
 1123              		.loc 1 1492 3 view .LVU328
1493:Src/app.c     ****   uint32_t pd_ms;
 1124              		.loc 1 1493 3 view .LVU329
1494:Src/app.c     ****   uint32_t hl_ms;
 1125              		.loc 1 1494 3 view .LVU330
1495:Src/app.c     ****   uint32_t yolo_ms;
 1126              		.loc 1 1495 3 view .LVU331
1496:Src/app.c     ****   uint32_t fl_ms;
 1127              		.loc 1 1496 3 view .LVU332
1497:Src/app.c     ****   int ret;
 1128              		.loc 1 1497 3 view .LVU333
1498:Src/app.c     ****   int j;
 1129              		.loc 1 1498 3 view .LVU334
1499:Src/app.c     ****   int temp = 0;
 1130              		.loc 1 1499 3 view .LVU335
1500:Src/app.c     **** 
 1131              		.loc 1 1500 3 view .LVU336
1503:Src/app.c     **** 
 1132              		.loc 1 1503 3 view .LVU337
ARM GAS  /tmp/ccHyRziO.s 			page 66


1506:Src/app.c     ****   box_next.pKps = box_next_keypoints;
 1133              		.loc 1 1506 3 view .LVU338
1470:Src/app.c     ****   /* Variables for filtering/smoothing performance metrics. */
 1134              		.loc 1 1470 1 is_stmt 0 view .LVU339
 1135 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1136              		.cfi_def_cfa_offset 36
 1137              		.cfi_offset 4, -36
 1138              		.cfi_offset 5, -32
 1139              		.cfi_offset 6, -28
 1140              		.cfi_offset 7, -24
 1141              		.cfi_offset 8, -20
 1142              		.cfi_offset 9, -16
 1143              		.cfi_offset 10, -12
 1144              		.cfi_offset 11, -8
 1145              		.cfi_offset 14, -4
 1146 0004 2DED088B 		vpush.64	{d8, d9, d10, d11}
 1147              		.cfi_def_cfa_offset 68
 1148              		.cfi_offset 80, -68
 1149              		.cfi_offset 81, -64
 1150              		.cfi_offset 82, -60
 1151              		.cfi_offset 83, -56
 1152              		.cfi_offset 84, -52
 1153              		.cfi_offset 85, -48
 1154              		.cfi_offset 86, -44
 1155              		.cfi_offset 87, -40
 1156 0008 ADF21C4D 		subw	sp, sp, #1052
 1157              		.cfi_def_cfa_offset 1120
 1158              	.LVL76:
 1159              	.LBB372:
 1160              	.LBI372:
1026:Src/app.c     **** {
 1161              		.loc 1 1026 13 is_stmt 1 view .LVU340
 1162              	.LBB373:
1029:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
 1163              		.loc 1 1029 3 view .LVU341
1029:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
 1164              		.loc 1 1029 46 is_stmt 0 view .LVU342
 1165 000c FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_palm_detector
 1166              	.LVL77:
1029:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
 1167              		.loc 1 1029 46 view .LVU343
 1168 0010 0446     		mov	r4, r0
 1169              	.LVL78:
1030:Src/app.c     ****   int ret;
 1170              		.loc 1 1030 3 is_stmt 1 view .LVU344
1030:Src/app.c     ****   int ret;
 1171              		.loc 1 1030 45 is_stmt 0 view .LVU345
 1172 0012 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_palm_detector
 1173              	.LVL79:
1031:Src/app.c     **** 
 1174              		.loc 1 1031 3 is_stmt 1 view .LVU346
1034:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1175              		.loc 1 1034 3 view .LVU347
 1176              	.LBB374:
 1177              	.LBI374:
 583:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 584:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf)
ARM GAS  /tmp/ccHyRziO.s 			page 67


 585:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 586:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_end;
 587:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 588:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 589:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf)
 590:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 591:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_limit;
 592:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 593:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 594:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf)
 1178              		.loc 2 594 26 view .LVU348
 1179              	.LBB375:
 595:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 596:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->offset_end - buf->offset_start;
 1180              		.loc 2 596 5 view .LVU349
 1181              		.loc 2 596 28 is_stmt 0 view .LVU350
 1182 0016 D0E90223 		ldrd	r2, r3, [r0, #8]
 1183              	.LBE375:
 1184              	.LBE374:
1035:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1185              		.loc 1 1035 30 view .LVU351
 1186 001a 2046     		mov	r0, r4
 1187              	.LVL80:
 1188              	.LBB377:
 1189              	.LBB376:
 1190              		.loc 2 596 28 view .LVU352
 1191 001c 9B1A     		subs	r3, r3, r2
 1192              	.LBE376:
 1193              	.LBE377:
1034:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1194              		.loc 1 1034 19 discriminator 1 view .LVU353
 1195 001e 4893     		str	r3, [sp, #288]
1035:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1196              		.loc 1 1035 3 is_stmt 1 view .LVU354
1035:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1197              		.loc 1 1035 30 is_stmt 0 view .LVU355
 1198 0020 FFF7FEFF 		bl	LL_Buffer_addr_start
 1199              	.LVL81:
 1200              	.LBB378:
 1201              	.LBB379:
 1202              		.loc 2 596 28 view .LVU356
 1203 0024 D4E90223 		ldrd	r2, r3, [r4, #8]
 1204 0028 9B1A     		subs	r3, r3, r2
 1205              	.LBE379:
 1206              	.LBE378:
1037:Src/app.c     ****   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1207              		.loc 1 1037 3 view .LVU357
 1208 002a B3F5FC5F 		cmp	r3, #8064
1035:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1209              		.loc 1 1035 18 discriminator 1 view .LVU358
 1210 002e 4990     		str	r0, [sp, #292]
1036:Src/app.c     ****   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
 1211              		.loc 1 1036 3 is_stmt 1 view .LVU359
 1212              	.LVL82:
 1213              	.LBB381:
 1214              	.LBI378:
 594:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/ccHyRziO.s 			page 68


 1215              		.loc 2 594 26 view .LVU360
 1216              	.LBB380:
 1217              		.loc 2 596 5 view .LVU361
 1218              		.loc 2 596 5 is_stmt 0 view .LVU362
 1219              	.LBE380:
 1220              	.LBE381:
1036:Src/app.c     ****   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
 1221              		.loc 1 1036 22 discriminator 1 view .LVU363
 1222 0030 4A93     		str	r3, [sp, #296]
1037:Src/app.c     ****   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1223              		.loc 1 1037 3 is_stmt 1 view .LVU364
 1224 0032 06D0     		beq	.L65
1037:Src/app.c     ****   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1225              		.loc 1 1037 3 is_stmt 0 discriminator 1 view .LVU365
 1226 0034 40F20D41 		movw	r1, #1037
 1227 0038 A94B     		ldr	r3, .L146+8
 1228 003a AA4A     		ldr	r2, .L146+12
 1229              	.LVL83:
 1230              	.L145:
1040:Src/app.c     **** 
 1231              		.loc 1 1040 3 discriminator 1 view .LVU366
 1232 003c AA48     		ldr	r0, .L146+16
 1233 003e FFF7FEFF 		bl	__assert_func
 1234              	.LVL84:
 1235              	.L65:
1038:Src/app.c     ****   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
 1236              		.loc 1 1038 3 is_stmt 1 view .LVU367
1038:Src/app.c     ****   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
 1237              		.loc 1 1038 31 is_stmt 0 view .LVU368
 1238 0042 04F13800 		add	r0, r4, #56
 1239 0046 FFF7FEFF 		bl	LL_Buffer_addr_start
 1240              	.LVL85:
 1241              	.LBB382:
 1242              	.LBB383:
 1243              		.loc 2 596 28 view .LVU369
 1244 004a D4E91023 		ldrd	r2, r3, [r4, #64]
 1245 004e 9B1A     		subs	r3, r3, r2
 1246              	.LBE383:
 1247              	.LBE382:
1040:Src/app.c     **** 
 1248              		.loc 1 1040 3 view .LVU370
 1249 0050 A64A     		ldr	r2, .L146+20
1038:Src/app.c     ****   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
 1250              		.loc 1 1038 19 discriminator 1 view .LVU371
 1251 0052 4B90     		str	r0, [sp, #300]
1039:Src/app.c     ****   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
 1252              		.loc 1 1039 3 is_stmt 1 view .LVU372
 1253              	.LVL86:
 1254              	.LBB385:
 1255              	.LBI382:
 594:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1256              		.loc 2 594 26 view .LVU373
 1257              	.LBB384:
 1258              		.loc 2 596 5 view .LVU374
 1259              		.loc 2 596 5 is_stmt 0 view .LVU375
 1260              	.LBE384:
 1261              	.LBE385:
ARM GAS  /tmp/ccHyRziO.s 			page 69


1040:Src/app.c     **** 
 1262              		.loc 1 1040 3 view .LVU376
 1263 0054 9342     		cmp	r3, r2
1039:Src/app.c     ****   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
 1264              		.loc 1 1039 23 discriminator 1 view .LVU377
 1265 0056 4C93     		str	r3, [sp, #304]
1040:Src/app.c     **** 
 1266              		.loc 1 1040 3 is_stmt 1 view .LVU378
 1267 0058 04D0     		beq	.L66
1040:Src/app.c     **** 
 1268              		.loc 1 1040 3 is_stmt 0 discriminator 1 view .LVU379
 1269 005a 4FF48261 		mov	r1, #1040
 1270 005e A44B     		ldr	r3, .L146+24
 1271 0060 A04A     		ldr	r2, .L146+12
 1272 0062 EBE7     		b	.L145
 1273              	.L66:
1043:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1274              		.loc 1 1043 3 is_stmt 1 view .LVU380
1043:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1275              		.loc 1 1043 9 is_stmt 0 view .LVU381
 1276 0064 4DA8     		add	r0, sp, #308
 1277 0066 FFF7FEFF 		bl	app_postprocess_init
 1278              	.LVL87:
1044:Src/app.c     **** }
 1279              		.loc 1 1044 3 is_stmt 1 view .LVU382
 1280 006a 0546     		mov	r5, r0
 1281 006c 20B1     		cbz	r0, .L67
1044:Src/app.c     **** }
 1282              		.loc 1 1044 3 is_stmt 0 discriminator 1 view .LVU383
 1283 006e 40F21441 		movw	r1, #1044
 1284 0072 A04B     		ldr	r3, .L146+28
 1285 0074 9B4A     		ldr	r2, .L146+12
 1286 0076 E1E7     		b	.L145
 1287              	.L67:
 1288              	.LVL88:
1044:Src/app.c     **** }
 1289              		.loc 1 1044 3 discriminator 1 view .LVU384
 1290              	.LBE373:
 1291              	.LBE372:
1507:Src/app.c     ****   hand_landmark_init(&hl_info);
 1292              		.loc 1 1507 3 is_stmt 1 view .LVU385
1507:Src/app.c     ****   hand_landmark_init(&hl_info);
 1293              		.loc 1 1507 17 is_stmt 0 view .LVU386
 1294 0078 3AAB     		add	r3, sp, #232
 1295 007a 2693     		str	r3, [sp, #152]
1508:Src/app.c     ****   app_rot_init(&hl_info);
 1296              		.loc 1 1508 3 is_stmt 1 view .LVU387
 1297              	.LVL89:
 1298              	.LBB386:
 1299              	.LBI386:
1237:Src/app.c     **** {
 1300              		.loc 1 1237 13 view .LVU388
 1301              	.LBB387:
1239:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
 1302              		.loc 1 1239 3 view .LVU389
1239:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
 1303              		.loc 1 1239 46 is_stmt 0 view .LVU390
ARM GAS  /tmp/ccHyRziO.s 			page 70


 1304 007c FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_hand_landmark
 1305              	.LVL90:
 1306 0080 0446     		mov	r4, r0
 1307              	.LVL91:
1240:Src/app.c     **** 
 1308              		.loc 1 1240 3 is_stmt 1 view .LVU391
1240:Src/app.c     **** 
 1309              		.loc 1 1240 45 is_stmt 0 view .LVU392
 1310 0082 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_hand_landmark
 1311              	.LVL92:
1240:Src/app.c     **** 
 1312              		.loc 1 1240 45 view .LVU393
 1313 0086 0146     		mov	r1, r0
 1314              	.LVL93:
1242:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1315              		.loc 1 1242 3 is_stmt 1 view .LVU394
1242:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1316              		.loc 1 1242 17 is_stmt 0 view .LVU395
 1317 0088 FFF7FEFF 		bl	LL_Buffer_addr_start
 1318              	.LVL94:
 1319              	.LBB388:
 1320              	.LBB389:
 1321              		.loc 2 596 33 view .LVU396
 1322 008c D1E9029A 		ldrd	r9, r10, [r1, #8]
 1323              	.LBE389:
 1324              	.LBE388:
1242:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1325              		.loc 1 1242 17 view .LVU397
 1326 0090 0646     		mov	r6, r0
 1327              	.LVL95:
1243:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[2]);
 1328              		.loc 1 1243 3 is_stmt 1 view .LVU398
 1329              	.LBB393:
 1330              	.LBI388:
 594:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1331              		.loc 2 594 26 view .LVU399
 1332              	.LBB390:
 1333              		.loc 2 596 5 view .LVU400
 1334              		.loc 2 596 5 is_stmt 0 view .LVU401
 1335              	.LBE390:
 1336              	.LBE393:
1244:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
 1337              		.loc 1 1244 3 is_stmt 1 view .LVU402
1244:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
 1338              		.loc 1 1244 30 is_stmt 0 view .LVU403
 1339 0092 04F17000 		add	r0, r4, #112
 1340              	.LVL96:
1244:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
 1341              		.loc 1 1244 30 view .LVU404
 1342 0096 FFF7FEFF 		bl	LL_Buffer_addr_start
 1343              	.LVL97:
 1344              	.LBB394:
 1345              	.LBB395:
 1346              		.loc 2 596 28 view .LVU405
 1347 009a D4E91E23 		ldrd	r2, r3, [r4, #120]
 1348 009e 9B1A     		subs	r3, r3, r2
 1349              	.LBE395:
ARM GAS  /tmp/ccHyRziO.s 			page 71


 1350              	.LBE394:
1246:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
 1351              		.loc 1 1246 3 view .LVU406
 1352 00a0 042B     		cmp	r3, #4
1244:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
 1353              		.loc 1 1244 30 view .LVU407
 1354 00a2 8346     		mov	fp, r0
 1355              	.LVL98:
1245:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 1356              		.loc 1 1245 3 is_stmt 1 view .LVU408
 1357              	.LBB397:
 1358              	.LBI394:
 594:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1359              		.loc 2 594 26 view .LVU409
 1360              	.LBB396:
 1361              		.loc 2 596 5 view .LVU410
 1362              		.loc 2 596 5 is_stmt 0 view .LVU411
 1363              	.LBE396:
 1364              	.LBE397:
1246:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
 1365              		.loc 1 1246 3 is_stmt 1 view .LVU412
 1366 00a4 04D0     		beq	.L68
1246:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
 1367              		.loc 1 1246 3 is_stmt 0 discriminator 1 view .LVU413
 1368 00a6 40F2DE41 		movw	r1, #1246
 1369              	.LVL99:
1246:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
 1370              		.loc 1 1246 3 discriminator 1 view .LVU414
 1371 00aa 934B     		ldr	r3, .L146+32
 1372              	.LVL100:
1246:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
 1373              		.loc 1 1246 3 discriminator 1 view .LVU415
 1374 00ac 934A     		ldr	r2, .L146+36
 1375              	.LVL101:
1246:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
 1376              		.loc 1 1246 3 discriminator 1 view .LVU416
 1377 00ae C5E7     		b	.L145
 1378              	.LVL102:
 1379              	.L68:
1247:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
 1380              		.loc 1 1247 3 is_stmt 1 view .LVU417
1247:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
 1381              		.loc 1 1247 35 is_stmt 0 view .LVU418
 1382 00b0 04F1A800 		add	r0, r4, #168
 1383              	.LVL103:
1247:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
 1384              		.loc 1 1247 35 view .LVU419
 1385 00b4 FFF7FEFF 		bl	LL_Buffer_addr_start
 1386              	.LVL104:
 1387              	.LBB398:
 1388              	.LBB399:
 1389              		.loc 2 596 28 view .LVU420
 1390 00b8 D4E92C23 		ldrd	r2, r3, [r4, #176]
 1391 00bc 9B1A     		subs	r3, r3, r2
 1392              	.LBE399:
 1393              	.LBE398:
1249:Src/app.c     **** }
ARM GAS  /tmp/ccHyRziO.s 			page 72


 1394              		.loc 1 1249 3 view .LVU421
 1395 00be FC2B     		cmp	r3, #252
1247:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
 1396              		.loc 1 1247 35 view .LVU422
 1397 00c0 8046     		mov	r8, r0
 1398              	.LVL105:
1248:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 63);
 1399              		.loc 1 1248 3 is_stmt 1 view .LVU423
 1400              	.LBB401:
 1401              	.LBI398:
 594:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1402              		.loc 2 594 26 view .LVU424
 1403              	.LBB400:
 1404              		.loc 2 596 5 view .LVU425
 1405              		.loc 2 596 5 is_stmt 0 view .LVU426
 1406              	.LBE400:
 1407              	.LBE401:
1249:Src/app.c     **** }
 1408              		.loc 1 1249 3 is_stmt 1 view .LVU427
 1409 00c2 04D0     		beq	.L69
1249:Src/app.c     **** }
 1410              		.loc 1 1249 3 is_stmt 0 discriminator 1 view .LVU428
 1411 00c4 40F2E141 		movw	r1, #1249
 1412              	.LVL106:
1249:Src/app.c     **** }
 1413              		.loc 1 1249 3 discriminator 1 view .LVU429
 1414 00c8 8D4B     		ldr	r3, .L146+40
 1415              	.LVL107:
1249:Src/app.c     **** }
 1416              		.loc 1 1249 3 discriminator 1 view .LVU430
 1417 00ca 8C4A     		ldr	r2, .L146+36
 1418              	.LVL108:
1249:Src/app.c     **** }
 1419              		.loc 1 1249 3 discriminator 1 view .LVU431
 1420 00cc B6E7     		b	.L145
 1421              	.LVL109:
 1422              	.L69:
1249:Src/app.c     **** }
 1423              		.loc 1 1249 3 discriminator 1 view .LVU432
 1424              	.LBE387:
 1425              	.LBE386:
1509:Src/app.c     ****   yolo_detector_init(&yolo_info);
 1426              		.loc 1 1509 3 is_stmt 1 view .LVU433
 1427              	.LBB406:
 1428              	.LBI406:
1351:Src/app.c     **** {
 1429              		.loc 1 1351 13 view .LVU434
 1430              	.LBB407:
1353:Src/app.c     ****   int ret;
 1431              		.loc 1 1353 3 view .LVU435
1353:Src/app.c     ****   int ret;
 1432              		.loc 1 1353 25 is_stmt 0 view .LVU436
 1433 00ce 2946     		mov	r1, r5
 1434 00d0 2422     		movs	r2, #36
 1435 00d2 81A8     		add	r0, sp, #516
 1436              	.LVL110:
1353:Src/app.c     ****   int ret;
ARM GAS  /tmp/ccHyRziO.s 			page 73


 1437              		.loc 1 1353 25 view .LVU437
 1438 00d4 FFF7FEFF 		bl	memset
 1439              	.LVL111:
1354:Src/app.c     **** 
 1440              		.loc 1 1354 3 is_stmt 1 view .LVU438
1356:Src/app.c     ****   nema_init();
 1441              		.loc 1 1356 3 view .LVU439
 1442 00d8 8A48     		ldr	r0, .L146+44
 1443 00da FFF7FEFF 		bl	puts
 1444              	.LVL112:
1357:Src/app.c     ****   assert(!nema_get_error());
 1445              		.loc 1 1357 3 view .LVU440
 1446 00de FFF7FEFF 		bl	nema_init
 1447              	.LVL113:
1358:Src/app.c     ****   nema_ext_hold_enable(2);
 1448              		.loc 1 1358 3 view .LVU441
 1449 00e2 FFF7FEFF 		bl	nema_get_error
 1450              	.LVL114:
1358:Src/app.c     ****   nema_ext_hold_enable(2);
 1451              		.loc 1 1358 3 is_stmt 0 discriminator 1 view .LVU442
 1452 00e6 0546     		mov	r5, r0
 1453 00e8 20B1     		cbz	r0, .L70
 1454 00ea 40F24E51 		movw	r1, #1358
 1455 00ee 864B     		ldr	r3, .L146+48
 1456 00f0 864A     		ldr	r2, .L146+52
 1457 00f2 A3E7     		b	.L145
 1458              	.L70:
1359:Src/app.c     ****   nema_ext_hold_irq_enable(2);
 1459              		.loc 1 1359 3 is_stmt 1 view .LVU443
 1460 00f4 0220     		movs	r0, #2
 1461 00f6 FFF7FEFF 		bl	nema_ext_hold_enable
 1462              	.LVL115:
1360:Src/app.c     ****   nema_ext_hold_enable(3);
 1463              		.loc 1 1360 3 view .LVU444
 1464 00fa 0220     		movs	r0, #2
 1465 00fc FFF7FEFF 		bl	nema_ext_hold_irq_enable
 1466              	.LVL116:
1361:Src/app.c     ****   nema_ext_hold_irq_enable(3);
 1467              		.loc 1 1361 3 view .LVU445
 1468 0100 0320     		movs	r0, #3
 1469 0102 FFF7FEFF 		bl	nema_ext_hold_enable
 1470              	.LVL117:
1362:Src/app.c     ****   printf("init nema DONE %s\n", nema_get_sw_device_name());
 1471              		.loc 1 1362 3 view .LVU446
 1472 0106 0320     		movs	r0, #3
 1473 0108 FFF7FEFF 		bl	nema_ext_hold_irq_enable
 1474              	.LVL118:
1363:Src/app.c     **** 
 1475              		.loc 1 1363 3 view .LVU447
 1476 010c FFF7FEFF 		bl	nema_get_sw_device_name
 1477              	.LVL119:
 1478 0110 0146     		mov	r1, r0
1363:Src/app.c     **** 
 1479              		.loc 1 1363 3 is_stmt 0 discriminator 1 view .LVU448
 1480 0112 7F48     		ldr	r0, .L146+56
 1481 0114 FFF7FEFF 		bl	printf
 1482              	.LVL120:
ARM GAS  /tmp/ccHyRziO.s 			page 74


1365:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
 1483              		.loc 1 1365 3 is_stmt 1 view .LVU449
1366:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
 1484              		.loc 1 1366 26 is_stmt 0 view .LVU450
 1485 0118 4023     		movs	r3, #64
1365:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
 1486              		.loc 1 1365 20 view .LVU451
 1487 011a 7E4C     		ldr	r4, .L146+60
1366:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
 1488              		.loc 1 1366 26 view .LVU452
 1489 011c 7E49     		ldr	r1, .L146+64
1368:Src/app.c     ****   assert(ret == HAL_OK);
 1490              		.loc 1 1368 9 view .LVU453
 1491 011e 2046     		mov	r0, r4
1366:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
 1492              		.loc 1 1366 26 view .LVU454
 1493 0120 C4E90013 		strd	r1, r3, [r4]
1367:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
 1494              		.loc 1 1367 3 is_stmt 1 view .LVU455
1367:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
 1495              		.loc 1 1367 35 is_stmt 0 view .LVU456
 1496 0124 2573     		strb	r5, [r4, #12]
1368:Src/app.c     ****   assert(ret == HAL_OK);
 1497              		.loc 1 1368 3 is_stmt 1 view .LVU457
1368:Src/app.c     ****   assert(ret == HAL_OK);
 1498              		.loc 1 1368 9 is_stmt 0 view .LVU458
 1499 0126 FFF7FEFF 		bl	HAL_GFXMMU_Init
 1500              	.LVL121:
1369:Src/app.c     **** 
 1501              		.loc 1 1369 3 is_stmt 1 view .LVU459
 1502 012a 20B1     		cbz	r0, .L71
1369:Src/app.c     **** 
 1503              		.loc 1 1369 3 is_stmt 0 discriminator 1 view .LVU460
 1504 012c 40F25951 		movw	r1, #1369
 1505 0130 7A4B     		ldr	r3, .L146+68
 1506 0132 764A     		ldr	r2, .L146+52
 1507 0134 82E7     		b	.L145
 1508              	.L71:
1371:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
 1509              		.loc 1 1371 3 is_stmt 1 view .LVU461
1371:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
 1510              		.loc 1 1371 29 is_stmt 0 view .LVU462
 1511 0136 0123     		movs	r3, #1
 1512 0138 8DF80432 		strb	r3, [sp, #516]
1372:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
 1513              		.loc 1 1372 3 is_stmt 1 view .LVU463
1373:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
 1514              		.loc 1 1373 29 is_stmt 0 view .LVU464
 1515 013c FF23     		movs	r3, #255
1372:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
 1516              		.loc 1 1372 29 view .LVU465
 1517 013e 8290     		str	r0, [sp, #520]
1373:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
 1518              		.loc 1 1373 3 is_stmt 1 view .LVU466
1374:Src/app.c     ****   assert(ret == HAL_OK);
 1519              		.loc 1 1374 9 is_stmt 0 view .LVU467
 1520 0140 81A9     		add	r1, sp, #516
ARM GAS  /tmp/ccHyRziO.s 			page 75


 1521 0142 2046     		mov	r0, r4
 1522              	.LVL122:
1373:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
 1523              		.loc 1 1373 29 view .LVU468
 1524 0144 8993     		str	r3, [sp, #548]
1374:Src/app.c     ****   assert(ret == HAL_OK);
 1525              		.loc 1 1374 3 is_stmt 1 view .LVU469
1374:Src/app.c     ****   assert(ret == HAL_OK);
 1526              		.loc 1 1374 9 is_stmt 0 view .LVU470
 1527 0146 FFF7FEFF 		bl	HAL_GFXMMU_ConfigPacking
 1528              	.LVL123:
1375:Src/app.c     **** 
 1529              		.loc 1 1375 3 is_stmt 1 view .LVU471
 1530 014a 0746     		mov	r7, r0
 1531 014c 20B1     		cbz	r0, .L72
1375:Src/app.c     **** 
 1532              		.loc 1 1375 3 is_stmt 0 discriminator 1 view .LVU472
 1533 014e 40F25F51 		movw	r1, #1375
 1534 0152 724B     		ldr	r3, .L146+68
 1535 0154 6D4A     		ldr	r2, .L146+52
 1536 0156 71E7     		b	.L145
 1537              	.L72:
1377:Src/app.c     ****   nema_cl_bind_circular(&cl);
 1538              		.loc 1 1377 3 is_stmt 1 view .LVU473
1377:Src/app.c     ****   nema_cl_bind_circular(&cl);
 1539              		.loc 1 1377 8 is_stmt 0 view .LVU474
 1540 0158 714D     		ldr	r5, .L146+72
 1541 015a 4FF40051 		mov	r1, #8192
 1542 015e 06A8     		add	r0, sp, #24
 1543              	.LVL124:
1377:Src/app.c     ****   nema_cl_bind_circular(&cl);
 1544              		.loc 1 1377 8 view .LVU475
 1545 0160 06AC     		add	r4, sp, #24
 1546 0162 FFF7FEFF 		bl	nema_cl_create_sized
 1547              	.LVL125:
 1548 0166 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1549 0168 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1550 016a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1551 016c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1552 016e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1553 0170 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1554 0172 94E80700 		ldm	r4, {r0, r1, r2}
 1555 0176 85E80700 		stm	r5, {r0, r1, r2}
1378:Src/app.c     **** }
 1556              		.loc 1 1378 3 is_stmt 1 view .LVU476
 1557 017a A5F13000 		sub	r0, r5, #48
 1558 017e FFF7FEFF 		bl	nema_cl_bind_circular
 1559              	.LVL126:
1378:Src/app.c     **** }
 1560              		.loc 1 1378 3 is_stmt 0 view .LVU477
 1561              	.LBE407:
 1562              	.LBE406:
1510:Src/app.c     ****   /*** Application Main Loop ***************************************************************/
 1563              		.loc 1 1510 3 is_stmt 1 view .LVU478
 1564              	.LBB408:
 1565              	.LBI408:
1053:Src/app.c     **** {
ARM GAS  /tmp/ccHyRziO.s 			page 76


 1566              		.loc 1 1053 13 view .LVU479
 1567              	.LBB409:
1057:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1568              		.loc 1 1057 3 view .LVU480
1057:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1569              		.loc 1 1057 46 is_stmt 0 view .LVU481
 1570 0182 FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_yolo_detector
 1571              	.LVL127:
 1572 0186 0446     		mov	r4, r0
 1573              	.LVL128:
1058:Src/app.c     **** 
 1574              		.loc 1 1058 3 is_stmt 1 view .LVU482
1058:Src/app.c     **** 
 1575              		.loc 1 1058 45 is_stmt 0 view .LVU483
 1576 0188 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_yolo_detector
 1577              	.LVL129:
1061:Src/app.c     ****   /* YOLOv8 has a single, large raw output tensor. */
 1578              		.loc 1 1061 3 is_stmt 1 view .LVU484
 1579              	.LBB410:
 1580              	.LBI410:
 594:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1581              		.loc 2 594 26 view .LVU485
 1582              	.LBB411:
 1583              		.loc 2 596 5 view .LVU486
 1584              		.loc 2 596 28 is_stmt 0 view .LVU487
 1585 018c D0E90223 		ldrd	r2, r3, [r0, #8]
 1586              	.LBE411:
 1587              	.LBE410:
1063:Src/app.c     ****   info->raw_output_len = LL_Buffer_len(&nn_out_info[0]);
 1588              		.loc 1 1063 29 view .LVU488
 1589 0190 2046     		mov	r0, r4
 1590              	.LVL130:
 1591              	.LBB413:
 1592              	.LBB412:
 1593              		.loc 2 596 28 view .LVU489
 1594 0192 9B1A     		subs	r3, r3, r2
 1595              	.LBE412:
 1596              	.LBE413:
1061:Src/app.c     ****   /* YOLOv8 has a single, large raw output tensor. */
 1597              		.loc 1 1061 19 discriminator 1 view .LVU490
 1598 0194 8193     		str	r3, [sp, #516]
1063:Src/app.c     ****   info->raw_output_len = LL_Buffer_len(&nn_out_info[0]);
 1599              		.loc 1 1063 3 is_stmt 1 view .LVU491
1063:Src/app.c     ****   info->raw_output_len = LL_Buffer_len(&nn_out_info[0]);
 1600              		.loc 1 1063 29 is_stmt 0 view .LVU492
 1601 0196 FFF7FEFF 		bl	LL_Buffer_addr_start
 1602              	.LVL131:
 1603              	.LBB414:
 1604              	.LBB415:
 1605              		.loc 2 596 28 view .LVU493
 1606 019a D4E90223 		ldrd	r2, r3, [r4, #8]
 1607 019e 9B1A     		subs	r3, r3, r2
 1608              	.LBE415:
 1609              	.LBE414:
1064:Src/app.c     **** 
 1610              		.loc 1 1064 24 discriminator 1 view .LVU494
 1611 01a0 8393     		str	r3, [sp, #524]
ARM GAS  /tmp/ccHyRziO.s 			page 77


1069:Src/app.c     ****   info->pp_params.conf_threshold = 0.5f; // Set your desired confidence threshold
 1612              		.loc 1 1069 34 view .LVU495
 1613 01a2 0322     		movs	r2, #3
 1614 01a4 40F63403 		movw	r3, #2100
 1615 01a8 CDE98423 		strd	r2, r3, [sp, #528]
1071:Src/app.c     ****   info->pp_params.max_boxes_limit = YOLO_MAX_NB; // Use our new constant
 1616              		.loc 1 1071 33 view .LVU496
 1617 01ac 5D4B     		ldr	r3, .L146+76
1070:Src/app.c     ****   info->pp_params.iou_threshold = 0.45f; // Set your desired NMS overlap threshold
 1618              		.loc 1 1070 34 view .LVU497
 1619 01ae F6EE00AA 		vmov.f32	s21, #5.0e-1
1071:Src/app.c     ****   info->pp_params.max_boxes_limit = YOLO_MAX_NB; // Use our new constant
 1620              		.loc 1 1071 33 view .LVU498
 1621 01b2 8893     		str	r3, [sp, #544]	@ float
1072:Src/app.c     **** 
 1622              		.loc 1 1072 35 view .LVU499
 1623 01b4 1423     		movs	r3, #20
 1624 01b6 8693     		str	r3, [sp, #536]
1079:Src/app.c     ****   info->pp_output.nb_detect = 0;
 1625              		.loc 1 1079 28 view .LVU500
 1626 01b8 8EAB     		add	r3, sp, #568
1070:Src/app.c     ****   info->pp_params.iou_threshold = 0.45f; // Set your desired NMS overlap threshold
 1627              		.loc 1 1070 34 view .LVU501
 1628 01ba CDED87AA 		vstr.32	s21, [sp, #540]
1080:Src/app.c     **** }
 1629              		.loc 1 1080 29 view .LVU502
 1630 01be CDE98C37 		strd	r3, r7, [sp, #560]
1063:Src/app.c     ****   info->raw_output_len = LL_Buffer_len(&nn_out_info[0]);
 1631              		.loc 1 1063 27 discriminator 1 view .LVU503
 1632 01c2 8290     		str	r0, [sp, #520]
1064:Src/app.c     **** 
 1633              		.loc 1 1064 3 is_stmt 1 view .LVU504
 1634              	.LVL132:
 1635              	.LBB417:
 1636              	.LBI414:
 594:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1637              		.loc 2 594 26 view .LVU505
 1638              	.LBB416:
 1639              		.loc 2 596 5 view .LVU506
 1640              		.loc 2 596 5 is_stmt 0 view .LVU507
 1641              	.LBE416:
 1642              	.LBE417:
1068:Src/app.c     ****   info->pp_params.nb_total_boxes = 2100; // Standard for many YOLOv8 models
 1643              		.loc 1 1068 3 is_stmt 1 view .LVU508
1070:Src/app.c     ****   info->pp_params.iou_threshold = 0.45f; // Set your desired NMS overlap threshold
 1644              		.loc 1 1070 3 view .LVU509
1071:Src/app.c     ****   info->pp_params.max_boxes_limit = YOLO_MAX_NB; // Use our new constant
 1645              		.loc 1 1071 3 view .LVU510
1072:Src/app.c     **** 
 1646              		.loc 1 1072 3 view .LVU511
1079:Src/app.c     ****   info->pp_output.nb_detect = 0;
 1647              		.loc 1 1079 3 view .LVU512
1079:Src/app.c     ****   info->pp_output.nb_detect = 0;
 1648              		.loc 1 1079 3 is_stmt 0 view .LVU513
 1649              	.LBE409:
 1650              	.LBE408:
1512:Src/app.c     **** 
ARM GAS  /tmp/ccHyRziO.s 			page 78


 1651              		.loc 1 1512 3 is_stmt 1 view .LVU514
1512:Src/app.c     **** 
 1652              		.loc 1 1512 18 is_stmt 0 view .LVU515
 1653 01c4 FFF7FEFF 		bl	HAL_GetTick
 1654              	.LVL133:
 1655              	.LBB418:
 1656              	.LBB419:
 602:Src/app.c     ****   if (ret == pdFALSE)
 1657              		.loc 1 602 9 view .LVU516
 1658 01c8 574C     		ldr	r4, .L146+80
 1659              	.LBE419:
 1660              	.LBE418:
1512:Src/app.c     **** 
 1661              		.loc 1 1512 18 view .LVU517
 1662 01ca 0546     		mov	r5, r0
 1663              	.LVL134:
1515:Src/app.c     ****   assert(nn_pipe_dst);
 1664              		.loc 1 1515 3 is_stmt 1 view .LVU518
 1665              	.LBB422:
 1666              	.LBI418:
 597:Src/app.c     **** {
 1667              		.loc 1 597 17 view .LVU519
 1668              	.LBB420:
 599:Src/app.c     ****   int ret;
 1669              		.loc 1 599 3 view .LVU520
 600:Src/app.c     **** 
 1670              		.loc 1 600 3 view .LVU521
 602:Src/app.c     ****   if (ret == pdFALSE)
 1671              		.loc 1 602 3 view .LVU522
 602:Src/app.c     ****   if (ret == pdFALSE)
 1672              		.loc 1 602 9 is_stmt 0 discriminator 4 view .LVU523
 1673 01cc 3946     		mov	r1, r7
 1674 01ce 2068     		ldr	r0, [r4]
 1675              	.LVL135:
 602:Src/app.c     ****   if (ret == pdFALSE)
 1676              		.loc 1 602 9 discriminator 4 view .LVU524
 1677 01d0 FFF7FEFF 		bl	xQueueSemaphoreTake
 1678              	.LVL136:
 603:Src/app.c     ****     return NULL;
 1679              		.loc 1 603 3 is_stmt 1 view .LVU525
 603:Src/app.c     ****     return NULL;
 1680              		.loc 1 603 6 is_stmt 0 view .LVU526
 1681 01d4 20B9     		cbnz	r0, .L73
 1682              	.LVL137:
 1683              	.L74:
 603:Src/app.c     ****     return NULL;
 1684              		.loc 1 603 6 view .LVU527
 1685              	.LBE420:
 1686              	.LBE422:
1516:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1687              		.loc 1 1516 3 discriminator 1 view .LVU528
 1688 01d6 40F2EC51 		movw	r1, #1516
 1689 01da 544B     		ldr	r3, .L146+84
 1690 01dc 544A     		ldr	r2, .L146+88
 1691 01de 2DE7     		b	.L145
 1692              	.LVL138:
 1693              	.L73:
ARM GAS  /tmp/ccHyRziO.s 			page 79


 1694              	.LBB423:
 1695              	.LBB421:
 606:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1696              		.loc 1 606 3 is_stmt 1 view .LVU529
 606:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1697              		.loc 1 606 23 is_stmt 0 view .LVU530
 1698 01e0 D4F8B430 		ldr	r3, [r4, #180]
 606:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1699              		.loc 1 606 7 view .LVU531
 1700 01e4 04EB8302 		add	r2, r4, r3, lsl #2
 1701 01e8 D2F8AC00 		ldr	r0, [r2, #172]
 1702              	.LVL139:
 607:Src/app.c     **** 
 1703              		.loc 1 607 3 is_stmt 1 view .LVU532
 607:Src/app.c     **** 
 1704              		.loc 1 607 37 is_stmt 0 view .LVU533
 1705 01ec D4F8A820 		ldr	r2, [r4, #168]
 607:Src/app.c     **** 
 1706              		.loc 1 607 32 view .LVU534
 1707 01f0 0133     		adds	r3, r3, #1
 607:Src/app.c     **** 
 1708              		.loc 1 607 37 view .LVU535
 1709 01f2 93FBF2F1 		sdiv	r1, r3, r2
 1710 01f6 02FB1133 		mls	r3, r2, r1, r3
 607:Src/app.c     **** 
 1711              		.loc 1 607 16 view .LVU536
 1712 01fa C4F8B430 		str	r3, [r4, #180]
 609:Src/app.c     **** }
 1713              		.loc 1 609 3 is_stmt 1 view .LVU537
 1714              	.LVL140:
 609:Src/app.c     **** }
 1715              		.loc 1 609 3 is_stmt 0 view .LVU538
 1716              	.LBE421:
 1717              	.LBE423:
1516:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1718              		.loc 1 1516 3 is_stmt 1 view .LVU539
 1719 01fe 0028     		cmp	r0, #0
 1720 0200 E9D0     		beq	.L74
1474:Src/app.c     **** 
 1721              		.loc 1 1474 9 is_stmt 0 view .LVU540
 1722 0202 DFED4C9A 		vldr.32	s19, .L146+92
 1723              	.LBB424:
 1724              	.LBB404:
 1725              	.LBB402:
 1726              	.LBB391:
 1727              		.loc 2 596 28 view .LVU541
 1728 0206 AAEB0903 		sub	r3, r10, r9
 1729              	.LBE391:
 1730              	.LBE402:
 1731              	.LBE404:
 1732              	.LBE424:
1517:Src/app.c     ****   while (1)
 1733              		.loc 1 1517 3 view .LVU542
 1734 020a 0021     		movs	r1, #0
 1735              	.LBB425:
 1736              	.LBB405:
 1737              	.LBB403:
ARM GAS  /tmp/ccHyRziO.s 			page 80


 1738              	.LBB392:
 1739              		.loc 2 596 28 view .LVU543
 1740 020c 0493     		str	r3, [sp, #16]
 1741              	.LBE392:
 1742              	.LBE403:
 1743              	.LBE405:
 1744              	.LBE425:
1517:Src/app.c     ****   while (1)
 1745              		.loc 1 1517 3 is_stmt 1 view .LVU544
1492:Src/app.c     ****   roi_t roi_next;
 1746              		.loc 1 1492 7 is_stmt 0 view .LVU545
 1747 020e 0024     		movs	r4, #0
1517:Src/app.c     ****   while (1)
 1748              		.loc 1 1517 3 view .LVU546
 1749 0210 FFF7FEFF 		bl	CAM_NNPipe_Start
 1750              	.LVL141:
1473:Src/app.c     ****   float ld_filtered_ms = 0;
 1751              		.loc 1 1473 9 view .LVU547
 1752 0214 B0EE69AA 		vmov.f32	s20, s19
1472:Src/app.c     ****   float pd_filtered_ms = 0;
 1753              		.loc 1 1472 9 view .LVU548
 1754 0218 B0EE699A 		vmov.f32	s18, s19
 1755              	.LBB426:
 1756              	.LBB427:
 1757              	.LBB428:
 1758              	.LBB429:
 1759              	.LBB430:
 1760              	.LBB431:
 1761              	.LBB432:
 379:Src/app.c     **** 
 1762              		.loc 1 379 25 discriminator 1 view .LVU549
 1763 021c 9FED2E8B 		vldr.64	d8, .L146
 1764              	.LBE432:
 1765              	.LBE431:
 1766              	.LBE430:
 1767              	.LBE429:
 1768              	.LBE428:
 1769              	.LBE427:
 1770              	.LBB475:
 1771              	.LBB476:
 633:Src/app.c     ****   assert(ret == pdTRUE);
 1772              		.loc 1 633 9 view .LVU550
 1773 0220 414F     		ldr	r7, .L146+80
 1774              	.LVL142:
 1775              	.L114:
 633:Src/app.c     ****   assert(ret == pdTRUE);
 1776              		.loc 1 633 9 view .LVU551
 1777              	.LBE476:
 1778              	.LBE475:
 1779              	.LBE426:
1518:Src/app.c     ****   {
 1780              		.loc 1 1518 3 is_stmt 1 view .LVU552
 1781              	.LBB564:
1520:Src/app.c     ****     int idx_for_resize;
 1782              		.loc 1 1520 5 view .LVU553
1521:Src/app.c     ****     /* Measure and filter the time between loop iterations. */
 1783              		.loc 1 1521 5 view .LVU554
ARM GAS  /tmp/ccHyRziO.s 			page 81


1523:Src/app.c     ****     nn_period[1] = HAL_GetTick();
 1784              		.loc 1 1523 5 view .LVU555
1524:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1785              		.loc 1 1524 5 view .LVU556
1524:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1786              		.loc 1 1524 20 is_stmt 0 view .LVU557
 1787 0222 FFF7FEFF 		bl	HAL_GetTick
 1788              	.LVL143:
1525:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1789              		.loc 1 1525 18 view .LVU558
 1790 0226 431B     		subs	r3, r0, r5
 1791 0228 07EE903A 		vmov	s15, r3	@ int
1526:Src/app.c     ****     
 1792              		.loc 1 1526 75 view .LVU559
 1793 022c B2EE0E7A 		vmov.f32	s14, #1.5e+1
 1794 0230 F8EE677A 		vcvt.f32.u32	s15, s15
 1795 0234 E9EE077A 		vfma.f32	s15, s18, s14
1526:Src/app.c     ****     
 1796              		.loc 1 1526 27 view .LVU560
 1797 0238 9FED3F9A 		vldr.32	s18, .L146+96
 1798              	.LVL144:
1524:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1799              		.loc 1 1524 20 view .LVU561
 1800 023c 0290     		str	r0, [sp, #8]
 1801              	.LVL145:
1525:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1802              		.loc 1 1525 5 is_stmt 1 view .LVU562
1526:Src/app.c     ****     
 1803              		.loc 1 1526 5 view .LVU563
 1804              	.LBB479:
 1805              	.LBB477:
 633:Src/app.c     ****   assert(ret == pdTRUE);
 1806              		.loc 1 633 9 is_stmt 0 view .LVU564
 1807 023e 4FF0FF31 		mov	r1, #-1
 1808 0242 786D     		ldr	r0, [r7, #84]
 1809              	.LVL146:
 633:Src/app.c     ****   assert(ret == pdTRUE);
 1810              		.loc 1 633 9 view .LVU565
 1811              	.LBE477:
 1812              	.LBE479:
1526:Src/app.c     ****     
 1813              		.loc 1 1526 27 view .LVU566
 1814 0244 27EE899A 		vmul.f32	s18, s15, s18
 1815              	.LVL147:
1529:Src/app.c     ****     assert(capture_buffer);
 1816              		.loc 1 1529 5 is_stmt 1 view .LVU567
 1817              	.LBB480:
 1818              	.LBI475:
 628:Src/app.c     **** {
 1819              		.loc 1 628 17 view .LVU568
 1820              	.LBB478:
 630:Src/app.c     ****   int ret;
 1821              		.loc 1 630 3 view .LVU569
 631:Src/app.c     **** 
 1822              		.loc 1 631 3 view .LVU570
 633:Src/app.c     ****   assert(ret == pdTRUE);
 1823              		.loc 1 633 3 view .LVU571
ARM GAS  /tmp/ccHyRziO.s 			page 82


 633:Src/app.c     ****   assert(ret == pdTRUE);
 1824              		.loc 1 633 9 is_stmt 0 view .LVU572
 1825 0248 FFF7FEFF 		bl	xQueueSemaphoreTake
 1826              	.LVL148:
 634:Src/app.c     **** 
 1827              		.loc 1 634 3 is_stmt 1 view .LVU573
 1828 024c 0128     		cmp	r0, #1
 1829 024e 04D0     		beq	.L75
 634:Src/app.c     **** 
 1830              		.loc 1 634 3 is_stmt 0 discriminator 1 view .LVU574
 1831 0250 40F27A21 		movw	r1, #634
 1832 0254 394B     		ldr	r3, .L146+100
 1833 0256 3A4A     		ldr	r2, .L146+104
 1834 0258 F0E6     		b	.L145
 1835              	.L75:
 636:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1836              		.loc 1 636 3 is_stmt 1 view .LVU575
 636:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1837              		.loc 1 636 23 is_stmt 0 view .LVU576
 1838 025a D7F8B830 		ldr	r3, [r7, #184]
 636:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1839              		.loc 1 636 7 view .LVU577
 1840 025e 07EB8302 		add	r2, r7, r3, lsl #2
 1841 0262 D2F8ACA0 		ldr	r10, [r2, #172]
 1842              	.LVL149:
 637:Src/app.c     **** 
 1843              		.loc 1 637 3 is_stmt 1 view .LVU578
 637:Src/app.c     **** 
 1844              		.loc 1 637 39 is_stmt 0 view .LVU579
 1845 0266 D7F8A820 		ldr	r2, [r7, #168]
 637:Src/app.c     **** 
 1846              		.loc 1 637 34 view .LVU580
 1847 026a 0133     		adds	r3, r3, #1
 637:Src/app.c     **** 
 1848              		.loc 1 637 39 view .LVU581
 1849 026c 93FBF2F1 		sdiv	r1, r3, r2
 1850 0270 02FB1133 		mls	r3, r2, r1, r3
 637:Src/app.c     **** 
 1851              		.loc 1 637 17 view .LVU582
 1852 0274 C7F8B830 		str	r3, [r7, #184]
 639:Src/app.c     **** }
 1853              		.loc 1 639 3 is_stmt 1 view .LVU583
 1854              	.LVL150:
 639:Src/app.c     **** }
 1855              		.loc 1 639 3 is_stmt 0 view .LVU584
 1856              	.LBE478:
 1857              	.LBE480:
1530:Src/app.c     ****     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
 1858              		.loc 1 1530 5 is_stmt 1 view .LVU585
 1859 0278 BAF1000F 		cmp	r10, #0
 1860 027c 04D1     		bne	.L76
1530:Src/app.c     ****     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
 1861              		.loc 1 1530 5 is_stmt 0 discriminator 1 view .LVU586
 1862 027e 40F2FA51 		movw	r1, #1530
 1863 0282 304B     		ldr	r3, .L146+108
 1864 0284 2A4A     		ldr	r2, .L146+88
 1865 0286 D9E6     		b	.L145
ARM GAS  /tmp/ccHyRziO.s 			page 83


 1866              	.L76:
1531:Src/app.c     **** 
 1867              		.loc 1 1531 5 is_stmt 1 view .LVU587
1531:Src/app.c     **** 
 1868              		.loc 1 1531 48 is_stmt 0 view .LVU588
 1869 0288 2F4B     		ldr	r3, .L146+112
 1870 028a D3F80090 		ldr	r9, [r3]
 1871              	.LVL151:
1535:Src/app.c     ****       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
 1872              		.loc 1 1535 5 is_stmt 1 view .LVU589
1535:Src/app.c     ****       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
 1873              		.loc 1 1535 8 is_stmt 0 view .LVU590
 1874 028e 002C     		cmp	r4, #0
 1875 0290 40F03B81 		bne	.L77
1536:Src/app.c     ****       box_next.prob = pd_info.pd_out.pOutData[0].prob;
 1876              		.loc 1 1536 7 is_stmt 1 view .LVU591
 1877              	.LVL152:
 1878              	.LBB481:
 1879              	.LBI427:
1195:Src/app.c     **** {
 1880              		.loc 1 1195 12 view .LVU592
 1881              	.LBB473:
1197:Src/app.c     ****   int hand_nb;
 1882              		.loc 1 1197 3 view .LVU593
1198:Src/app.c     ****   int ret;
 1883              		.loc 1 1198 3 view .LVU594
1199:Src/app.c     ****   int i;
 1884              		.loc 1 1199 3 view .LVU595
1200:Src/app.c     **** 
 1885              		.loc 1 1200 3 view .LVU596
1202:Src/app.c     ****   /* Set the input buffer for the NPU. */
 1886              		.loc 1 1202 3 view .LVU597
1202:Src/app.c     ****   /* Set the input buffer for the NPU. */
 1887              		.loc 1 1202 14 is_stmt 0 view .LVU598
 1888 0294 FFF7FEFF 		bl	HAL_GetTick
 1889              	.LVL153:
1205:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1890              		.loc 1 1205 9 view .LVU599
 1891 0298 5146     		mov	r1, r10
1202:Src/app.c     ****   /* Set the input buffer for the NPU. */
 1892              		.loc 1 1202 14 view .LVU600
 1893 029a 0546     		mov	r5, r0
 1894              	.LVL154:
1205:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1895              		.loc 1 1205 3 is_stmt 1 view .LVU601
1205:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1896              		.loc 1 1205 9 is_stmt 0 view .LVU602
 1897 029c 489A     		ldr	r2, [sp, #288]
 1898 029e 2046     		mov	r0, r4
 1899              	.LVL155:
1205:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1900              		.loc 1 1205 9 view .LVU603
 1901 02a0 FFF7FEFF 		bl	LL_ATON_Set_User_Input_Buffer_palm_detector
 1902              	.LVL156:
1206:Src/app.c     **** 
 1903              		.loc 1 1206 3 is_stmt 1 view .LVU604
 1904 02a4 20B1     		cbz	r0, .L78
ARM GAS  /tmp/ccHyRziO.s 			page 84


1206:Src/app.c     **** 
 1905              		.loc 1 1206 3 is_stmt 0 discriminator 1 view .LVU605
 1906 02a6 40F2B641 		movw	r1, #1206
 1907 02aa 284B     		ldr	r3, .L146+116
 1908 02ac 284A     		ldr	r2, .L146+120
 1909 02ae C5E6     		b	.L145
 1910              	.L78:
1209:Src/app.c     **** 
 1911              		.loc 1 1209 3 is_stmt 1 view .LVU606
 1912 02b0 2848     		ldr	r0, .L146+124
 1913              	.LVL157:
1209:Src/app.c     **** 
 1914              		.loc 1 1209 3 is_stmt 0 view .LVU607
 1915 02b2 FFF7FEFF 		bl	LL_ATON_RT_Main
 1916              	.LVL158:
1212:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1917              		.loc 1 1212 3 is_stmt 1 view .LVU608
1212:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1918              		.loc 1 1212 40 is_stmt 0 view .LVU609
 1919 02b6 499B     		ldr	r3, [sp, #292]
1212:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1920              		.loc 1 1212 9 view .LVU610
 1921 02b8 0221     		movs	r1, #2
1212:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1922              		.loc 1 1212 40 view .LVU611
 1923 02ba 5793     		str	r3, [sp, #348]
 1924 02bc 4B9B     		ldr	r3, [sp, #300]
1212:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1925              		.loc 1 1212 9 view .LVU612
 1926 02be 55AA     		add	r2, sp, #340
1212:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1927              		.loc 1 1212 40 view .LVU613
 1928 02c0 5893     		str	r3, [sp, #352]
1212:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 1929              		.loc 1 1212 9 view .LVU614
 1930 02c2 57A8     		add	r0, sp, #348
 1931 02c4 4DAB     		add	r3, sp, #308
 1932 02c6 FFF7FEFF 		bl	app_postprocess_run
 1933              	.LVL159:
1213:Src/app.c     ****   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
 1934              		.loc 1 1213 3 is_stmt 1 view .LVU615
 1935 02ca 0028     		cmp	r0, #0
 1936 02cc 46D0     		beq	.L79
1213:Src/app.c     ****   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
 1937              		.loc 1 1213 3 is_stmt 0 discriminator 1 view .LVU616
 1938 02ce 40F2BD41 		movw	r1, #1213
 1939 02d2 084B     		ldr	r3, .L146+28
 1940 02d4 1E4A     		ldr	r2, .L146+120
 1941 02d6 B1E6     		b	.L145
 1942              	.L147:
 1943              		.align	3
 1944              	.L146:
 1945 02d8 182D4454 		.word	1413754136
 1946 02dc FB21F93F 		.word	1073291771
 1947 02e0 00000000 		.word	.LC7
 1948 02e4 00000000 		.word	__func__.12
 1949 02e8 0E000000 		.word	.LC5
ARM GAS  /tmp/ccHyRziO.s 			page 85


 1950 02ec 00370200 		.word	145152
 1951 02f0 46000000 		.word	.LC8
 1952 02f4 92000000 		.word	.LC9
 1953 02f8 B4000000 		.word	.LC10
 1954 02fc 00000000 		.word	__func__.11
 1955 0300 D8000000 		.word	.LC11
 1956 0304 06010000 		.word	.LC12
 1957 0308 10010000 		.word	.LC13
 1958 030c 00000000 		.word	__func__.10
 1959 0310 22010000 		.word	.LC14
 1960 0314 00000000 		.word	hgfxmmu
 1961 0318 00000358 		.word	1476591616
 1962 031c 35010000 		.word	.LC15
 1963 0320 00000000 		.word	cl
 1964 0324 6666E63E 		.word	1055286886
 1965 0328 00000000 		.word	nn_input_queue
 1966 032c 43010000 		.word	.LC16
 1967 0330 00000000 		.word	__func__.13
 1968 0334 00000000 		.word	0
 1969 0338 0000803D 		.word	1031798784
 1970 033c 00000000 		.word	.LC4
 1971 0340 00000000 		.word	__func__.9
 1972 0344 4F010000 		.word	.LC17
 1973 0348 00000000 		.word	frame_event_nb_for_resize
 1974 034c 5E010000 		.word	.LC18
 1975 0350 00000000 		.word	__func__.8
 1976 0354 00000000 		.word	NN_Instance_palm_detector
 1977 0358 00004844 		.word	1145569280
 1978              	.L79:
1214:Src/app.c     **** 
 1979              		.loc 1 1214 3 is_stmt 1 view .LVU617
1214:Src/app.c     **** 
 1980              		.loc 1 1214 13 is_stmt 0 view .LVU618
 1981 035c 569B     		ldr	r3, [sp, #344]
 1982 035e 002B     		cmp	r3, #0
 1983 0360 14BF     		ite	ne
 1984 0362 0124     		movne	r4, #1
 1985              	.LVL160:
1214:Src/app.c     **** 
 1986              		.loc 1 1214 13 view .LVU619
 1987 0364 0024     		moveq	r4, #0
 1988              	.LVL161:
1217:Src/app.c     ****     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
 1989              		.loc 1 1217 3 is_stmt 1 view .LVU620
1217:Src/app.c     ****     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
 1990              		.loc 1 1217 17 discriminator 1 view .LVU621
 1991 0366 6ED0     		beq	.L80
1218:Src/app.c     ****     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
 1992              		.loc 1 1218 5 view .LVU622
1218:Src/app.c     ****     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
 1993              		.loc 1 1218 47 is_stmt 0 view .LVU623
 1994 0368 559B     		ldr	r3, [sp, #340]
 1995              	.LVL162:
 1996              	.LBB452:
 1997              	.LBI452:
 393:Src/app.c     **** {
 1998              		.loc 1 393 13 is_stmt 1 view .LVU624
ARM GAS  /tmp/ccHyRziO.s 			page 86


 1999              	.LBB453:
 395:Src/app.c     **** 
 2000              		.loc 1 395 3 view .LVU625
 401:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 2001              		.loc 1 401 3 view .LVU626
 401:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 2002              		.loc 1 401 17 is_stmt 0 view .LVU627
 2003 036a 5FED057A 		vldr.32	s15, .L146+128
 2004 036e D3ED015A 		vldr.32	s11, [r3, #4]
 402:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
 2005              		.loc 1 402 17 view .LVU628
 2006 0372 93ED026A 		vldr.32	s12, [r3, #8]
 403:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 2007              		.loc 1 403 14 view .LVU629
 2008 0376 D3ED036A 		vldr.32	s13, [r3, #12]
 404:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 2009              		.loc 1 404 15 view .LVU630
 2010 037a 93ED047A 		vldr.32	s14, [r3, #16]
 401:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 2011              		.loc 1 401 17 view .LVU631
 2012 037e 65EEA75A 		vmul.f32	s11, s11, s15
 402:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
 2013              		.loc 1 402 17 view .LVU632
 2014 0382 26EE276A 		vmul.f32	s12, s12, s15
 403:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 2015              		.loc 1 403 14 view .LVU633
 2016 0386 66EEA76A 		vmul.f32	s13, s13, s15
 404:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 2017              		.loc 1 404 15 view .LVU634
 2018 038a 27EE277A 		vmul.f32	s14, s14, s15
 2019 038e 4FF0070E 		mov	lr, #7
 406:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 2020              		.loc 1 406 8 view .LVU635
 2021 0392 5A69     		ldr	r2, [r3, #20]
 401:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 2022              		.loc 1 401 17 view .LVU636
 2023 0394 C3ED015A 		vstr.32	s11, [r3, #4]
 402:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
 2024              		.loc 1 402 3 is_stmt 1 view .LVU637
 402:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
 2025              		.loc 1 402 17 is_stmt 0 view .LVU638
 2026 0398 83ED026A 		vstr.32	s12, [r3, #8]
 403:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 2027              		.loc 1 403 3 is_stmt 1 view .LVU639
 403:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 2028              		.loc 1 403 14 is_stmt 0 view .LVU640
 2029 039c C3ED036A 		vstr.32	s13, [r3, #12]
 404:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 2030              		.loc 1 404 3 is_stmt 1 view .LVU641
 404:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 2031              		.loc 1 404 15 is_stmt 0 view .LVU642
 2032 03a0 83ED047A 		vstr.32	s14, [r3, #16]
 405:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 2033              		.loc 1 405 3 is_stmt 1 view .LVU643
 2034              	.LVL163:
 405:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 2035              		.loc 1 405 17 discriminator 1 view .LVU644
ARM GAS  /tmp/ccHyRziO.s 			page 87


 2036 03a4 4EF001E0 		dls	lr, lr
 2037 03a8 1346     		mov	r3, r2
 2038              	.LVL164:
 2039              	.L81:
 406:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 2040              		.loc 1 406 5 view .LVU645
 406:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 2041              		.loc 1 406 20 is_stmt 0 view .LVU646
 2042 03aa 93ED005A 		vldr.32	s10, [r3]
 2043 03ae 25EE275A 		vmul.f32	s10, s10, s15
 2044 03b2 83ED005A 		vstr.32	s10, [r3]
 407:Src/app.c     ****   }
 2045              		.loc 1 407 5 is_stmt 1 view .LVU647
 407:Src/app.c     ****   }
 2046              		.loc 1 407 20 is_stmt 0 view .LVU648
 2047 03b6 93ED015A 		vldr.32	s10, [r3, #4]
 2048 03ba 25EE275A 		vmul.f32	s10, s10, s15
 405:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 2049              		.loc 1 405 17 discriminator 1 view .LVU649
 2050 03be 0833     		adds	r3, r3, #8
 407:Src/app.c     ****   }
 2051              		.loc 1 407 20 view .LVU650
 2052 03c0 03ED015A 		vstr.32	s10, [r3, #-4]
 405:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 2053              		.loc 1 405 49 is_stmt 1 discriminator 3 view .LVU651
 405:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 2054              		.loc 1 405 17 discriminator 1 view .LVU652
 2055 03c4 0FF00FC8 		le	lr, .L81
 2056              	.LVL165:
 405:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 2057              		.loc 1 405 17 is_stmt 0 discriminator 1 view .LVU653
 2058              	.LBE453:
 2059              	.LBE452:
1219:Src/app.c     ****   }
 2060              		.loc 1 1219 5 is_stmt 1 view .LVU654
 2061              	.LBB454:
 2062              	.LBI429:
 448:Src/app.c     **** {
 2063              		.loc 1 448 13 view .LVU655
 2064              	.LBB451:
 450:Src/app.c     ****   const float shift_y = -0.5;
 2065              		.loc 1 450 3 view .LVU656
 451:Src/app.c     ****   const float scale = 2.6;
 2066              		.loc 1 451 3 view .LVU657
 452:Src/app.c     **** 
 2067              		.loc 1 452 3 view .LVU658
 454:Src/app.c     ****   roi->cy = box->y_center;
 2068              		.loc 1 454 3 view .LVU659
 454:Src/app.c     ****   roi->cy = box->y_center;
 2069              		.loc 1 454 11 is_stmt 0 view .LVU660
 2070 03c8 DFF81CA3 		ldr	r10, .L148+32
 2071              	.LVL166:
 2072              	.LBB446:
 2073              	.LBB441:
 379:Src/app.c     **** 
 2074              		.loc 1 379 39 view .LVU661
 2075 03cc 92ED050A 		vldr.32	s0, [r2, #20]
ARM GAS  /tmp/ccHyRziO.s 			page 88


 2076              	.LBE441:
 2077              	.LBE446:
 457:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 2078              		.loc 1 457 10 view .LVU662
 2079 03d0 8AED037A 		vstr.32	s14, [r10, #12]
 2080              	.LBB447:
 2081              	.LBB442:
 379:Src/app.c     **** 
 2082              		.loc 1 379 39 view .LVU663
 2083 03d4 92ED017A 		vldr.32	s14, [r2, #4]
 379:Src/app.c     **** 
 2084              		.loc 1 379 27 view .LVU664
 2085 03d8 D2ED007A 		vldr.32	s15, [r2]
 379:Src/app.c     **** 
 2086              		.loc 1 379 39 view .LVU665
 2087 03dc 30EE470A 		vsub.f32	s0, s0, s14
 379:Src/app.c     **** 
 2088              		.loc 1 379 27 view .LVU666
 2089 03e0 D2ED040A 		vldr.32	s1, [r2, #16]
 2090 03e4 B1EE400A 		vneg.f32	s0, s0
 2091 03e8 70EEE70A 		vsub.f32	s1, s1, s15
 2092              	.LBE442:
 2093              	.LBE447:
 454:Src/app.c     ****   roi->cy = box->y_center;
 2094              		.loc 1 454 11 view .LVU667
 2095 03ec CAED005A 		vstr.32	s11, [r10]
 455:Src/app.c     ****   roi->w = box->width;
 2096              		.loc 1 455 3 is_stmt 1 view .LVU668
 455:Src/app.c     ****   roi->w = box->width;
 2097              		.loc 1 455 11 is_stmt 0 view .LVU669
 2098 03f0 8AED016A 		vstr.32	s12, [r10, #4]
 456:Src/app.c     ****   roi->h = box->height;
 2099              		.loc 1 456 3 is_stmt 1 view .LVU670
 456:Src/app.c     ****   roi->h = box->height;
 2100              		.loc 1 456 10 is_stmt 0 view .LVU671
 2101 03f4 CAED026A 		vstr.32	s13, [r10, #8]
 457:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 2102              		.loc 1 457 3 is_stmt 1 view .LVU672
 458:Src/app.c     **** 
 2103              		.loc 1 458 3 view .LVU673
 2104              	.LBB448:
 2105              	.LBI431:
 369:Src/app.c     **** {
 2106              		.loc 1 369 14 view .LVU674
 2107              	.LVL167:
 2108              	.LBB443:
 371:Src/app.c     ****   float rotation;
 2109              		.loc 1 371 3 view .LVU675
 372:Src/app.c     **** 
 2110              		.loc 1 372 3 view .LVU676
 374:Src/app.c     ****   y0 = box->pKps[0].y;
 2111              		.loc 1 374 3 view .LVU677
 375:Src/app.c     ****   x1 = box->pKps[2].x;
 2112              		.loc 1 375 3 view .LVU678
 376:Src/app.c     ****   y1 = box->pKps[2].y;
 2113              		.loc 1 376 3 view .LVU679
 377:Src/app.c     **** 
ARM GAS  /tmp/ccHyRziO.s 			page 89


 2114              		.loc 1 377 3 view .LVU680
 379:Src/app.c     **** 
 2115              		.loc 1 379 3 view .LVU681
 379:Src/app.c     **** 
 2116              		.loc 1 379 27 is_stmt 0 view .LVU682
 2117 03f8 FFF7FEFF 		bl	atan2f
 2118              	.LVL168:
 381:Src/app.c     **** }
 2119              		.loc 1 381 3 is_stmt 1 view .LVU683
 2120              	.LBB433:
 2121              	.LBI433:
 359:Src/app.c     **** {
 2122              		.loc 1 359 14 view .LVU684
 2123              	.LBB434:
 361:Src/app.c     **** }
 2124              		.loc 1 361 3 view .LVU685
 2125              	.LBE434:
 2126              	.LBE433:
 379:Src/app.c     **** 
 2127              		.loc 1 379 27 is_stmt 0 discriminator 1 view .LVU686
 2128 03fc B7EEC07A 		vcvt.f64.f32	d7, s0
 379:Src/app.c     **** 
 2129              		.loc 1 379 25 discriminator 1 view .LVU687
 2130 0400 38EE477B 		vsub.f64	d7, d8, d7
 379:Src/app.c     **** 
 2131              		.loc 1 379 12 discriminator 1 view .LVU688
 2132 0404 B7EEC77B 		vcvt.f32.f64	s14, d7
 2133              	.LBB438:
 2134              	.LBB435:
 361:Src/app.c     **** }
 2135              		.loc 1 361 43 view .LVU689
 2136 0408 9FEDAF5B 		vldr.64	d5, .L148
 361:Src/app.c     **** }
 2137              		.loc 1 361 16 view .LVU690
 2138 040c B7EEC77A 		vcvt.f64.f32	d7, s14
 361:Src/app.c     **** }
 2139              		.loc 1 361 54 view .LVU691
 2140 0410 9FEDAF4B 		vldr.64	d4, .L148+8
 361:Src/app.c     **** }
 2141              		.loc 1 361 43 view .LVU692
 2142 0414 37EE055B 		vadd.f64	d5, d7, d5
 361:Src/app.c     **** }
 2143              		.loc 1 361 54 view .LVU693
 2144 0418 85EE046B 		vdiv.f64	d6, d5, d4
 361:Src/app.c     **** }
 2145              		.loc 1 361 29 view .LVU694
 2146 041c B7EEC66B 		vcvt.f32.f64	s12, d6
 2147 0420 BBFE466A 		vrintm.f32	s12, s12
 361:Src/app.c     **** }
 2148              		.loc 1 361 29 discriminator 1 view .LVU695
 2149 0424 B7EEC66A 		vcvt.f64.f32	d6, s12
 361:Src/app.c     **** }
 2150              		.loc 1 361 16 discriminator 1 view .LVU696
 2151 0428 A6EE447B 		vfms.f64	d7, d6, d4
 2152              	.LVL169:
 361:Src/app.c     **** }
 2153              		.loc 1 361 16 discriminator 1 view .LVU697
ARM GAS  /tmp/ccHyRziO.s 			page 90


 2154              	.LBE435:
 2155              	.LBE438:
 2156              	.LBE443:
 2157              	.LBE448:
 460:Src/app.c     **** 
 2158              		.loc 1 460 3 view .LVU698
 2159 042c 9FEDAA1A 		vldr.32	s2, .L148+16
 2160              	.LBB449:
 2161              	.LBB444:
 2162              	.LBB439:
 2163              	.LBB436:
 361:Src/app.c     **** }
 2164              		.loc 1 361 16 discriminator 1 view .LVU699
 2165 0430 B7EEC77B 		vcvt.f32.f64	s14, d7
 2166              	.LBE436:
 2167              	.LBE439:
 2168              	.LBE444:
 2169              	.LBE449:
 460:Src/app.c     **** 
 2170              		.loc 1 460 3 view .LVU700
 2171 0434 F0EE410A 		vmov.f32	s1, s2
 2172 0438 BEEE000A 		vmov.f32	s0, #-5.0e-1
 2173 043c 5046     		mov	r0, r10
 2174              	.LBB450:
 2175              	.LBB445:
 2176              	.LBB440:
 2177              	.LBB437:
 361:Src/app.c     **** }
 2178              		.loc 1 361 16 discriminator 1 view .LVU701
 2179 043e 8AED047A 		vstr.32	s14, [r10, #16]
 2180              	.LBE437:
 2181              	.LBE440:
 2182              	.LBE445:
 2183              	.LBE450:
 460:Src/app.c     **** 
 2184              		.loc 1 460 3 is_stmt 1 view .LVU702
 2185 0442 FFF7FEFF 		bl	roi_shift_and_scale.constprop.0
 2186              	.LVL170:
 460:Src/app.c     **** 
 2187              		.loc 1 460 3 is_stmt 0 view .LVU703
 2188              	.LBE451:
 2189              	.LBE454:
1217:Src/app.c     ****     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
 2190              		.loc 1 1217 29 is_stmt 1 discriminator 3 view .LVU704
1217:Src/app.c     ****     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
 2191              		.loc 1 1217 17 discriminator 1 view .LVU705
 2192              	.L80:
1223:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
 2193              		.loc 1 1223 3 view .LVU706
1223:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
 2194              		.loc 1 1223 3 view .LVU707
1223:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
 2195              		.loc 1 1223 3 discriminator 1 view .LVU708
 2196 0446 4A9A     		ldr	r2, [sp, #296]
 2197              	.LVL171:
 2198              	.LBB455:
 2199              	.LBI455:
ARM GAS  /tmp/ccHyRziO.s 			page 91


 2200              		.file 3 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /******************************************************************************
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @file     cachel1_armv7.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @brief    CMSIS Level 1 Cache API for Armv7-M and later
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @version  V1.0.3
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @date     17. March 2023
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Copyright (c) 2020-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #if   defined ( __ICCARM__ )
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #elif defined (__clang__)
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma clang system_header    /* treat file as system include file */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef ARM_CACHEL1_ARMV7_H
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define ARM_CACHEL1_ARMV7_H
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \ingroup  CMSIS_Core_FunctionInterface
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief    Functions that configure Instruction and Data cache.
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   @{
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /* Cache Size ID Register Macros */
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_DCACHE_LINE_SIZE
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_ICACHE_LINE_SIZE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable I-Cache
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on I-Cache
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
ARM GAS  /tmp/ccHyRziO.s 			page 92


  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable I-Cache
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off I-Cache
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate I-Cache
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   I-Cache Invalidate by address
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache for the given address.
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   isize   size of memory block (in number of bytes)
ARM GAS  /tmp/ccHyRziO.s 			page 93


 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (volatile void *addr, int32_t isize)
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( isize > 0 ) {
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable D-Cache
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on D-Cache
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccHyRziO.s 			page 94


 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable D-Cache
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off D-Cache
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     struct {
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } locals
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if ((defined(__GNUC__) || defined(__clang__)) && !defined(__OPTIMIZE__))
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        __ALIGNED(__SCB_DCACHE_LINE_SIZE)
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ;
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if !defined(__OPTIMIZE__)
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /*
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * For the endless loop issue with no optimization builds.
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * More details, see https://github.com/ARM-software/CMSIS_5/issues/620
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * The issue only happens when local variables are in stack. If
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables are saved in general purpose register, then the function
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * is OK.
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * When local variables are in stack, after disabling the cache, flush the
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables cache line for data consistency.
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        */
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /* Clean and invalidate the local variable cache. */
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if defined(__ICCARM__)
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     /* As we can't align the stack to the cache line size, invalidate each of the variables */
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.sets;
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ways;
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ccsidr;
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals;
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.ccsidr = SCB->CCSIDR;
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.sets = (uint32_t)(CCSIDR_SETS(locals.ccsidr));
ARM GAS  /tmp/ccHyRziO.s 			page 95


 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       locals.ways = (uint32_t)(CCSIDR_WAYS(locals.ccsidr));
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((locals.sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((locals.ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (locals.ways-- != 0U);
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(locals.sets-- != 0U);
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate D-Cache
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean D-Cache
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
ARM GAS  /tmp/ccHyRziO.s 			page 96


 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean D-Cache */
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean & Invalidate D-Cache
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and Invalidates D-Cache
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
ARM GAS  /tmp/ccHyRziO.s 			page 97


 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Invalidate by address
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache for the given address.
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 2201              		.loc 3 358 27 view .LVU709
 2202              	.LBB456:
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 2203              		.loc 3 361 5 view .LVU710
 2204              		.loc 3 361 8 is_stmt 0 view .LVU711
 2205 0448 002A     		cmp	r2, #0
 2206 044a 1DDD     		ble	.L82
 2207              	.LBB457:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2208              		.loc 3 362 8 is_stmt 1 view .LVU712
 2209              		.loc 3 362 36 is_stmt 0 view .LVU713
 2210 044c 499B     		ldr	r3, [sp, #292]
 2211              		.loc 3 362 52 view .LVU714
 2212 044e 03F01F00 		and	r0, r3, #31
 2213              		.loc 3 362 32 view .LVU715
 2214 0452 1044     		add	r0, r0, r2
 2215              	.LVL172:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2216              		.loc 3 363 7 is_stmt 1 view .LVU716
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2217              		.loc 3 365 7 view .LVU717
 2218              	.LBB458:
 2219              	.LBI458:
 2220              		.file 4 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /tmp/ccHyRziO.s 			page 98


  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /tmp/ccHyRziO.s 			page 99


  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  /tmp/ccHyRziO.s 			page 100


 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHyRziO.s 			page 101


 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccHyRziO.s 			page 102


 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 2221              		.loc 4 269 27 view .LVU718
 2222              	.LBB459:
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 2223              		.loc 4 271 3 view .LVU719
 2224              		.syntax unified
 2225              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2226 0454 BFF34F8F 		dsb 0xF
 2227              	@ 0 "" 2
 2228              		.thumb
 2229              		.syntax unified
 2230              	.LBE459:
 2231              	.LBE458:
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2232              		.loc 3 371 25 is_stmt 0 discriminator 1 view .LVU720
 2233 0458 DA43     		mvns	r2, r3
 2234              	.LVL173:
 2235              		.loc 3 371 25 discriminator 1 view .LVU721
 2236 045a 03EB000C 		add	ip, r3, r0
 2237 045e 6244     		add	r2, r2, ip
 2238 0460 2038     		subs	r0, r0, #32
 2239              	.LVL174:
 2240              		.loc 3 371 25 discriminator 1 view .LVU722
 2241 0462 5209     		lsrs	r2, r2, #5
ARM GAS  /tmp/ccHyRziO.s 			page 103


 2242 0464 2030     		adds	r0, r0, #32
 2243              	.LVL175:
 2244              		.loc 3 371 25 discriminator 1 view .LVU723
 2245 0466 02F1010E 		add	lr, r2, #1
 2246 046a D8BF     		it	le
 2247 046c 4FF0010E 		movle	lr, #1
 2248 0470 4EF001E0 		dls	lr, lr
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2249              		.loc 3 368 22 view .LVU724
 2250 0474 9949     		ldr	r1, .L148+20
 2251              	.LVL176:
 2252              	.L83:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2253              		.loc 3 367 7 is_stmt 1 view .LVU725
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2254              		.loc 3 368 9 view .LVU726
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2255              		.loc 3 368 22 is_stmt 0 view .LVU727
 2256 0476 C1F85C32 		str	r3, [r1, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2257              		.loc 3 369 9 is_stmt 1 view .LVU728
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2258              		.loc 3 369 17 is_stmt 0 view .LVU729
 2259 047a 2033     		adds	r3, r3, #32
 2260              	.LVL177:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2261              		.loc 3 370 9 is_stmt 1 view .LVU730
 2262              		.loc 3 371 25 discriminator 1 view .LVU731
 2263 047c 0FF005C8 		le	lr, .L83
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2264              		.loc 3 373 7 view .LVU732
 2265              	.LBB460:
 2266              	.LBI460:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2267              		.loc 4 269 27 view .LVU733
 2268              	.LBB461:
 2269              		.loc 4 271 3 view .LVU734
 2270              		.syntax unified
 2271              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2272 0480 BFF34F8F 		dsb 0xF
 2273              	@ 0 "" 2
 2274              		.thumb
 2275              		.syntax unified
 2276              	.LBE461:
 2277              	.LBE460:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2278              		.loc 3 374 7 view .LVU735
 2279              	.LBB462:
 2280              	.LBI462:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2281              		.loc 4 258 27 view .LVU736
 2282              	.LBB463:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2283              		.loc 4 260 3 view .LVU737
 2284              		.syntax unified
 2285              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccHyRziO.s 			page 104


 2286 0484 BFF36F8F 		isb 0xF
 2287              	@ 0 "" 2
 2288              	.LVL178:
 2289              		.thumb
 2290              		.syntax unified
 2291              	.L82:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2292              		.loc 4 260 3 is_stmt 0 view .LVU738
 2293              	.LBE463:
 2294              	.LBE462:
 2295              	.LBE457:
 2296              	.LBE456:
 2297              	.LBE455:
1223:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
 2298              		.loc 1 1223 3 is_stmt 1 discriminator 3 view .LVU739
1224:Src/app.c     **** 
 2299              		.loc 1 1224 3 view .LVU740
1224:Src/app.c     **** 
 2300              		.loc 1 1224 3 view .LVU741
1224:Src/app.c     **** 
 2301              		.loc 1 1224 3 discriminator 1 view .LVU742
 2302 0488 4C9A     		ldr	r2, [sp, #304]
 2303              	.LVL179:
 2304              	.LBB464:
 2305              	.LBI464:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2306              		.loc 3 358 27 view .LVU743
 2307              	.LBB465:
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2308              		.loc 3 361 5 view .LVU744
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2309              		.loc 3 361 8 is_stmt 0 view .LVU745
 2310 048a 002A     		cmp	r2, #0
 2311 048c 1DDD     		ble	.L84
 2312              	.LBB466:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2313              		.loc 3 362 8 is_stmt 1 view .LVU746
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2314              		.loc 3 362 36 is_stmt 0 view .LVU747
 2315 048e 4B9B     		ldr	r3, [sp, #300]
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2316              		.loc 3 362 52 view .LVU748
 2317 0490 03F01F00 		and	r0, r3, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2318              		.loc 3 362 32 view .LVU749
 2319 0494 1044     		add	r0, r0, r2
 2320              	.LVL180:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2321              		.loc 3 363 7 is_stmt 1 view .LVU750
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2322              		.loc 3 365 7 view .LVU751
 2323              	.LBB467:
 2324              	.LBI467:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2325              		.loc 4 269 27 view .LVU752
 2326              	.LBB468:
 2327              		.loc 4 271 3 view .LVU753
ARM GAS  /tmp/ccHyRziO.s 			page 105


 2328              		.syntax unified
 2329              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2330 0496 BFF34F8F 		dsb 0xF
 2331              	@ 0 "" 2
 2332              		.thumb
 2333              		.syntax unified
 2334              	.LBE468:
 2335              	.LBE467:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2336              		.loc 3 371 25 is_stmt 0 discriminator 1 view .LVU754
 2337 049a DA43     		mvns	r2, r3
 2338              	.LVL181:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2339              		.loc 3 371 25 discriminator 1 view .LVU755
 2340 049c 03EB000C 		add	ip, r3, r0
 2341 04a0 6244     		add	r2, r2, ip
 2342 04a2 2038     		subs	r0, r0, #32
 2343              	.LVL182:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2344              		.loc 3 371 25 discriminator 1 view .LVU756
 2345 04a4 5209     		lsrs	r2, r2, #5
 2346 04a6 2030     		adds	r0, r0, #32
 2347              	.LVL183:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2348              		.loc 3 371 25 discriminator 1 view .LVU757
 2349 04a8 02F1010E 		add	lr, r2, #1
 2350 04ac D8BF     		it	le
 2351 04ae 4FF0010E 		movle	lr, #1
 2352 04b2 4EF001E0 		dls	lr, lr
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2353              		.loc 3 368 22 view .LVU758
 2354 04b6 8949     		ldr	r1, .L148+20
 2355              	.LVL184:
 2356              	.L85:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2357              		.loc 3 367 7 is_stmt 1 view .LVU759
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2358              		.loc 3 368 9 view .LVU760
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2359              		.loc 3 368 22 is_stmt 0 view .LVU761
 2360 04b8 C1F85C32 		str	r3, [r1, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2361              		.loc 3 369 9 is_stmt 1 view .LVU762
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2362              		.loc 3 369 17 is_stmt 0 view .LVU763
 2363 04bc 2033     		adds	r3, r3, #32
 2364              	.LVL185:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2365              		.loc 3 370 9 is_stmt 1 view .LVU764
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2366              		.loc 3 371 25 discriminator 1 view .LVU765
 2367 04be 0FF005C8 		le	lr, .L85
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2368              		.loc 3 373 7 view .LVU766
 2369              	.LBB469:
 2370              	.LBI469:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccHyRziO.s 			page 106


 2371              		.loc 4 269 27 view .LVU767
 2372              	.LBB470:
 2373              		.loc 4 271 3 view .LVU768
 2374              		.syntax unified
 2375              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2376 04c2 BFF34F8F 		dsb 0xF
 2377              	@ 0 "" 2
 2378              		.thumb
 2379              		.syntax unified
 2380              	.LBE470:
 2381              	.LBE469:
 2382              		.loc 3 374 7 view .LVU769
 2383              	.LBB471:
 2384              	.LBI471:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2385              		.loc 4 258 27 view .LVU770
 2386              	.LBB472:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2387              		.loc 4 260 3 view .LVU771
 2388              		.syntax unified
 2389              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2390 04c6 BFF36F8F 		isb 0xF
 2391              	@ 0 "" 2
 2392              	.LVL186:
 2393              		.thumb
 2394              		.syntax unified
 2395              	.L84:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2396              		.loc 4 260 3 is_stmt 0 view .LVU772
 2397              	.LBE472:
 2398              	.LBE471:
 2399              	.LBE466:
 2400              	.LBE465:
 2401              	.LBE464:
1224:Src/app.c     **** 
 2402              		.loc 1 1224 3 is_stmt 1 discriminator 3 view .LVU773
1226:Src/app.c     **** 
 2403              		.loc 1 1226 3 view .LVU774
1226:Src/app.c     **** 
 2404              		.loc 1 1226 19 is_stmt 0 view .LVU775
 2405 04ca FFF7FEFF 		bl	HAL_GetTick
 2406              	.LVL187:
 2407              	.LBE473:
 2408              	.LBE481:
1537:Src/app.c     ****     } else {
 2409              		.loc 1 1537 49 view .LVU776
 2410 04ce 559B     		ldr	r3, [sp, #340]
 2411              	.LBB482:
 2412              	.LBB474:
1226:Src/app.c     **** 
 2413              		.loc 1 1226 33 discriminator 1 view .LVU777
 2414 04d0 401B     		subs	r0, r0, r5
 2415              	.LVL188:
1228:Src/app.c     **** }
 2416              		.loc 1 1228 3 is_stmt 1 view .LVU778
1228:Src/app.c     **** }
 2417              		.loc 1 1228 3 is_stmt 0 view .LVU779
ARM GAS  /tmp/ccHyRziO.s 			page 107


 2418              	.LBE474:
 2419              	.LBE482:
1537:Src/app.c     ****     } else {
 2420              		.loc 1 1537 7 is_stmt 1 view .LVU780
1537:Src/app.c     ****     } else {
 2421              		.loc 1 1537 21 is_stmt 0 view .LVU781
 2422 04d2 1B68     		ldr	r3, [r3]	@ float
 2423 04d4 2193     		str	r3, [sp, #132]	@ float
 2424              	.LVL189:
 2425              	.L86:
1543:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
 2426              		.loc 1 1543 5 is_stmt 1 view .LVU782
1543:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
 2427              		.loc 1 1543 60 is_stmt 0 view .LVU783
 2428 04d6 07EE900A 		vmov	s15, r0	@ int
 2429 04da F1EE0CBA 		vmov.f32	s23, #7.0e+0
 2430 04de F8EE677A 		vcvt.f32.u32	s15, s15
 2431              	.LBB483:
 2432              	.LBB484:
 619:Src/app.c     ****   assert(ret == pdTRUE);
 2433              		.loc 1 619 9 view .LVU784
 2434 04e2 0023     		movs	r3, #0
 2435              	.LBE484:
 2436              	.LBE483:
1543:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
 2437              		.loc 1 1543 60 view .LVU785
 2438 04e4 EAEE2B7A 		vfma.f32	s15, s20, s23
1543:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
 2439              		.loc 1 1543 20 view .LVU786
 2440 04e8 B4EE00BA 		vmov.f32	s22, #1.25e-1
 2441              	.LBB487:
 2442              	.LBB485:
 619:Src/app.c     ****   assert(ret == pdTRUE);
 2443              		.loc 1 619 9 view .LVU787
 2444 04ec 1A46     		mov	r2, r3
 2445 04ee 1946     		mov	r1, r3
 2446 04f0 3868     		ldr	r0, [r7]
 2447              	.LVL190:
 619:Src/app.c     ****   assert(ret == pdTRUE);
 2448              		.loc 1 619 9 view .LVU788
 2449              	.LBE485:
 2450              	.LBE487:
1543:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
 2451              		.loc 1 1543 20 view .LVU789
 2452 04f2 27EE8BAA 		vmul.f32	s20, s15, s22
 2453              	.LVL191:
1544:Src/app.c     **** 
 2454              		.loc 1 1544 5 is_stmt 1 view .LVU790
 2455              	.LBB488:
 2456              	.LBI483:
 615:Src/app.c     **** {
 2457              		.loc 1 615 13 view .LVU791
 2458              	.LBB486:
 617:Src/app.c     **** 
 2459              		.loc 1 617 3 view .LVU792
 619:Src/app.c     ****   assert(ret == pdTRUE);
 2460              		.loc 1 619 3 view .LVU793
ARM GAS  /tmp/ccHyRziO.s 			page 108


 619:Src/app.c     ****   assert(ret == pdTRUE);
 2461              		.loc 1 619 9 is_stmt 0 view .LVU794
 2462 04f6 FFF7FEFF 		bl	xQueueGenericSend
 2463              	.LVL192:
 620:Src/app.c     **** }
 2464              		.loc 1 620 3 view .LVU795
 2465 04fa 0128     		cmp	r0, #1
 619:Src/app.c     ****   assert(ret == pdTRUE);
 2466              		.loc 1 619 9 view .LVU796
 2467 04fc 0546     		mov	r5, r0
 2468              	.LVL193:
 620:Src/app.c     **** }
 2469              		.loc 1 620 3 is_stmt 1 view .LVU797
 2470 04fe 13D0     		beq	.L87
 620:Src/app.c     **** }
 2471              		.loc 1 620 3 is_stmt 0 discriminator 1 view .LVU798
 2472 0500 4FF41B71 		mov	r1, #620
 2473 0504 764B     		ldr	r3, .L148+24
 2474 0506 774A     		ldr	r2, .L148+28
 2475 0508 98E5     		b	.L145
 2476              	.LVL194:
 2477              	.L77:
 620:Src/app.c     **** }
 2478              		.loc 1 620 3 discriminator 1 view .LVU799
 2479              	.LBE486:
 2480              	.LBE488:
1539:Src/app.c     ****       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
 2481              		.loc 1 1539 7 is_stmt 1 view .LVU800
1539:Src/app.c     ****       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
 2482              		.loc 1 1539 15 is_stmt 0 view .LVU801
 2483 050a 774D     		ldr	r5, .L148+32
 2484              	.LVL195:
1539:Src/app.c     ****       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
 2485              		.loc 1 1539 15 view .LVU802
 2486 050c 0DF15C0C 		add	ip, sp, #92
 2487 0510 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2488 0514 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2489 0516 DCF80030 		ldr	r3, [ip]
1540:Src/app.c     ****       pd_ms = 0;
 2490              		.loc 1 1540 7 view .LVU803
 2491 051a 5598     		ldr	r0, [sp, #340]
 2492 051c 21A9     		add	r1, sp, #132
1539:Src/app.c     ****       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
 2493              		.loc 1 1539 15 view .LVU804
 2494 051e 2B60     		str	r3, [r5]
1540:Src/app.c     ****       pd_ms = 0;
 2495              		.loc 1 1540 7 is_stmt 1 view .LVU805
 2496 0520 FFF7FEFF 		bl	copy_pd_box
 2497              	.LVL196:
1541:Src/app.c     ****     }
 2498              		.loc 1 1541 7 view .LVU806
1541:Src/app.c     ****     }
 2499              		.loc 1 1541 13 is_stmt 0 view .LVU807
 2500 0524 0020     		movs	r0, #0
 2501 0526 D6E7     		b	.L86
 2502              	.LVL197:
 2503              	.L87:
ARM GAS  /tmp/ccHyRziO.s 			page 109


1547:Src/app.c     ****       hl_ms = HAL_GetTick();
 2504              		.loc 1 1547 5 is_stmt 1 view .LVU808
1560:Src/app.c     ****     }
 2505              		.loc 1 1560 13 is_stmt 0 view .LVU809
 2506 0528 2046     		mov	r0, r4
1547:Src/app.c     ****       hl_ms = HAL_GetTick();
 2507              		.loc 1 1547 8 view .LVU810
 2508 052a 002C     		cmp	r4, #0
 2509 052c 00F02582 		beq	.L88
 2510              	.LVL198:
1548:Src/app.c     ****       /* Run the landmark model. Note it uses the main display buffer for cropping. */
 2511              		.loc 1 1548 7 is_stmt 1 view .LVU811
1548:Src/app.c     ****       /* Run the landmark model. Note it uses the main display buffer for cropping. */
 2512              		.loc 1 1548 15 is_stmt 0 view .LVU812
 2513 0530 FFF7FEFF 		bl	HAL_GetTick
 2514              	.LVL199:
1550:Src/app.c     ****       /* Invalidate this buffer region as the CPU/GPU may have read from it. */
 2515              		.loc 1 1550 52 view .LVU813
 2516 0534 6D49     		ldr	r1, .L148+36
 2517 0536 6E4A     		ldr	r2, .L148+40
 2518 0538 09F00303 		and	r3, r9, #3
 2519 053c 01FB0323 		mla	r3, r1, r3, r2
 2520              	.LBB489:
 2521              	.LBB490:
 2522              	.LBB491:
 2523              	.LBB492:
1273:Src/app.c     ****     {           0,             0, 1},
 2524              		.loc 1 1273 12 view .LVU814
 2525 0540 DFF8D0C1 		ldr	ip, .L148+76
 2526 0544 57AC     		add	r4, sp, #348
 2527              	.LVL200:
1273:Src/app.c     ****     {           0,             0, 1},
 2528              		.loc 1 1273 12 view .LVU815
 2529              	.LBE492:
 2530              	.LBE491:
 2531              	.LBE490:
 2532              	.LBE489:
1548:Src/app.c     ****       /* Run the landmark model. Note it uses the main display buffer for cropping. */
 2533              		.loc 1 1548 15 view .LVU816
 2534 0546 0590     		str	r0, [sp, #20]
 2535              	.LVL201:
1550:Src/app.c     ****       /* Invalidate this buffer region as the CPU/GPU may have read from it. */
 2536              		.loc 1 1550 7 is_stmt 1 view .LVU817
1550:Src/app.c     ****       /* Invalidate this buffer region as the CPU/GPU may have read from it. */
 2537              		.loc 1 1550 52 is_stmt 0 view .LVU818
 2538 0548 0393     		str	r3, [sp, #12]
 2539              	.LVL202:
 2540              	.LBB535:
 2541              	.LBI489:
1325:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 2542              		.loc 1 1325 12 is_stmt 1 view .LVU819
 2543              	.LBB534:
1328:Src/app.c     ****   int is_valid;
 2544              		.loc 1 1328 3 view .LVU820
1329:Src/app.c     **** 
 2545              		.loc 1 1329 3 view .LVU821
1331:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
ARM GAS  /tmp/ccHyRziO.s 			page 110


 2546              		.loc 1 1331 3 view .LVU822
 2547              	.LBB506:
 2548              	.LBI491:
1271:Src/app.c     **** {
 2549              		.loc 1 1271 12 view .LVU823
 2550              	.LBB505:
1273:Src/app.c     ****     {           0,             0, 1},
 2551              		.loc 1 1273 3 view .LVU824
1273:Src/app.c     ****     {           0,             0, 1},
 2552              		.loc 1 1273 12 is_stmt 0 view .LVU825
 2553 054a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2554              	.LVL203:
1273:Src/app.c     ****     {           0,             0, 1},
 2555              		.loc 1 1273 12 view .LVU826
 2556 054e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2557 0550 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2558 0554 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2559 0556 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 2560 055a 84E80F00 		stm	r4, {r0, r1, r2, r3}
1279:Src/app.c     ****   nema_matrix3x3_t t;
 2561              		.loc 1 1279 3 is_stmt 1 view .LVU827
1279:Src/app.c     ****   nema_matrix3x3_t t;
 2562              		.loc 1 1279 25 is_stmt 0 view .LVU828
 2563 055e 0023     		movs	r3, #0
1285:Src/app.c     ****   assert(ret == HAL_OK);
 2564              		.loc 1 1285 9 view .LVU829
 2565 0560 6448     		ldr	r0, .L148+44
 2566 0562 27A9     		add	r1, sp, #156
1279:Src/app.c     ****   nema_matrix3x3_t t;
 2567              		.loc 1 1279 25 view .LVU830
 2568 0564 CDE92833 		strd	r3, r3, [sp, #160]
 2569 0568 2A93     		str	r3, [sp, #168]
1280:Src/app.c     ****   int ret;
 2570              		.loc 1 1280 3 is_stmt 1 view .LVU831
1281:Src/app.c     ****   int i;
 2571              		.loc 1 1281 3 view .LVU832
1282:Src/app.c     **** 
 2572              		.loc 1 1282 3 view .LVU833
1284:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
 2573              		.loc 1 1284 3 view .LVU834
1284:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
 2574              		.loc 1 1284 23 is_stmt 0 view .LVU835
 2575 056a 2796     		str	r6, [sp, #156]
1285:Src/app.c     ****   assert(ret == HAL_OK);
 2576              		.loc 1 1285 3 is_stmt 1 view .LVU836
1285:Src/app.c     ****   assert(ret == HAL_OK);
 2577              		.loc 1 1285 9 is_stmt 0 view .LVU837
 2578 056c FFF7FEFF 		bl	HAL_GFXMMU_ModifyBuffers
 2579              	.LVL204:
1286:Src/app.c     **** 
 2580              		.loc 1 1286 3 is_stmt 1 view .LVU838
 2581 0570 0446     		mov	r4, r0
 2582 0572 20B1     		cbz	r0, .L89
1286:Src/app.c     **** 
 2583              		.loc 1 1286 3 is_stmt 0 discriminator 1 view .LVU839
 2584 0574 40F20651 		movw	r1, #1286
 2585 0578 5F4B     		ldr	r3, .L148+48
ARM GAS  /tmp/ccHyRziO.s 			page 111


 2586 057a 604A     		ldr	r2, .L148+52
 2587 057c 5EE5     		b	.L145
 2588              	.L89:
1289:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
 2589              		.loc 1 1289 3 is_stmt 1 view .LVU840
 2590 057e 4FF0FF39 		mov	r9, #-1
 2591              	.LVL205:
1289:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
 2592              		.loc 1 1289 3 is_stmt 0 view .LVU841
 2593 0582 E022     		movs	r2, #224
 2594 0584 2B46     		mov	r3, r5
 2595 0586 1146     		mov	r1, r2
 2596 0588 4FF05450 		mov	r0, #889192448
 2597              	.LVL206:
1289:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
 2598              		.loc 1 1289 3 view .LVU842
 2599 058c CDF80090 		str	r9, [sp]
 2600 0590 FFF7FEFF 		bl	nema_bind_dst_tex
 2601              	.LVL207:
1290:Src/app.c     ****   nema_clear(0);
 2602              		.loc 1 1290 3 is_stmt 1 view .LVU843
 2603 0594 E023     		movs	r3, #224
 2604 0596 2146     		mov	r1, r4
 2605 0598 1A46     		mov	r2, r3
 2606 059a 2046     		mov	r0, r4
 2607 059c FFF7FEFF 		bl	nema_set_clip
 2608              	.LVL208:
1291:Src/app.c     ****   /* bind source texture */
 2609              		.loc 1 1291 3 view .LVU844
 2610 05a0 2046     		mov	r0, r4
 2611 05a2 FFF7FEFF 		bl	nema_clear
 2612              	.LVL209:
1293:Src/app.c     ****   nema_enable_tiling(1);
 2613              		.loc 1 1293 3 view .LVU845
 2614 05a6 DDF80CA0 		ldr	r10, [sp, #12]
 2615 05aa 2B46     		mov	r3, r5
 2616 05ac 4FF4F072 		mov	r2, #480
 2617 05b0 4FF44871 		mov	r1, #800
 2618 05b4 5046     		mov	r0, r10
 2619 05b6 CDE90095 		strd	r9, r5, [sp]
 2620 05ba FFF7FEFF 		bl	nema_bind_src_tex
 2621              	.LVL210:
1294:Src/app.c     ****   nema_set_blend_blit(NEMA_BL_SRC);
 2622              		.loc 1 1294 3 view .LVU846
 2623 05be 2846     		mov	r0, r5
 2624 05c0 FFF7FEFF 		bl	nema_enable_tiling
 2625              	.LVL211:
1295:Src/app.c     **** 
 2626              		.loc 1 1295 3 view .LVU847
 2627              	.LBB493:
 2628              	.LBI493:
 2629              		.file 5 "Lib/NemaGFX/include/nema_blender.h"
   1:Lib/NemaGFX/include/nema_blender.h **** /* TSI 2023.xmo */
   2:Lib/NemaGFX/include/nema_blender.h **** /*******************************************************************************
   3:Lib/NemaGFX/include/nema_blender.h ****  * Copyright (c) 2023 Think Silicon Single Member PC
   4:Lib/NemaGFX/include/nema_blender.h ****  *
   5:Lib/NemaGFX/include/nema_blender.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /tmp/ccHyRziO.s 			page 112


   6:Lib/NemaGFX/include/nema_blender.h ****  * of this header file and/or associated documentation files to use, copy,
   7:Lib/NemaGFX/include/nema_blender.h ****  * modify, merge, publish, distribute, sublicense, and/or sell copies of the
   8:Lib/NemaGFX/include/nema_blender.h ****  * Materials, and to permit persons to whom the Materials are furnished to do
   9:Lib/NemaGFX/include/nema_blender.h ****  * so, subject to the following conditions:
  10:Lib/NemaGFX/include/nema_blender.h ****  *
  11:Lib/NemaGFX/include/nema_blender.h ****  * The above copyright notice and this permission notice shall be included in
  12:Lib/NemaGFX/include/nema_blender.h ****  * all copies or substantial portions of the Materials.
  13:Lib/NemaGFX/include/nema_blender.h ****  *
  14:Lib/NemaGFX/include/nema_blender.h ****  * MODIFICATIONS TO THIS FILE MAY MEAN IT NO LONGER ACCURATELY REFLECTS
  15:Lib/NemaGFX/include/nema_blender.h ****  * NEMAGFX API. THE UNMODIFIED, NORMATIVE VERSIONS OF THINK-SILICON NEMAGFX
  16:Lib/NemaGFX/include/nema_blender.h ****  * SPECIFICATIONS AND HEADER INFORMATION ARE LOCATED AT:
  17:Lib/NemaGFX/include/nema_blender.h ****  *   https://think-silicon.com/products/software/nemagfx-api
  18:Lib/NemaGFX/include/nema_blender.h ****  *
  19:Lib/NemaGFX/include/nema_blender.h ****  *  The software is provided 'as is', without warranty of any kind, express or
  20:Lib/NemaGFX/include/nema_blender.h ****  *  implied, including but not limited to the warranties of merchantability,
  21:Lib/NemaGFX/include/nema_blender.h ****  *  fitness for a particular purpose and noninfringement. In no event shall
  22:Lib/NemaGFX/include/nema_blender.h ****  *  Think Silicon Single Member PC be liable for any claim, damages or other
  23:Lib/NemaGFX/include/nema_blender.h ****  *  liability, whether in an action of contract, tort or otherwise, arising
  24:Lib/NemaGFX/include/nema_blender.h ****  *  from, out of or in connection with the software or the use or other dealings
  25:Lib/NemaGFX/include/nema_blender.h ****  *  in the software.
  26:Lib/NemaGFX/include/nema_blender.h ****  ******************************************************************************/
  27:Lib/NemaGFX/include/nema_blender.h **** 
  28:Lib/NemaGFX/include/nema_blender.h **** 
  29:Lib/NemaGFX/include/nema_blender.h **** #ifndef NEMA_BLENDER_H__
  30:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLENDER_H__
  31:Lib/NemaGFX/include/nema_blender.h **** 
  32:Lib/NemaGFX/include/nema_blender.h **** #include "nema_sys_defs.h"
  33:Lib/NemaGFX/include/nema_blender.h **** #include "nema_graphics.h"
  34:Lib/NemaGFX/include/nema_blender.h **** 
  35:Lib/NemaGFX/include/nema_blender.h **** #ifdef __cplusplus
  36:Lib/NemaGFX/include/nema_blender.h **** extern "C" {
  37:Lib/NemaGFX/include/nema_blender.h **** #endif
  38:Lib/NemaGFX/include/nema_blender.h **** 
  39:Lib/NemaGFX/include/nema_blender.h **** // Blending Factor Selector
  40:Lib/NemaGFX/include/nema_blender.h **** //-------------------------------------------------------------------------------------------------
  41:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_ZERO         (0x0U) /**< 0 */
  42:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_ONE          (0x1U) /**< 1 */
  43:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_SRCCOLOR     (0x2U) /**< Sc */
  44:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_INVSRCCOLOR  (0x3U) /**< (1-Sc) */
  45:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_SRCALPHA     (0x4U) /**< Sa */
  46:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_INVSRCALPHA  (0x5U) /**< (1-Sa) */
  47:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_DESTALPHA    (0x6U) /**< Da */
  48:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_INVDESTALPHA (0x7U) /**< (1-Da) */
  49:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_DESTCOLOR    (0x8U) /**< Dc */
  50:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_INVDESTCOLOR (0x9U) /**< (1-Dc) */
  51:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_CONSTCOLOR   (0xaU) /**< Cc */
  52:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BF_CONSTALPHA   (0xbU) /**< Ca */
  53:Lib/NemaGFX/include/nema_blender.h **** 
  54:Lib/NemaGFX/include/nema_blender.h ****     /*                  source factor         destination factor */
  55:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_SIMPLE     (  (uint32_t)NEMA_BF_SRCALPHA      |   ((uint32_t)NEMA_BF_INVSRCALPHA  <
  56:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_CLEAR      (  (uint32_t)NEMA_BF_ZERO        /*|   ((uint32_t)NEMA_BF_ZERO         <
  57:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_SRC        (  (uint32_t)NEMA_BF_ONE         /*|   ((uint32_t)NEMA_BF_ZERO         <
  58:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_SRC_OVER   (  (uint32_t)NEMA_BF_ONE           |   ((uint32_t)NEMA_BF_INVSRCALPHA  <
  59:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_DST_OVER   (  (uint32_t)NEMA_BF_INVDESTALPHA  |   ((uint32_t)NEMA_BF_ONE          <
  60:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_SRC_IN     (  (uint32_t)NEMA_BF_DESTALPHA   /*|   ((uint32_t)NEMA_BF_ZERO         <
  61:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_DST_IN     (/*(uint32_t)NEMA_BF_ZERO          |*/ ((uint32_t)NEMA_BF_SRCALPHA     <
  62:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_SRC_OUT    (  (uint32_t)NEMA_BF_INVDESTALPHA/*|   ((uint32_t)NEMA_BF_ZERO         <
ARM GAS  /tmp/ccHyRziO.s 			page 113


  63:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_DST_OUT    (/*(uint32_t)NEMA_BF_ZERO          |*/ ((uint32_t)NEMA_BF_INVSRCALPHA  <
  64:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_SRC_ATOP   (  (uint32_t)NEMA_BF_DESTALPHA     |   ((uint32_t)NEMA_BF_INVSRCALPHA  <
  65:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_DST_ATOP   (  (uint32_t)NEMA_BF_INVDESTALPHA  |   ((uint32_t)NEMA_BF_SRCALPHA     <
  66:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_ADD        (  (uint32_t)NEMA_BF_ONE           |   ((uint32_t)NEMA_BF_ONE          <
  67:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BL_XOR        (  (uint32_t)NEMA_BF_INVDESTALPHA  |   ((uint32_t)NEMA_BF_INVSRCALPHA  <
  68:Lib/NemaGFX/include/nema_blender.h **** 
  69:Lib/NemaGFX/include/nema_blender.h **** 
  70:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_NONE         (0U)           /**< No extra blending operation */
  71:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_RECOLOR      (0x00100000U)  /**< Cconst*Aconst + Csrc*(1-Aconst). Overrides MODUL
  72:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_LUT          (0x00200000U)  /**< src_tex as index, src2_tex as palette */
  73:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_STENCIL_XY   (0x00400000U)  /**< Use TEX3 as mask/stencil */
  74:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_STENCIL_TXTY (0x00800000U)  /**< Use TEX3 as mask/stencil */
  75:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_NO_USE_ROPBL (0x01000000U)  /**< Don't use Rop Blender even if present */
  76:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_DST_CKEY_NEG (0x02000000U)  /**< Apply Inverse Destination Color Keying - draw on
  77:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_SRC_PREMULT  (0x04000000U)  /**< Premultiply Source Color with Source Alpha (cann
  78:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_MODULATE_A   (0x08000000U)  /**< Modulate by Constant Alpha value*/
  79:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_FORCE_A      (0x10000000U)  /**< Force Constant Alpha value */
  80:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_MODULATE_RGB (0x20000000U)  /**< Modulate by Constant Color (RGB) values */
  81:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_SRC_CKEY     (0x40000000U)  /**< Apply Source Color Keying - draw only when src c
  82:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_DST_CKEY     (0x80000000U)  /**< Apply Destination Color Keying - draw only when 
  83:Lib/NemaGFX/include/nema_blender.h **** #define NEMA_BLOP_MASK         (0xfff00000U)
  84:Lib/NemaGFX/include/nema_blender.h **** 
  85:Lib/NemaGFX/include/nema_blender.h **** /** \brief Return blending mode given source and destination blending factors and additional blendi
  86:Lib/NemaGFX/include/nema_blender.h ****  *
  87:Lib/NemaGFX/include/nema_blender.h ****  * \param src Source Blending Factor
  88:Lib/NemaGFX/include/nema_blender.h ****  * \param dst Destination Blending Factor
  89:Lib/NemaGFX/include/nema_blender.h ****  * \param ops Additional Blending Operations
  90:Lib/NemaGFX/include/nema_blender.h ****  * \return Final Blending Mode
  91:Lib/NemaGFX/include/nema_blender.h ****  *
  92:Lib/NemaGFX/include/nema_blender.h ****  */
  93:Lib/NemaGFX/include/nema_blender.h **** static inline uint32_t nema_blending_mode(uint32_t src_bf, uint32_t dst_bf, uint32_t blops) {
  94:Lib/NemaGFX/include/nema_blender.h ****     return ( (src_bf) | (dst_bf << 8) | (blops&NEMA_BLOP_MASK) );
  95:Lib/NemaGFX/include/nema_blender.h **** }
  96:Lib/NemaGFX/include/nema_blender.h **** 
  97:Lib/NemaGFX/include/nema_blender.h **** /** \brief Set blending mode
  98:Lib/NemaGFX/include/nema_blender.h ****  *
  99:Lib/NemaGFX/include/nema_blender.h ****  * \param blending_mode Blending mode to be set
 100:Lib/NemaGFX/include/nema_blender.h ****  * \param dst_tex Destination Texture
 101:Lib/NemaGFX/include/nema_blender.h ****  * \param fg_tex Foreground (source) Texture
 102:Lib/NemaGFX/include/nema_blender.h ****  * \param bg_tex Background (source2) Texture
 103:Lib/NemaGFX/include/nema_blender.h ****  *
 104:Lib/NemaGFX/include/nema_blender.h ****  */
 105:Lib/NemaGFX/include/nema_blender.h **** void nema_set_blend(uint32_t blending_mode, nema_tex_t dst_tex, nema_tex_t fg_tex, nema_tex_t bg_te
 106:Lib/NemaGFX/include/nema_blender.h **** 
 107:Lib/NemaGFX/include/nema_blender.h **** /** \brief Set blending mode for filling
 108:Lib/NemaGFX/include/nema_blender.h ****  *
 109:Lib/NemaGFX/include/nema_blender.h ****  * \param blending_mode Blending mode to be set
 110:Lib/NemaGFX/include/nema_blender.h ****  *
 111:Lib/NemaGFX/include/nema_blender.h ****  */
 112:Lib/NemaGFX/include/nema_blender.h **** static inline void nema_set_blend_fill(uint32_t blending_mode) {
 113:Lib/NemaGFX/include/nema_blender.h ****     nema_set_blend(blending_mode, NEMA_TEX0, NEMA_NOTEX, NEMA_NOTEX);
 114:Lib/NemaGFX/include/nema_blender.h **** }
 115:Lib/NemaGFX/include/nema_blender.h **** 
 116:Lib/NemaGFX/include/nema_blender.h **** /** \brief Set blending mode for filling with composing
 117:Lib/NemaGFX/include/nema_blender.h ****  *
 118:Lib/NemaGFX/include/nema_blender.h ****  * \param blending_mode Blending mode to be set
 119:Lib/NemaGFX/include/nema_blender.h ****  *
ARM GAS  /tmp/ccHyRziO.s 			page 114


 120:Lib/NemaGFX/include/nema_blender.h ****  */
 121:Lib/NemaGFX/include/nema_blender.h **** static inline void nema_set_blend_fill_compose(uint32_t blending_mode) {
 122:Lib/NemaGFX/include/nema_blender.h ****     nema_set_blend(blending_mode, NEMA_TEX0, NEMA_NOTEX, NEMA_TEX2);
 123:Lib/NemaGFX/include/nema_blender.h **** }
 124:Lib/NemaGFX/include/nema_blender.h **** 
 125:Lib/NemaGFX/include/nema_blender.h **** /** \brief Set blending mode for blitting
 126:Lib/NemaGFX/include/nema_blender.h ****  *
 127:Lib/NemaGFX/include/nema_blender.h ****  * \param blending_mode Blending mode to be set
 128:Lib/NemaGFX/include/nema_blender.h ****  *
 129:Lib/NemaGFX/include/nema_blender.h ****  */
 130:Lib/NemaGFX/include/nema_blender.h **** static inline void nema_set_blend_blit(uint32_t blending_mode) {
 2630              		.loc 5 130 20 view .LVU848
 2631              	.LBB494:
 131:Lib/NemaGFX/include/nema_blender.h ****     nema_set_blend(blending_mode, NEMA_TEX0, NEMA_TEX1, NEMA_NOTEX);
 2632              		.loc 5 131 5 view .LVU849
 2633 05c4 4B46     		mov	r3, r9
 2634 05c6 2A46     		mov	r2, r5
 2635 05c8 2146     		mov	r1, r4
 2636 05ca 2846     		mov	r0, r5
 2637              	.LBE494:
 2638              	.LBE493:
1299:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
 2639              		.loc 1 1299 42 is_stmt 0 view .LVU850
 2640 05cc 464D     		ldr	r5, .L148+32
 2641              	.LBB496:
 2642              	.LBB495:
 2643              		.loc 5 131 5 view .LVU851
 2644 05ce FFF7FEFF 		bl	nema_set_blend
 2645              	.LVL212:
 2646              		.loc 5 131 5 view .LVU852
 2647              	.LBE495:
 2648              	.LBE496:
1298:Src/app.c     ****   nema_mat3x3_translate(t, -roi->cx, -roi->cy);
 2649              		.loc 1 1298 3 is_stmt 1 view .LVU853
 2650 05d2 2EA8     		add	r0, sp, #184
 2651 05d4 FFF7FEFF 		bl	nema_mat3x3_load_identity
 2652              	.LVL213:
1299:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
 2653              		.loc 1 1299 3 view .LVU854
 2654 05d8 D5ED010A 		vldr.32	s1, [r5, #4]
 2655 05dc 95ED000A 		vldr.32	s0, [r5]
 2656 05e0 F1EE600A 		vneg.f32	s1, s1
 2657 05e4 B1EE400A 		vneg.f32	s0, s0
 2658 05e8 2EA8     		add	r0, sp, #184
 2659 05ea FFF7FEFF 		bl	nema_mat3x3_translate
 2660              	.LVL214:
1300:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
 2661              		.loc 1 1300 3 view .LVU855
 2662 05ee DFED447A 		vldr.32	s15, .L148+56
1300:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
 2663              		.loc 1 1300 25 is_stmt 0 view .LVU856
 2664 05f2 95ED040A 		vldr.32	s0, [r5, #16]
1300:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
 2665              		.loc 1 1300 3 view .LVU857
 2666 05f6 2EA8     		add	r0, sp, #184
 2667 05f8 20EE670A 		vnmul.f32	s0, s0, s15
 2668 05fc FFF7FEFF 		bl	nema_mat3x3_rotate
ARM GAS  /tmp/ccHyRziO.s 			page 115


 2669              	.LVL215:
1301:Src/app.c     ****   nema_mat3x3_translate(t, LD_WIDTH / 2, LD_HEIGHT / 2);
 2670              		.loc 1 1301 3 is_stmt 1 view .LVU858
 2671 0600 DFED407A 		vldr.32	s15, .L148+60
 2672 0604 D5ED030A 		vldr.32	s1, [r5, #12]
 2673 0608 95ED020A 		vldr.32	s0, [r5, #8]
 2674 060c C7EEA00A 		vdiv.f32	s1, s15, s1
 2675 0610 87EE800A 		vdiv.f32	s0, s15, s0
 2676 0614 2EA8     		add	r0, sp, #184
 2677 0616 FFF7FEFF 		bl	nema_mat3x3_scale
 2678              	.LVL216:
1302:Src/app.c     ****   for (i = 0 ; i < 4; i++)
 2679              		.loc 1 1302 3 view .LVU859
 2680 061a DFED3B0A 		vldr.32	s1, .L148+64
 2681 061e 2EA8     		add	r0, sp, #184
 2682 0620 B0EE600A 		vmov.f32	s0, s1
 2683 0624 FFF7FEFF 		bl	nema_mat3x3_translate
 2684              	.LVL217:
1303:Src/app.c     ****     app_transform(t, vertex[i]);
 2685              		.loc 1 1303 3 view .LVU860
1303:Src/app.c     ****     app_transform(t, vertex[i]);
 2686              		.loc 1 1303 18 discriminator 1 view .LVU861
 2687 0628 57AB     		add	r3, sp, #348
 2688              	.LVL218:
 2689              	.L91:
1304:Src/app.c     ****   nema_blit_quad_fit(vertex[0][0], vertex[0][1], vertex[1][0], vertex[1][1],
 2690              		.loc 1 1304 5 view .LVU862
 2691              	.LBB497:
 2692              	.LBI497:
1253:Src/app.c     **** {
 2693              		.loc 1 1253 13 view .LVU863
 2694              	.LBB498:
1255:Src/app.c     ****   int i;
 2695              		.loc 1 1255 3 view .LVU864
1256:Src/app.c     **** 
 2696              		.loc 1 1256 3 view .LVU865
1258:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
 2697              		.loc 1 1258 3 view .LVU866
1258:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
 2698              		.loc 1 1258 17 discriminator 1 view .LVU867
 2699 062a 1CAD     		add	r5, sp, #112
1259:Src/app.c     **** 
 2700              		.loc 1 1259 23 is_stmt 0 view .LVU868
 2701 062c 93ED006A 		vldr.32	s12, [r3]
1259:Src/app.c     **** 
 2702              		.loc 1 1259 40 view .LVU869
 2703 0630 D3ED015A 		vldr.32	s11, [r3, #4]
1259:Src/app.c     **** 
 2704              		.loc 1 1259 57 view .LVU870
 2705 0634 93ED027A 		vldr.32	s14, [r3, #8]
1258:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
 2706              		.loc 1 1258 10 view .LVU871
 2707 0638 0020     		movs	r0, #0
 2708 063a 2946     		mov	r1, r5
 2709 063c 2EAA     		add	r2, sp, #184
 2710              	.LVL219:
 2711              	.L90:
ARM GAS  /tmp/ccHyRziO.s 			page 116


1259:Src/app.c     **** 
 2712              		.loc 1 1259 5 is_stmt 1 view .LVU872
1259:Src/app.c     **** 
 2713              		.loc 1 1259 37 is_stmt 0 view .LVU873
 2714 063e D2ED017A 		vldr.32	s15, [r2, #4]
1259:Src/app.c     **** 
 2715              		.loc 1 1259 27 view .LVU874
 2716 0642 D2ED006A 		vldr.32	s13, [r2]
1259:Src/app.c     **** 
 2717              		.loc 1 1259 37 view .LVU875
 2718 0646 65EEA77A 		vmul.f32	s15, s11, s15
1259:Src/app.c     **** 
 2719              		.loc 1 1259 27 view .LVU876
 2720 064a E6EE867A 		vfma.f32	s15, s13, s12
1259:Src/app.c     **** 
 2721              		.loc 1 1259 44 view .LVU877
 2722 064e D2ED026A 		vldr.32	s13, [r2, #8]
 2723 0652 E6EE877A 		vfma.f32	s15, s13, s14
1258:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
 2724              		.loc 1 1258 23 discriminator 3 view .LVU878
 2725 0656 0130     		adds	r0, r0, #1
 2726              	.LVL220:
1258:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
 2727              		.loc 1 1258 17 discriminator 1 view .LVU879
 2728 0658 0328     		cmp	r0, #3
1259:Src/app.c     **** 
 2729              		.loc 1 1259 10 view .LVU880
 2730 065a E5EC017A 		vstmia.32	r5!, {s15}
1258:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
 2731              		.loc 1 1258 23 is_stmt 1 discriminator 3 view .LVU881
 2732              	.LVL221:
1258:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
 2733              		.loc 1 1258 17 discriminator 1 view .LVU882
 2734 065e 02F10C02 		add	r2, r2, #12
 2735 0662 ECD1     		bne	.L90
 2736              	.LVL222:
1261:Src/app.c     ****     v[i] = r[i];
 2737              		.loc 1 1261 17 discriminator 1 view .LVU883
1262:Src/app.c     **** }
 2738              		.loc 1 1262 5 view .LVU884
1262:Src/app.c     **** }
 2739              		.loc 1 1262 10 is_stmt 0 view .LVU885
 2740 0664 0A68     		ldr	r2, [r1]	@ float
 2741              	.LBE498:
 2742              	.LBE497:
1303:Src/app.c     ****     app_transform(t, vertex[i]);
 2743              		.loc 1 1303 24 discriminator 3 view .LVU886
 2744 0666 0134     		adds	r4, r4, #1
 2745              	.LVL223:
 2746              	.LBB502:
 2747              	.LBB499:
1262:Src/app.c     **** }
 2748              		.loc 1 1262 10 view .LVU887
 2749 0668 1A60     		str	r2, [r3]	@ float
1261:Src/app.c     ****     v[i] = r[i];
 2750              		.loc 1 1261 23 is_stmt 1 discriminator 3 view .LVU888
 2751              	.LVL224:
ARM GAS  /tmp/ccHyRziO.s 			page 117


1261:Src/app.c     ****     v[i] = r[i];
 2752              		.loc 1 1261 17 discriminator 1 view .LVU889
1262:Src/app.c     **** }
 2753              		.loc 1 1262 5 view .LVU890
1262:Src/app.c     **** }
 2754              		.loc 1 1262 10 is_stmt 0 view .LVU891
 2755 066a 4A68     		ldr	r2, [r1, #4]	@ float
 2756              	.LBE499:
 2757              	.LBE502:
1303:Src/app.c     ****     app_transform(t, vertex[i]);
 2758              		.loc 1 1303 18 discriminator 1 view .LVU892
 2759 066c 042C     		cmp	r4, #4
 2760              	.LBB503:
 2761              	.LBB500:
1262:Src/app.c     **** }
 2762              		.loc 1 1262 10 view .LVU893
 2763 066e 5A60     		str	r2, [r3, #4]	@ float
1261:Src/app.c     ****     v[i] = r[i];
 2764              		.loc 1 1261 23 is_stmt 1 discriminator 3 view .LVU894
 2765              	.LVL225:
1261:Src/app.c     ****     v[i] = r[i];
 2766              		.loc 1 1261 17 discriminator 1 view .LVU895
1262:Src/app.c     **** }
 2767              		.loc 1 1262 5 view .LVU896
1262:Src/app.c     **** }
 2768              		.loc 1 1262 10 is_stmt 0 view .LVU897
 2769 0670 8A68     		ldr	r2, [r1, #8]	@ float
 2770              	.LBE500:
 2771              	.LBE503:
1303:Src/app.c     ****     app_transform(t, vertex[i]);
 2772              		.loc 1 1303 18 discriminator 1 view .LVU898
 2773 0672 03F10C03 		add	r3, r3, #12
 2774              	.LVL226:
 2775              	.LBB504:
 2776              	.LBB501:
1262:Src/app.c     **** }
 2777              		.loc 1 1262 10 view .LVU899
 2778 0676 43F8042C 		str	r2, [r3, #-4]	@ float
1261:Src/app.c     ****     v[i] = r[i];
 2779              		.loc 1 1261 23 is_stmt 1 discriminator 3 view .LVU900
 2780              	.LVL227:
1261:Src/app.c     ****     v[i] = r[i];
 2781              		.loc 1 1261 17 discriminator 1 view .LVU901
1261:Src/app.c     ****     v[i] = r[i];
 2782              		.loc 1 1261 17 is_stmt 0 discriminator 1 view .LVU902
 2783              	.LBE501:
 2784              	.LBE504:
1303:Src/app.c     ****     app_transform(t, vertex[i]);
 2785              		.loc 1 1303 24 is_stmt 1 discriminator 3 view .LVU903
1303:Src/app.c     ****     app_transform(t, vertex[i]);
 2786              		.loc 1 1303 18 discriminator 1 view .LVU904
 2787 067a D6D1     		bne	.L91
1305:Src/app.c     ****                      vertex[2][0], vertex[2][1], vertex[3][0], vertex[3][1]);
 2788              		.loc 1 1305 3 view .LVU905
 2789 067c DDED613A 		vldr.32	s7, [sp, #388]
 2790 0680 9DED603A 		vldr.32	s6, [sp, #384]
 2791 0684 DDED5E2A 		vldr.32	s5, [sp, #376]
ARM GAS  /tmp/ccHyRziO.s 			page 118


 2792 0688 9DED5D2A 		vldr.32	s4, [sp, #372]
 2793 068c DDED5B1A 		vldr.32	s3, [sp, #364]
 2794 0690 9DED5A1A 		vldr.32	s2, [sp, #360]
 2795 0694 DDED580A 		vldr.32	s1, [sp, #352]
 2796 0698 9DED570A 		vldr.32	s0, [sp, #348]
 2797 069c FFF7FEFF 		bl	nema_blit_quad_fit
 2798              	.LVL228:
1308:Src/app.c     ****   nema_cl_wait(&cl);
 2799              		.loc 1 1308 3 view .LVU906
 2800 06a0 1A48     		ldr	r0, .L148+68
 2801 06a2 FFF7FEFF 		bl	nema_cl_submit
 2802              	.LVL229:
1309:Src/app.c     ****   HAL_ICACHE_Invalidate();
 2803              		.loc 1 1309 3 view .LVU907
 2804 06a6 1948     		ldr	r0, .L148+68
 2805 06a8 FFF7FEFF 		bl	nema_cl_wait
 2806              	.LVL230:
1310:Src/app.c     **** 
 2807              		.loc 1 1310 3 view .LVU908
 2808 06ac FFF7FEFF 		bl	HAL_ICACHE_Invalidate
 2809              	.LVL231:
1312:Src/app.c     **** 
 2810              		.loc 1 1312 3 view .LVU909
 2811 06b0 FFF7FEFF 		bl	nema_get_error
 2812              	.LVL232:
1312:Src/app.c     **** 
 2813              		.loc 1 1312 3 is_stmt 0 discriminator 1 view .LVU910
 2814 06b4 0546     		mov	r5, r0
 2815 06b6 78B3     		cbz	r0, .L92
 2816 06b8 4FF4A461 		mov	r1, #1312
 2817 06bc 144B     		ldr	r3, .L148+72
 2818 06be 0F4A     		ldr	r2, .L148+52
 2819 06c0 BCE4     		b	.L145
 2820              	.L149:
 2821 06c2 00BFAFF3 		.align	3
 2821      0080
 2822              	.L148:
 2823 06c8 182D4454 		.word	1413754136
 2824 06cc FB210940 		.word	1074340347
 2825 06d0 182D4454 		.word	1413754136
 2826 06d4 FB211940 		.word	1075388923
 2827 06d8 66662640 		.word	1076258406
 2828 06dc 00ED00E0 		.word	-536810240
 2829 06e0 00000000 		.word	.LC4
 2830 06e4 00000000 		.word	__func__.7
 2831 06e8 00000000 		.word	rois
 2832 06ec 00701700 		.word	1536000
 2833 06f0 00882600 		.word	lcd_bg_buffer
 2834 06f4 00000000 		.word	hgfxmmu
 2835 06f8 35010000 		.word	.LC15
 2836 06fc 00000000 		.word	__func__.6
 2837 0700 E12E6542 		.word	1113927393
 2838 0704 00006043 		.word	1130364928
 2839 0708 0000E042 		.word	1121976320
 2840 070c 00000000 		.word	cl
 2841 0710 10010000 		.word	.LC13
 2842 0714 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccHyRziO.s 			page 119


 2843              	.L92:
1314:Src/app.c     **** }
 2844              		.loc 1 1314 3 is_stmt 1 view .LVU911
 2845              	.LVL233:
1314:Src/app.c     **** }
 2846              		.loc 1 1314 3 is_stmt 0 view .LVU912
 2847              	.LBE505:
 2848              	.LBE506:
1332:Src/app.c     ****   if (is_clamped)
 2849              		.loc 1 1332 3 is_stmt 1 view .LVU913
1332:Src/app.c     ****   if (is_clamped)
 2850              		.loc 1 1332 3 view .LVU914
1332:Src/app.c     ****   if (is_clamped)
 2851              		.loc 1 1332 3 discriminator 1 view .LVU915
 2852              	.LBB507:
 2853              	.LBI507:
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean by address
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache for the given address
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (volatile void *addr, int32_t dsize)
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean and Invalidate by address
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and invalidates D_Cache for the given address
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
ARM GAS  /tmp/ccHyRziO.s 			page 120


 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 2854              		.loc 3 418 27 view .LVU916
 2855              	.LBB508:
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 2856              		.loc 3 421 5 view .LVU917
 2857              		.loc 3 421 8 is_stmt 0 view .LVU918
 2858 0718 049B     		ldr	r3, [sp, #16]
 2859 071a 002B     		cmp	r3, #0
 2860 071c 1CDD     		ble	.L93
 2861              	.LBB509:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2862              		.loc 3 422 8 is_stmt 1 view .LVU919
 2863              		.loc 3 422 52 is_stmt 0 view .LVU920
 2864 071e 06F01F02 		and	r2, r6, #31
 2865              		.loc 3 422 32 view .LVU921
 2866 0722 1A44     		add	r2, r2, r3
 2867              	.LVL234:
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2868              		.loc 3 423 7 is_stmt 1 view .LVU922
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2869              		.loc 3 425 7 view .LVU923
 2870              	.LBB510:
 2871              	.LBI510:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2872              		.loc 4 269 27 view .LVU924
 2873              	.LBB511:
 2874              		.loc 4 271 3 view .LVU925
 2875              		.syntax unified
 2876              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2877 0724 BFF34F8F 		dsb 0xF
 2878              	@ 0 "" 2
 2879              		.thumb
 2880              		.syntax unified
 2881              	.LBE511:
 2882              	.LBE510:
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2883              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU926
 2884 0728 F343     		mvns	r3, r6
 2885 072a B418     		adds	r4, r6, r2
 2886 072c 2344     		add	r3, r3, r4
 2887 072e 203A     		subs	r2, r2, #32
 2888              	.LVL235:
 2889              		.loc 3 431 25 discriminator 1 view .LVU927
 2890 0730 5B09     		lsrs	r3, r3, #5
 2891 0732 2032     		adds	r2, r2, #32
 2892              	.LVL236:
 2893              		.loc 3 431 25 discriminator 1 view .LVU928
ARM GAS  /tmp/ccHyRziO.s 			page 121


 2894 0734 03F1010E 		add	lr, r3, #1
 2895 0738 D8BF     		it	le
 2896 073a 4FF0010E 		movle	lr, #1
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2897              		.loc 3 423 16 view .LVU929
 2898 073e 3146     		mov	r1, r6
 2899 0740 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2900              		.loc 3 428 23 view .LVU930
 2901 0744 C048     		ldr	r0, .L150+24
 2902              	.LVL237:
 2903              	.L94:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 2904              		.loc 3 427 7 is_stmt 1 view .LVU931
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2905              		.loc 3 428 9 view .LVU932
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2906              		.loc 3 428 23 is_stmt 0 view .LVU933
 2907 0746 C0F87012 		str	r1, [r0, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2908              		.loc 3 429 9 is_stmt 1 view .LVU934
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2909              		.loc 3 429 17 is_stmt 0 view .LVU935
 2910 074a 2031     		adds	r1, r1, #32
 2911              	.LVL238:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2912              		.loc 3 430 9 is_stmt 1 view .LVU936
 2913              		.loc 3 431 25 discriminator 1 view .LVU937
 2914 074c 0FF005C8 		le	lr, .L94
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2915              		.loc 3 433 7 view .LVU938
 2916              	.LBB512:
 2917              	.LBI512:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2918              		.loc 4 269 27 view .LVU939
 2919              	.LBB513:
 2920              		.loc 4 271 3 view .LVU940
 2921              		.syntax unified
 2922              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2923 0750 BFF34F8F 		dsb 0xF
 2924              	@ 0 "" 2
 2925              		.thumb
 2926              		.syntax unified
 2927              	.LBE513:
 2928              	.LBE512:
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2929              		.loc 3 434 7 view .LVU941
 2930              	.LBB514:
 2931              	.LBI514:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2932              		.loc 4 258 27 view .LVU942
 2933              	.LBB515:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2934              		.loc 4 260 3 view .LVU943
 2935              		.syntax unified
 2936              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccHyRziO.s 			page 122


 2937 0754 BFF36F8F 		isb 0xF
 2938              	@ 0 "" 2
 2939              	.LVL239:
 2940              		.thumb
 2941              		.syntax unified
 2942              	.L93:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2943              		.loc 4 260 3 is_stmt 0 view .LVU944
 2944              	.LBE515:
 2945              	.LBE514:
 2946              	.LBE509:
 2947              	.LBE508:
 2948              	.LBE507:
1332:Src/app.c     ****   if (is_clamped)
 2949              		.loc 1 1332 3 is_stmt 1 discriminator 3 view .LVU945
1333:Src/app.c     ****     return 0;
 2950              		.loc 1 1333 3 view .LVU946
1336:Src/app.c     **** 
 2951              		.loc 1 1336 3 view .LVU947
 2952 0758 BC48     		ldr	r0, .L150+28
 2953 075a FFF7FEFF 		bl	LL_ATON_RT_Main
 2954              	.LVL240:
1338:Src/app.c     **** 
 2955              		.loc 1 1338 3 view .LVU948
1338:Src/app.c     **** 
 2956              		.loc 1 1338 14 is_stmt 0 view .LVU949
 2957 075e 4146     		mov	r1, r8
 2958 0760 5846     		mov	r0, fp
 2959 0762 BB4A     		ldr	r2, .L150+32
 2960 0764 FFF7FEFF 		bl	ld_post_process
 2961              	.LVL241:
 2962              	.LBB516:
 2963              	.LBB517:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2964              		.loc 3 362 52 view .LVU950
 2965 0768 0BF01F03 		and	r3, fp, #31
 2966              	.LBE517:
 2967              	.LBE516:
1338:Src/app.c     **** 
 2968              		.loc 1 1338 14 view .LVU951
 2969 076c 0446     		mov	r4, r0
 2970              	.LVL242:
1341:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2971              		.loc 1 1341 3 is_stmt 1 view .LVU952
1341:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2972              		.loc 1 1341 3 view .LVU953
1341:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2973              		.loc 1 1341 3 discriminator 1 view .LVU954
 2974              	.LBB525:
 2975              	.LBI516:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2976              		.loc 3 358 27 view .LVU955
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2977              		.loc 3 361 5 view .LVU956
 2978              	.LBB524:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2979              		.loc 3 362 8 view .LVU957
ARM GAS  /tmp/ccHyRziO.s 			page 123


 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2980              		.loc 3 362 36 is_stmt 0 view .LVU958
 2981 076e 5846     		mov	r0, fp
 2982              	.LVL243:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2983              		.loc 3 363 7 is_stmt 1 view .LVU959
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2984              		.loc 3 365 7 view .LVU960
 2985              	.LBB518:
 2986              	.LBI518:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2987              		.loc 4 269 27 view .LVU961
 2988              	.LBB519:
 2989              		.loc 4 271 3 view .LVU962
 2990              		.syntax unified
 2991              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2992 0770 BFF34F8F 		dsb 0xF
 2993              	@ 0 "" 2
 2994              		.thumb
 2995              		.syntax unified
 2996 0774 D91C     		adds	r1, r3, #3
 2997 0776 1C3B     		subs	r3, r3, #28
 2998 0778 4909     		lsrs	r1, r1, #5
 2999 077a 2033     		adds	r3, r3, #32
 3000 077c 01F1010E 		add	lr, r1, #1
 3001 0780 D8BF     		it	le
 3002 0782 4FF0010E 		movle	lr, #1
 3003 0786 4EF001E0 		dls	lr, lr
 3004              	.LBE519:
 3005              	.LBE518:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3006              		.loc 3 368 22 is_stmt 0 view .LVU963
 3007 078a AF4A     		ldr	r2, .L150+24
 3008              	.LVL244:
 3009              	.L95:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 3010              		.loc 3 367 7 is_stmt 1 view .LVU964
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3011              		.loc 3 368 9 view .LVU965
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3012              		.loc 3 368 22 is_stmt 0 view .LVU966
 3013 078c C2F85C02 		str	r0, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3014              		.loc 3 369 9 is_stmt 1 view .LVU967
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3015              		.loc 3 369 17 is_stmt 0 view .LVU968
 3016 0790 2030     		adds	r0, r0, #32
 3017              	.LVL245:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3018              		.loc 3 370 9 is_stmt 1 view .LVU969
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3019              		.loc 3 371 25 discriminator 1 view .LVU970
 3020 0792 0FF005C8 		le	lr, .L95
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3021              		.loc 3 373 7 view .LVU971
 3022              	.LBB520:
 3023              	.LBI520:
ARM GAS  /tmp/ccHyRziO.s 			page 124


 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3024              		.loc 4 269 27 view .LVU972
 3025              	.LBB521:
 3026              		.loc 4 271 3 view .LVU973
 3027              		.syntax unified
 3028              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3029 0796 BFF34F8F 		dsb 0xF
 3030              	@ 0 "" 2
 3031              		.thumb
 3032              		.syntax unified
 3033              	.LBE521:
 3034              	.LBE520:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 3035              		.loc 3 374 7 view .LVU974
 3036              	.LBB522:
 3037              	.LBI522:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3038              		.loc 4 258 27 view .LVU975
 3039              	.LBB523:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3040              		.loc 4 260 3 view .LVU976
 3041              		.syntax unified
 3042              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3043 079a BFF36F8F 		isb 0xF
 3044              	@ 0 "" 2
 3045              	.LVL246:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3046              		.loc 4 260 3 is_stmt 0 view .LVU977
 3047              		.thumb
 3048              		.syntax unified
 3049              	.LBE523:
 3050              	.LBE522:
 3051              	.LBE524:
 3052              	.LBE525:
1341:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 3053              		.loc 1 1341 3 is_stmt 1 discriminator 3 view .LVU978
1342:Src/app.c     **** 
 3054              		.loc 1 1342 3 view .LVU979
1342:Src/app.c     **** 
 3055              		.loc 1 1342 3 view .LVU980
1342:Src/app.c     **** 
 3056              		.loc 1 1342 3 discriminator 1 view .LVU981
 3057              	.LBB526:
 3058              	.LBI526:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3059              		.loc 3 358 27 view .LVU982
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3060              		.loc 3 361 5 view .LVU983
 3061              	.LBB527:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3062              		.loc 3 362 8 view .LVU984
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3063              		.loc 3 362 36 is_stmt 0 view .LVU985
 3064 079e 4346     		mov	r3, r8
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3065              		.loc 3 362 52 view .LVU986
 3066 07a0 08F01F0E 		and	lr, r8, #31
ARM GAS  /tmp/ccHyRziO.s 			page 125


 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3067              		.loc 3 363 7 is_stmt 1 view .LVU987
 3068              	.LVL247:
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3069              		.loc 3 365 7 view .LVU988
 3070              	.LBB528:
 3071              	.LBI528:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3072              		.loc 4 269 27 view .LVU989
 3073              	.LBB529:
 3074              		.loc 4 271 3 view .LVU990
 3075              		.syntax unified
 3076              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3077 07a4 BFF34F8F 		dsb 0xF
 3078              	@ 0 "" 2
 3079              		.thumb
 3080              		.syntax unified
 3081 07a8 0EF1FB0E 		add	lr, lr, #251
 3082 07ac 4FEA5E1E 		lsr	lr, lr, #5
 3083 07b0 0EF1010E 		add	lr, lr, #1
 3084 07b4 4EF001E0 		dls	lr, lr
 3085              	.LVL248:
 3086              	.L96:
 3087              		.loc 4 271 3 is_stmt 0 view .LVU991
 3088              	.LBE529:
 3089              	.LBE528:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 3090              		.loc 3 367 7 is_stmt 1 view .LVU992
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3091              		.loc 3 368 9 view .LVU993
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3092              		.loc 3 368 22 is_stmt 0 view .LVU994
 3093 07b8 C2F85C32 		str	r3, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3094              		.loc 3 369 9 is_stmt 1 view .LVU995
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3095              		.loc 3 369 17 is_stmt 0 view .LVU996
 3096 07bc 2033     		adds	r3, r3, #32
 3097              	.LVL249:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3098              		.loc 3 370 9 is_stmt 1 view .LVU997
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3099              		.loc 3 371 25 discriminator 1 view .LVU998
 3100 07be 0FF005C8 		le	lr, .L96
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3101              		.loc 3 373 7 view .LVU999
 3102              	.LBB530:
 3103              	.LBI530:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3104              		.loc 4 269 27 view .LVU1000
 3105              	.LBB531:
 3106              		.loc 4 271 3 view .LVU1001
 3107              		.syntax unified
 3108              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3109 07c2 BFF34F8F 		dsb 0xF
 3110              	@ 0 "" 2
 3111              		.thumb
ARM GAS  /tmp/ccHyRziO.s 			page 126


 3112              		.syntax unified
 3113              	.LBE531:
 3114              	.LBE530:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 3115              		.loc 3 374 7 view .LVU1002
 3116              	.LBB532:
 3117              	.LBI532:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3118              		.loc 4 258 27 view .LVU1003
 3119              	.LBB533:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3120              		.loc 4 260 3 view .LVU1004
 3121              		.syntax unified
 3122              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3123 07c6 BFF36F8F 		isb 0xF
 3124              	@ 0 "" 2
 3125              	.LVL250:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3126              		.loc 4 260 3 is_stmt 0 view .LVU1005
 3127              		.thumb
 3128              		.syntax unified
 3129              	.LBE533:
 3130              	.LBE532:
 3131              	.LBE527:
 3132              	.LBE526:
 3133              	.LBE534:
 3134              	.LBE535:
1552:Src/app.c     **** 
 3135              		.loc 1 1552 7 is_stmt 1 view .LVU1006
1552:Src/app.c     **** 
 3136              		.loc 1 1552 7 view .LVU1007
1552:Src/app.c     **** 
 3137              		.loc 1 1552 7 discriminator 1 view .LVU1008
 3138              	.LBB536:
 3139              	.LBI536:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3140              		.loc 3 358 27 view .LVU1009
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3141              		.loc 3 361 5 view .LVU1010
 3142              	.LBB537:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3143              		.loc 3 362 8 view .LVU1011
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3144              		.loc 3 363 7 view .LVU1012
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3145              		.loc 3 365 7 view .LVU1013
 3146              	.LBB538:
 3147              	.LBI538:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3148              		.loc 4 269 27 view .LVU1014
 3149              	.LBB539:
 3150              		.loc 4 271 3 view .LVU1015
 3151              		.syntax unified
 3152              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3153 07ca BFF34F8F 		dsb 0xF
 3154              	@ 0 "" 2
 3155              		.thumb
ARM GAS  /tmp/ccHyRziO.s 			page 127


 3156              		.syntax unified
 3157              	.LBE539:
 3158              	.LBE538:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3159              		.loc 3 368 22 is_stmt 0 view .LVU1016
 3160 07ce 4BF6803E 		movw	lr, #48000
 3161 07d2 4EF001E0 		dls	lr, lr
 3162 07d6 9C4B     		ldr	r3, .L150+24
 3163              	.LVL251:
 3164              	.L97:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 3165              		.loc 3 367 7 is_stmt 1 view .LVU1017
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3166              		.loc 3 368 9 view .LVU1018
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3167              		.loc 3 368 22 is_stmt 0 view .LVU1019
 3168 07d8 C3F85CA2 		str	r10, [r3, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3169              		.loc 3 369 9 is_stmt 1 view .LVU1020
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3170              		.loc 3 369 17 is_stmt 0 view .LVU1021
 3171 07dc 0AF1200A 		add	r10, r10, #32
 3172              	.LVL252:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3173              		.loc 3 370 9 is_stmt 1 view .LVU1022
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3174              		.loc 3 371 25 discriminator 1 view .LVU1023
 3175 07e0 0FF007C0 		le	lr, .L97
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3176              		.loc 3 373 7 view .LVU1024
 3177              	.LBB540:
 3178              	.LBI540:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3179              		.loc 4 269 27 view .LVU1025
 3180              	.LBB541:
 3181              		.loc 4 271 3 view .LVU1026
 3182              		.syntax unified
 3183              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3184 07e4 BFF34F8F 		dsb 0xF
 3185              	@ 0 "" 2
 3186              		.thumb
 3187              		.syntax unified
 3188              	.LBE541:
 3189              	.LBE540:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 3190              		.loc 3 374 7 view .LVU1027
 3191              	.LBB542:
 3192              	.LBI542:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3193              		.loc 4 258 27 view .LVU1028
 3194              	.LBB543:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3195              		.loc 4 260 3 view .LVU1029
 3196              		.syntax unified
 3197              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3198 07e8 BFF36F8F 		isb 0xF
 3199              	@ 0 "" 2
ARM GAS  /tmp/ccHyRziO.s 			page 128


 3200              	.LVL253:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3201              		.loc 4 260 3 is_stmt 0 view .LVU1030
 3202              		.thumb
 3203              		.syntax unified
 3204              	.LBE543:
 3205              	.LBE542:
 3206              	.LBE537:
 3207              	.LBE536:
1552:Src/app.c     **** 
 3208              		.loc 1 1552 7 is_stmt 1 discriminator 3 view .LVU1031
1555:Src/app.c     ****         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
 3209              		.loc 1 1555 7 view .LVU1032
1555:Src/app.c     ****         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
 3210              		.loc 1 1555 10 is_stmt 0 view .LVU1033
 3211 07ec 002C     		cmp	r4, #0
 3212 07ee 00F0C080 		beq	.L98
 3213              	.LBB544:
 3214              	.LBB545:
1456:Src/app.c     **** 
 3215              		.loc 1 1456 5 view .LVU1034
 3216 07f2 DFF85CA2 		ldr	r10, .L150+32
 3217 07f6 DFF87C92 		ldr	r9, .L150+68
 3218              	.L99:
1456:Src/app.c     **** 
 3219              		.loc 1 1456 5 is_stmt 1 view .LVU1035
 3220 07fa 57AB     		add	r3, sp, #348
 3221 07fc 5A19     		adds	r2, r3, r5
 3222 07fe 0AEB0501 		add	r1, r10, r5
 3223 0802 4846     		mov	r0, r9
1455:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
 3224              		.loc 1 1455 17 is_stmt 0 discriminator 1 view .LVU1036
 3225 0804 0835     		adds	r5, r5, #8
1456:Src/app.c     **** 
 3226              		.loc 1 1456 5 view .LVU1037
 3227 0806 FFF7FEFF 		bl	decode_ld_landmark
 3228              	.LVL254:
1455:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
 3229              		.loc 1 1455 36 is_stmt 1 discriminator 3 view .LVU1038
1455:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
 3230              		.loc 1 1455 17 discriminator 1 view .LVU1039
 3231 080a A82D     		cmp	r5, #168
 3232 080c F5D1     		bne	.L99
1458:Src/app.c     ****   roi_shift_and_scale(&roi, shift_x, shift_y, scale, scale);
 3233              		.loc 1 1458 3 view .LVU1040
 3234              	.LVL255:
 3235              	.LBB546:
 3236              	.LBI546:
1405:Src/app.c     **** {
 3237              		.loc 1 1405 13 view .LVU1041
 3238              	.LBB547:
1407:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
 3239              		.loc 1 1407 3 view .LVU1042
1407:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
 3240              		.loc 1 1407 13 is_stmt 0 view .LVU1043
 3241 080e 914D     		ldr	r5, .L150+36
 3242 0810 0DF19C0C 		add	ip, sp, #156
ARM GAS  /tmp/ccHyRziO.s 			page 129


 3243 0814 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3244 0816 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 3245 081a 95E80700 		ldm	r5, {r0, r1, r2}
1408:Src/app.c     ****   float max_x, max_y, min_x, min_y;
 3246              		.loc 1 1408 13 view .LVU1044
 3247 081e 0C35     		adds	r5, r5, #12
1407:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
 3248              		.loc 1 1407 13 view .LVU1045
 3249 0820 8CE80700 		stm	ip, {r0, r1, r2}
1408:Src/app.c     ****   float max_x, max_y, min_x, min_y;
 3250              		.loc 1 1408 3 is_stmt 1 view .LVU1046
1408:Src/app.c     ****   float max_x, max_y, min_x, min_y;
 3251              		.loc 1 1408 13 is_stmt 0 view .LVU1047
 3252 0824 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3253 0826 0DF1B80C 		add	ip, sp, #184
 3254 082a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 3255 082e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3256 0830 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 3257 0834 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 3258              	.LBB548:
 3259              	.LBB549:
1396:Src/app.c     **** 
 3260              		.loc 1 1396 39 view .LVU1048
 3261 0838 9DED587A 		vldr.32	s14, [sp, #352]
 3262 083c 9DED6A0A 		vldr.32	s0, [sp, #424]
1396:Src/app.c     **** 
 3263              		.loc 1 1396 27 view .LVU1049
 3264 0840 DDED577A 		vldr.32	s15, [sp, #348]
1396:Src/app.c     **** 
 3265              		.loc 1 1396 39 view .LVU1050
 3266 0844 30EE470A 		vsub.f32	s0, s0, s14
1396:Src/app.c     **** 
 3267              		.loc 1 1396 27 view .LVU1051
 3268 0848 DDED690A 		vldr.32	s1, [sp, #420]
 3269              	.LBE549:
 3270              	.LBE548:
1408:Src/app.c     ****   float max_x, max_y, min_x, min_y;
 3271              		.loc 1 1408 13 view .LVU1052
 3272 084c 8CE80F00 		stm	ip, {r0, r1, r2, r3}
1409:Src/app.c     ****   int i;
 3273              		.loc 1 1409 3 is_stmt 1 view .LVU1053
1410:Src/app.c     **** 
 3274              		.loc 1 1410 3 view .LVU1054
1412:Src/app.c     ****   min_x = min_y =  10000;
 3275              		.loc 1 1412 3 view .LVU1055
 3276              	.LVL256:
1413:Src/app.c     **** 
 3277              		.loc 1 1413 3 view .LVU1056
1415:Src/app.c     **** 
 3278              		.loc 1 1415 3 view .LVU1057
 3279              	.LBB561:
 3280              	.LBI548:
1386:Src/app.c     **** {
 3281              		.loc 1 1386 14 view .LVU1058
 3282              	.LBB558:
1388:Src/app.c     ****   float rotation;
 3283              		.loc 1 1388 3 view .LVU1059
ARM GAS  /tmp/ccHyRziO.s 			page 130


1389:Src/app.c     **** 
 3284              		.loc 1 1389 3 view .LVU1060
1391:Src/app.c     ****   y0 = lm[0].y;
 3285              		.loc 1 1391 3 view .LVU1061
1392:Src/app.c     ****   x1 = lm[9].x;
 3286              		.loc 1 1392 3 view .LVU1062
1393:Src/app.c     ****   y1 = lm[9].y;
 3287              		.loc 1 1393 3 view .LVU1063
1394:Src/app.c     **** 
 3288              		.loc 1 1394 3 view .LVU1064
1396:Src/app.c     **** 
 3289              		.loc 1 1396 3 view .LVU1065
1396:Src/app.c     **** 
 3290              		.loc 1 1396 27 is_stmt 0 view .LVU1066
 3291 0850 70EEE70A 		vsub.f32	s1, s1, s15
 3292              	.LVL257:
1396:Src/app.c     **** 
 3293              		.loc 1 1396 27 view .LVU1067
 3294 0854 B1EE400A 		vneg.f32	s0, s0
 3295 0858 FFF7FEFF 		bl	atan2f
 3296              	.LVL258:
1398:Src/app.c     **** }
 3297              		.loc 1 1398 3 is_stmt 1 view .LVU1068
 3298              	.LBB550:
 3299              	.LBI550:
 359:Src/app.c     **** {
 3300              		.loc 1 359 14 view .LVU1069
 3301              	.LBB551:
 361:Src/app.c     **** }
 3302              		.loc 1 361 3 view .LVU1070
 3303              	.LBE551:
 3304              	.LBE550:
1396:Src/app.c     **** 
 3305              		.loc 1 1396 25 is_stmt 0 discriminator 1 view .LVU1071
 3306 085c 9FED747B 		vldr.64	d7, .L150
1396:Src/app.c     **** 
 3307              		.loc 1 1396 27 discriminator 1 view .LVU1072
 3308 0860 B7EEC00A 		vcvt.f64.f32	d0, s0
 3309              	.LVL259:
1396:Src/app.c     **** 
 3310              		.loc 1 1396 25 discriminator 1 view .LVU1073
 3311 0864 37EE407B 		vsub.f64	d7, d7, d0
1396:Src/app.c     **** 
 3312              		.loc 1 1396 12 discriminator 1 view .LVU1074
 3313 0868 B7EEC77B 		vcvt.f32.f64	s14, d7
 3314              	.LVL260:
 3315              	.LBB555:
 3316              	.LBB552:
 361:Src/app.c     **** }
 3317              		.loc 1 361 43 view .LVU1075
 3318 086c 9FED724B 		vldr.64	d4, .L150+8
 361:Src/app.c     **** }
 3319              		.loc 1 361 16 view .LVU1076
 3320 0870 B7EEC77A 		vcvt.f64.f32	d7, s14
 3321              	.LVL261:
 361:Src/app.c     **** }
 3322              		.loc 1 361 54 view .LVU1077
ARM GAS  /tmp/ccHyRziO.s 			page 131


 3323 0874 9FED725B 		vldr.64	d5, .L150+16
 361:Src/app.c     **** }
 3324              		.loc 1 361 43 view .LVU1078
 3325 0878 37EE044B 		vadd.f64	d4, d7, d4
 361:Src/app.c     **** }
 3326              		.loc 1 361 54 view .LVU1079
 3327 087c 84EE056B 		vdiv.f64	d6, d4, d5
 361:Src/app.c     **** }
 3328              		.loc 1 361 29 view .LVU1080
 3329 0880 B7EEC66B 		vcvt.f32.f64	s12, d6
 3330 0884 BBFE466A 		vrintm.f32	s12, s12
 361:Src/app.c     **** }
 3331              		.loc 1 361 29 discriminator 1 view .LVU1081
 3332 0888 B7EEC66A 		vcvt.f64.f32	d6, s12
 361:Src/app.c     **** }
 3333              		.loc 1 361 16 discriminator 1 view .LVU1082
 3334 088c A6EE457B 		vfms.f64	d7, d6, d5
 3335              	.LVL262:
 361:Src/app.c     **** }
 3336              		.loc 1 361 16 discriminator 1 view .LVU1083
 3337              	.LBE552:
 3338              	.LBE555:
 3339              	.LBE558:
 3340              	.LBE561:
1413:Src/app.c     **** 
 3341              		.loc 1 1413 17 view .LVU1084
 3342 0890 DFED716A 		vldr.32	s13, .L150+40
 3343              	.LBB562:
 3344              	.LBB559:
 3345              	.LBB556:
 3346              	.LBB553:
 361:Src/app.c     **** }
 3347              		.loc 1 361 16 discriminator 1 view .LVU1085
 3348 0894 B7EEC77B 		vcvt.f32.f64	s14, d7
 3349              	.LBE553:
 3350              	.LBE556:
 3351              	.LBE559:
 3352              	.LBE562:
1412:Src/app.c     ****   min_x = min_y =  10000;
 3353              		.loc 1 1412 17 view .LVU1086
 3354 0898 DFED707A 		vldr.32	s15, .L150+44
 3355              	.LBB563:
 3356              	.LBB560:
 3357              	.LBB557:
 3358              	.LBB554:
 361:Src/app.c     **** }
 3359              		.loc 1 361 16 discriminator 1 view .LVU1087
 3360 089c 8DED207A 		vstr.32	s14, [sp, #128]
 3361              	.LBE554:
 3362              	.LBE557:
 3363              	.LBE560:
 3364              	.LBE563:
1417:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
 3365              		.loc 1 1417 3 is_stmt 1 view .LVU1088
 3366              	.LVL263:
1417:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
 3367              		.loc 1 1417 17 discriminator 1 view .LVU1089
ARM GAS  /tmp/ccHyRziO.s 			page 132


1413:Src/app.c     **** 
 3368              		.loc 1 1413 9 is_stmt 0 view .LVU1090
 3369 08a0 B0EE666A 		vmov.f32	s12, s13
1412:Src/app.c     ****   min_x = min_y =  10000;
 3370              		.loc 1 1412 9 view .LVU1091
 3371 08a4 B0EE677A 		vmov.f32	s14, s15
 3372 08a8 0C21     		movs	r1, #12
 3373 08aa 2EAB     		add	r3, sp, #184
 3374              	.LVL264:
 3375              	.L108:
1418:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
 3376              		.loc 1 1418 5 is_stmt 1 view .LVU1092
1418:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
 3377              		.loc 1 1418 13 is_stmt 0 view .LVU1093
 3378 08ac 53F8042B 		ldr	r2, [r3], #4
 3379 08b0 57A8     		add	r0, sp, #348
 3380              	.LVL265:
1418:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
 3381              		.loc 1 1418 13 view .LVU1094
 3382 08b2 00EBC202 		add	r2, r0, r2, lsl #3
 3383 08b6 92ED005A 		vldr.32	s10, [r2]
1419:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
 3384              		.loc 1 1419 13 view .LVU1095
 3385 08ba D2ED015A 		vldr.32	s11, [r2, #4]
1418:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
 3386              		.loc 1 1418 13 discriminator 2 view .LVU1096
 3387 08be B4EEC57A 		vcmpe.f32	s14, s10
 3388 08c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1419:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
 3389              		.loc 1 1419 13 discriminator 2 view .LVU1097
 3390 08c6 F4EEE57A 		vcmpe.f32	s15, s11
1418:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
 3391              		.loc 1 1418 13 discriminator 2 view .LVU1098
 3392 08ca 37FE057A 		vselgt.f32	s14, s14, s10
 3393              	.LVL266:
1419:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
 3394              		.loc 1 1419 5 is_stmt 1 view .LVU1099
1419:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
 3395              		.loc 1 1419 13 is_stmt 0 discriminator 2 view .LVU1100
 3396 08ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1420:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
 3397              		.loc 1 1420 13 discriminator 2 view .LVU1101
 3398 08d2 B4EEC65A 		vcmpe.f32	s10, s12
1419:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
 3399              		.loc 1 1419 13 discriminator 2 view .LVU1102
 3400 08d6 77FEA57A 		vselgt.f32	s15, s15, s11
 3401              	.LVL267:
1420:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
 3402              		.loc 1 1420 5 is_stmt 1 view .LVU1103
1420:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
 3403              		.loc 1 1420 13 is_stmt 0 discriminator 2 view .LVU1104
 3404 08da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1421:Src/app.c     ****   }
 3405              		.loc 1 1421 13 discriminator 2 view .LVU1105
 3406 08de F4EEE65A 		vcmpe.f32	s11, s13
1420:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
 3407              		.loc 1 1420 13 discriminator 2 view .LVU1106
ARM GAS  /tmp/ccHyRziO.s 			page 133


 3408 08e2 36FE056A 		vselgt.f32	s12, s12, s10
 3409              	.LVL268:
1421:Src/app.c     ****   }
 3410              		.loc 1 1421 5 is_stmt 1 view .LVU1107
1421:Src/app.c     ****   }
 3411              		.loc 1 1421 13 is_stmt 0 discriminator 2 view .LVU1108
 3412 08e6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3413 08ea 76FEA56A 		vselgt.f32	s13, s13, s11
 3414              	.LVL269:
1417:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
 3415              		.loc 1 1417 39 is_stmt 1 discriminator 2 view .LVU1109
1417:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
 3416              		.loc 1 1417 17 discriminator 1 view .LVU1110
 3417 08ee 0139     		subs	r1, r1, #1
 3418 08f0 DCD1     		bne	.L108
1424:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
 3419              		.loc 1 1424 3 view .LVU1111
1424:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
 3420              		.loc 1 1424 20 is_stmt 0 view .LVU1112
 3421 08f2 37EE065A 		vadd.f32	s10, s14, s12
1425:Src/app.c     ****   roi->w = (max_x - min_x);
 3422              		.loc 1 1425 20 view .LVU1113
 3423 08f6 77EEA65A 		vadd.f32	s11, s15, s13
1424:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
 3424              		.loc 1 1424 29 view .LVU1114
 3425 08fa 25EE2A5A 		vmul.f32	s10, s10, s21
1425:Src/app.c     ****   roi->w = (max_x - min_x);
 3426              		.loc 1 1425 29 view .LVU1115
 3427 08fe 65EEAA5A 		vmul.f32	s11, s11, s21
1426:Src/app.c     ****   roi->h = (max_y - min_y);
 3428              		.loc 1 1426 19 view .LVU1116
 3429 0902 37EE467A 		vsub.f32	s14, s14, s12
 3430              	.LVL270:
1427:Src/app.c     **** 
 3431              		.loc 1 1427 19 view .LVU1117
 3432 0906 77EEE67A 		vsub.f32	s15, s15, s13
 3433              	.LVL271:
1427:Src/app.c     **** 
 3434              		.loc 1 1427 19 view .LVU1118
 3435 090a 4FF0070E 		mov	lr, #7
1424:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
 3436              		.loc 1 1424 11 view .LVU1119
 3437 090e 8DED1C5A 		vstr.32	s10, [sp, #112]
1425:Src/app.c     ****   roi->w = (max_x - min_x);
 3438              		.loc 1 1425 3 is_stmt 1 view .LVU1120
1425:Src/app.c     ****   roi->w = (max_x - min_x);
 3439              		.loc 1 1425 11 is_stmt 0 view .LVU1121
 3440 0912 CDED1D5A 		vstr.32	s11, [sp, #116]
1426:Src/app.c     ****   roi->h = (max_y - min_y);
 3441              		.loc 1 1426 3 is_stmt 1 view .LVU1122
1426:Src/app.c     ****   roi->h = (max_y - min_y);
 3442              		.loc 1 1426 10 is_stmt 0 view .LVU1123
 3443 0916 8DED1E7A 		vstr.32	s14, [sp, #120]
1427:Src/app.c     **** 
 3444              		.loc 1 1427 3 is_stmt 1 view .LVU1124
1427:Src/app.c     **** 
 3445              		.loc 1 1427 10 is_stmt 0 view .LVU1125
ARM GAS  /tmp/ccHyRziO.s 			page 134


 3446 091a CDED1F7A 		vstr.32	s15, [sp, #124]
1429:Src/app.c     ****   next_pd->y_center = roi->cy;
 3447              		.loc 1 1429 3 is_stmt 1 view .LVU1126
1429:Src/app.c     ****   next_pd->y_center = roi->cy;
 3448              		.loc 1 1429 21 is_stmt 0 view .LVU1127
 3449 091e 8DED225A 		vstr.32	s10, [sp, #136]
1430:Src/app.c     ****   next_pd->width = roi->w;
 3450              		.loc 1 1430 3 is_stmt 1 view .LVU1128
1430:Src/app.c     ****   next_pd->width = roi->w;
 3451              		.loc 1 1430 21 is_stmt 0 view .LVU1129
 3452 0922 CDED235A 		vstr.32	s11, [sp, #140]
1431:Src/app.c     ****   next_pd->height = roi->h;
 3453              		.loc 1 1431 3 is_stmt 1 view .LVU1130
1431:Src/app.c     ****   next_pd->height = roi->h;
 3454              		.loc 1 1431 18 is_stmt 0 view .LVU1131
 3455 0926 8DED247A 		vstr.32	s14, [sp, #144]
1432:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 3456              		.loc 1 1432 3 is_stmt 1 view .LVU1132
1432:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 3457              		.loc 1 1432 19 is_stmt 0 view .LVU1133
 3458 092a CDED257A 		vstr.32	s15, [sp, #148]
1433:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
 3459              		.loc 1 1433 3 is_stmt 1 view .LVU1134
 3460              	.LVL272:
1433:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
 3461              		.loc 1 1433 17 discriminator 1 view .LVU1135
 3462 092e 4EF001E0 		dls	lr, lr
 3463 0932 269A     		ldr	r2, [sp, #152]
 3464 0934 27AB     		add	r3, sp, #156
 3465              	.LVL273:
 3466              	.L109:
1434:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
 3467              		.loc 1 1434 5 view .LVU1136
1434:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
 3468              		.loc 1 1434 41 is_stmt 0 view .LVU1137
 3469 0936 53F8041B 		ldr	r1, [r3], #4
1434:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
 3470              		.loc 1 1434 28 view .LVU1138
 3471 093a 57A8     		add	r0, sp, #348
 3472              	.LVL274:
1434:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
 3473              		.loc 1 1434 28 view .LVU1139
 3474 093c 00EBC101 		add	r1, r0, r1, lsl #3
1434:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
 3475              		.loc 1 1434 24 view .LVU1140
 3476 0940 0868     		ldr	r0, [r1]	@ float
 3477              	.LVL275:
1435:Src/app.c     ****   }
 3478              		.loc 1 1435 24 view .LVU1141
 3479 0942 4968     		ldr	r1, [r1, #4]	@ float
1434:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
 3480              		.loc 1 1434 24 view .LVU1142
 3481 0944 1060     		str	r0, [r2]	@ float
1435:Src/app.c     ****   }
 3482              		.loc 1 1435 5 is_stmt 1 view .LVU1143
1435:Src/app.c     ****   }
 3483              		.loc 1 1435 24 is_stmt 0 view .LVU1144
ARM GAS  /tmp/ccHyRziO.s 			page 135


 3484 0946 5160     		str	r1, [r2, #4]	@ float
1433:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
 3485              		.loc 1 1433 49 is_stmt 1 discriminator 3 view .LVU1145
1433:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
 3486              		.loc 1 1433 17 discriminator 1 view .LVU1146
 3487 0948 0832     		adds	r2, r2, #8
 3488 094a 0FF00DC0 		le	lr, .L109
 3489              	.LVL276:
1433:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
 3490              		.loc 1 1433 17 is_stmt 0 discriminator 1 view .LVU1147
 3491              	.LBE547:
 3492              	.LBE546:
1459:Src/app.c     **** 
 3493              		.loc 1 1459 3 is_stmt 1 view .LVU1148
 3494 094e B0EE001A 		vmov.f32	s2, #2.0e+0
 3495 0952 1CA8     		add	r0, sp, #112
 3496 0954 F0EE410A 		vmov.f32	s1, s2
 3497 0958 9FED410A 		vldr.32	s0, .L150+48
 3498 095c FFF7FEFF 		bl	roi_shift_and_scale.constprop.0
 3499              	.LVL277:
1461:Src/app.c     **** }
 3500              		.loc 1 1461 3 view .LVU1149
1461:Src/app.c     **** }
 3501              		.loc 1 1461 9 is_stmt 0 view .LVU1150
 3502 0960 1CAD     		add	r5, sp, #112
 3503 0962 0DF15C0C 		add	ip, sp, #92
 3504 0966 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3505 0968 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 3506 096c 2B68     		ldr	r3, [r5]
 3507 096e CCF80030 		str	r3, [ip]
 3508              	.L98:
 3509              	.LBE545:
 3510              	.LBE544:
1557:Src/app.c     ****     } else {
 3511              		.loc 1 1557 7 is_stmt 1 view .LVU1151
1557:Src/app.c     ****     } else {
 3512              		.loc 1 1557 15 is_stmt 0 view .LVU1152
 3513 0972 FFF7FEFF 		bl	HAL_GetTick
 3514              	.LVL278:
1557:Src/app.c     ****     } else {
 3515              		.loc 1 1557 13 discriminator 1 view .LVU1153
 3516 0976 059B     		ldr	r3, [sp, #20]
 3517 0978 C01A     		subs	r0, r0, r3
 3518              	.LVL279:
 3519              	.L88:
1562:Src/app.c     **** 
 3520              		.loc 1 1562 5 is_stmt 1 view .LVU1154
1562:Src/app.c     **** 
 3521              		.loc 1 1562 60 is_stmt 0 view .LVU1155
 3522 097a 07EE900A 		vmov	s15, r0	@ int
 3523 097e F8EE677A 		vcvt.f32.u32	s15, s15
 3524 0982 E9EEAB7A 		vfma.f32	s15, s19, s23
1565:Src/app.c     ****     assert(ret == pdTRUE);
 3525              		.loc 1 1565 11 view .LVU1156
 3526 0986 374D     		ldr	r5, .L150+52
 3527 0988 4FF0FF31 		mov	r1, #-1
 3528 098c 686D     		ldr	r0, [r5, #84]
ARM GAS  /tmp/ccHyRziO.s 			page 136


 3529              	.LVL280:
1562:Src/app.c     **** 
 3530              		.loc 1 1562 20 view .LVU1157
 3531 098e 67EE8B9A 		vmul.f32	s19, s15, s22
 3532              	.LVL281:
1565:Src/app.c     ****     assert(ret == pdTRUE);
 3533              		.loc 1 1565 5 is_stmt 1 view .LVU1158
1565:Src/app.c     ****     assert(ret == pdTRUE);
 3534              		.loc 1 1565 11 is_stmt 0 view .LVU1159
 3535 0992 FFF7FEFF 		bl	xQueueSemaphoreTake
 3536              	.LVL282:
1566:Src/app.c     ****     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
 3537              		.loc 1 1566 5 is_stmt 1 view .LVU1160
 3538 0996 0128     		cmp	r0, #1
 3539 0998 05D0     		beq	.L110
1566:Src/app.c     ****     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
 3540              		.loc 1 1566 5 is_stmt 0 discriminator 1 view .LVU1161
 3541 099a 40F21E61 		movw	r1, #1566
 3542 099e 324B     		ldr	r3, .L150+56
 3543 09a0 324A     		ldr	r2, .L150+60
 3544 09a2 FFF74BBB 		b	.L145
 3545              	.L110:
1567:Src/app.c     ****     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
 3546              		.loc 1 1567 5 is_stmt 1 view .LVU1162
1567:Src/app.c     ****     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
 3547              		.loc 1 1567 39 is_stmt 0 view .LVU1163
 3548 09a6 94B3     		cbz	r4, .L111
1568:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 3549              		.loc 1 1568 5 is_stmt 1 view .LVU1164
1568:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 3550              		.loc 1 1568 37 is_stmt 0 discriminator 1 view .LVU1165
 3551 09a8 FDEEE97A 		vcvt.s32.f32	s15, s19
1567:Src/app.c     ****     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
 3552              		.loc 1 1567 21 discriminator 4 view .LVU1166
 3553 09ac 0022     		movs	r2, #0
1568:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 3554              		.loc 1 1568 37 discriminator 1 view .LVU1167
 3555 09ae 17EE903A 		vmov	r3, s15	@ int
 3556              	.L112:
1571:Src/app.c     ****     disp.info.hands[0].is_valid = is_tracking;
 3557              		.loc 1 1571 43 view .LVU1168
 3558 09b2 5599     		ldr	r1, [sp, #340]
1568:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 3559              		.loc 1 1568 21 discriminator 4 view .LVU1169
 3560 09b4 C5E92B23 		strd	r2, r3, [r5, #172]
1569:Src/app.c     ****     disp.info.pd_hand_nb = is_tracking;
 3561              		.loc 1 1569 5 is_stmt 1 view .LVU1170
1571:Src/app.c     ****     disp.info.hands[0].is_valid = is_tracking;
 3562              		.loc 1 1571 27 is_stmt 0 view .LVU1171
 3563 09b8 0B68     		ldr	r3, [r1]	@ float
1573:Src/app.c     ****     disp.info.hands[0].roi = rois[0];
 3564              		.loc 1 1573 5 view .LVU1172
 3565 09ba 2D48     		ldr	r0, .L150+64
 3566              	.LVL283:
1571:Src/app.c     ****     disp.info.hands[0].is_valid = is_tracking;
 3567              		.loc 1 1571 27 view .LVU1173
 3568 09bc C5F8C830 		str	r3, [r5, #200]	@ float
ARM GAS  /tmp/ccHyRziO.s 			page 137


1569:Src/app.c     ****     disp.info.pd_hand_nb = is_tracking;
 3569              		.loc 1 1569 28 view .LVU1174
 3570 09c0 85ED2A9A 		vstr.32	s18, [r5, #168]
1570:Src/app.c     ****     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
 3571              		.loc 1 1570 5 is_stmt 1 view .LVU1175
1570:Src/app.c     ****     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
 3572              		.loc 1 1570 26 is_stmt 0 view .LVU1176
 3573 09c4 C5F8C440 		str	r4, [r5, #196]
1571:Src/app.c     ****     disp.info.hands[0].is_valid = is_tracking;
 3574              		.loc 1 1571 5 is_stmt 1 view .LVU1177
1572:Src/app.c     ****     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
 3575              		.loc 1 1572 5 view .LVU1178
1572:Src/app.c     ****     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
 3576              		.loc 1 1572 33 is_stmt 0 view .LVU1179
 3577 09c8 C5F8CC40 		str	r4, [r5, #204]
1573:Src/app.c     ****     disp.info.hands[0].roi = rois[0];
 3578              		.loc 1 1573 5 is_stmt 1 view .LVU1180
 3579 09cc FFF7FEFF 		bl	copy_pd_box
 3580              	.LVL284:
1574:Src/app.c     ****     for (j = 0; j < LD_LANDMARK_NB; j++)
 3581              		.loc 1 1574 5 view .LVU1181
1574:Src/app.c     ****     for (j = 0; j < LD_LANDMARK_NB; j++)
 3582              		.loc 1 1574 28 is_stmt 0 view .LVU1182
 3583 09d0 DFF8A4C0 		ldr	ip, .L150+72
 3584 09d4 DFF89CE0 		ldr	lr, .L150+68
 3585 09d8 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 3586 09dc ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 3587 09e0 6046     		mov	r0, ip
 3588 09e2 DEF80030 		ldr	r3, [lr]
1576:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3589              		.loc 1 1576 42 view .LVU1183
 3590 09e6 A822     		movs	r2, #168
 3591 09e8 1949     		ldr	r1, .L150+32
1574:Src/app.c     ****     for (j = 0; j < LD_LANDMARK_NB; j++)
 3592              		.loc 1 1574 28 view .LVU1184
 3593 09ea 40F8043B 		str	r3, [r0], #4
1575:Src/app.c     ****       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 3594              		.loc 1 1575 5 is_stmt 1 view .LVU1185
 3595              	.LVL285:
1575:Src/app.c     ****       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 3596              		.loc 1 1575 19 discriminator 1 view .LVU1186
1576:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3597              		.loc 1 1576 42 is_stmt 0 view .LVU1187
 3598 09ee FFF7FEFF 		bl	memcpy
 3599              	.LVL286:
1577:Src/app.c     ****     assert(ret == pdTRUE);
 3600              		.loc 1 1577 5 is_stmt 1 view .LVU1188
1577:Src/app.c     ****     assert(ret == pdTRUE);
 3601              		.loc 1 1577 11 is_stmt 0 view .LVU1189
 3602 09f2 0023     		movs	r3, #0
 3603 09f4 686D     		ldr	r0, [r5, #84]
 3604 09f6 1A46     		mov	r2, r3
 3605 09f8 1946     		mov	r1, r3
 3606 09fa FFF7FEFF 		bl	xQueueGenericSend
 3607              	.LVL287:
1578:Src/app.c     **** 
 3608              		.loc 1 1578 5 is_stmt 1 view .LVU1190
ARM GAS  /tmp/ccHyRziO.s 			page 138


 3609 09fe 0128     		cmp	r0, #1
 3610 0a00 0BD0     		beq	.L113
1578:Src/app.c     **** 
 3611              		.loc 1 1578 5 is_stmt 0 discriminator 1 view .LVU1191
 3612 0a02 40F22A61 		movw	r1, #1578
 3613 0a06 184B     		ldr	r3, .L150+56
 3614 0a08 184A     		ldr	r2, .L150+60
 3615 0a0a FFF717BB 		b	.L145
 3616              	.L111:
1567:Src/app.c     ****     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
 3617              		.loc 1 1567 41 discriminator 1 view .LVU1192
 3618 0a0e FDEECA7A 		vcvt.s32.f32	s15, s20
1568:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 3619              		.loc 1 1568 57 discriminator 2 view .LVU1193
 3620 0a12 2346     		mov	r3, r4
1567:Src/app.c     ****     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
 3621              		.loc 1 1567 41 discriminator 1 view .LVU1194
 3622 0a14 17EE902A 		vmov	r2, s15	@ int
1568:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 3623              		.loc 1 1568 5 is_stmt 1 view .LVU1195
 3624 0a18 CBE7     		b	.L112
 3625              	.L113:
1581:Src/app.c     ****   }
 3626              		.loc 1 1581 5 view .LVU1196
 3627 0a1a 0023     		movs	r3, #0
 3628 0a1c 2868     		ldr	r0, [r5]
 3629              	.LVL288:
1581:Src/app.c     ****   }
 3630              		.loc 1 1581 5 is_stmt 0 view .LVU1197
 3631 0a1e 1A46     		mov	r2, r3
 3632 0a20 1946     		mov	r1, r3
 3633 0a22 FFF7FEFF 		bl	xQueueGenericSend
 3634              	.LVL289:
 3635              	.LBE564:
1518:Src/app.c     ****   {
 3636              		.loc 1 1518 9 is_stmt 1 view .LVU1198
 3637              	.LBB565:
1524:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 3638              		.loc 1 1524 18 is_stmt 0 discriminator 1 view .LVU1199
 3639 0a26 029D     		ldr	r5, [sp, #8]
 3640              	.LBE565:
1519:Src/app.c     ****     uint8_t *capture_buffer;
 3641              		.loc 1 1519 3 view .LVU1200
 3642 0a28 FFF7FBBB 		b	.L114
 3643              	.L151:
 3644 0a2c AFF30080 		.align	3
 3645              	.L150:
 3646 0a30 182D4454 		.word	1413754136
 3647 0a34 FB21F93F 		.word	1073291771
 3648 0a38 182D4454 		.word	1413754136
 3649 0a3c FB210940 		.word	1074340347
 3650 0a40 182D4454 		.word	1413754136
 3651 0a44 FB211940 		.word	1075388923
 3652 0a48 00ED00E0 		.word	-536810240
 3653 0a4c 00000000 		.word	NN_Instance_hand_landmark
 3654 0a50 00000000 		.word	ld_landmarks
 3655 0a54 30000000 		.word	.LANCHOR0+48
ARM GAS  /tmp/ccHyRziO.s 			page 139


 3656 0a58 00401C46 		.word	1176256512
 3657 0a5c 00401CC6 		.word	-971227136
 3658 0a60 CDCCCCBD 		.word	-1110651699
 3659 0a64 00000000 		.word	disp
 3660 0a68 00000000 		.word	.LC4
 3661 0a6c 00000000 		.word	__func__.13
 3662 0a70 D0000000 		.word	disp+208
 3663 0a74 00000000 		.word	rois
 3664 0a78 E8000000 		.word	disp+232
 3665              		.cfi_endproc
 3666              	.LFE7390:
 3668              		.section	.text.display_hand,"ax",%progbits
 3669              		.align	1
 3670              		.global	display_hand
 3671              		.syntax unified
 3672              		.thumb
 3673              		.thumb_func
 3675              	display_hand:
 3676              	.LVL290:
 3677              	.LFB7375:
 959:Src/app.c     ****   if (info->is_pd_displayed) {
 3678              		.loc 1 959 1 is_stmt 1 view -0
 3679              		.cfi_startproc
 3680              		@ args = 0, pretend = 0, frame = 72
 3681              		@ frame_needed = 0, uses_anonymous_args = 0
 960:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 3682              		.loc 1 960 3 view .LVU1202
 959:Src/app.c     ****   if (info->is_pd_displayed) {
 3683              		.loc 1 959 1 is_stmt 0 view .LVU1203
 3684 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3685              		.cfi_def_cfa_offset 32
 3686              		.cfi_offset 4, -32
 3687              		.cfi_offset 5, -28
 3688              		.cfi_offset 6, -24
 3689              		.cfi_offset 7, -20
 3690              		.cfi_offset 8, -16
 3691              		.cfi_offset 9, -12
 3692              		.cfi_offset 10, -8
 3693              		.cfi_offset 14, -4
 3694 0004 2DED048B 		vpush.64	{d8, d9}
 3695              		.cfi_def_cfa_offset 48
 3696              		.cfi_offset 80, -48
 3697              		.cfi_offset 81, -44
 3698              		.cfi_offset 82, -40
 3699              		.cfi_offset 83, -36
 960:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 3700              		.loc 1 960 6 view .LVU1204
 3701 0008 8369     		ldr	r3, [r0, #24]
 959:Src/app.c     ****   if (info->is_pd_displayed) {
 3702              		.loc 1 959 1 view .LVU1205
 3703 000a 0546     		mov	r5, r0
 3704 000c 0C46     		mov	r4, r1
 3705 000e 94B0     		sub	sp, sp, #80
 3706              		.cfi_def_cfa_offset 128
 960:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 3707              		.loc 1 960 6 view .LVU1206
 3708 0010 002B     		cmp	r3, #0
ARM GAS  /tmp/ccHyRziO.s 			page 140


 3709 0012 00F0FD80 		beq	.L153
 961:Src/app.c     ****     display_roi(&hand->roi);
 3710              		.loc 1 961 5 is_stmt 1 view .LVU1207
 3711              	.LVL291:
 3712              	.LBB577:
 3713              	.LBI577:
 789:Src/app.c     **** {
 3714              		.loc 1 789 13 view .LVU1208
 3715              	.LBB578:
 791:Src/app.c     ****   int x0, y0;
 3716              		.loc 1 791 3 view .LVU1209
 792:Src/app.c     ****   int x1, y1;
 3717              		.loc 1 792 3 view .LVU1210
 793:Src/app.c     ****   int w, h;
 3718              		.loc 1 793 3 view .LVU1211
 794:Src/app.c     ****   int i;
 3719              		.loc 1 794 3 view .LVU1212
 795:Src/app.c     **** 
 3720              		.loc 1 795 3 view .LVU1213
 798:Src/app.c     ****   yc = (int)hand->y_center;
 3721              		.loc 1 798 3 view .LVU1214
 798:Src/app.c     ****   yc = (int)hand->y_center;
 3722              		.loc 1 798 6 is_stmt 0 view .LVU1215
 3723 0016 D1ED027A 		vldr.32	s15, [r1, #8]
 3724 001a FDEEE77A 		vcvt.s32.f32	s15, s15
 3725 001e 17EE900A 		vmov	r0, s15	@ int
 3726              	.LVL292:
 799:Src/app.c     ****   w = (int)hand->width;
 3727              		.loc 1 799 3 is_stmt 1 view .LVU1216
 799:Src/app.c     ****   w = (int)hand->width;
 3728              		.loc 1 799 6 is_stmt 0 view .LVU1217
 3729 0022 D1ED037A 		vldr.32	s15, [r1, #12]
 3730 0026 FDEEE77A 		vcvt.s32.f32	s15, s15
 3731 002a 17EE901A 		vmov	r1, s15	@ int
 3732              	.LVL293:
 800:Src/app.c     ****   h = (int)hand->height;
 3733              		.loc 1 800 3 is_stmt 1 view .LVU1218
 801:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 3734              		.loc 1 801 3 view .LVU1219
 801:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 3735              		.loc 1 801 5 is_stmt 0 view .LVU1220
 3736 002e D4ED057A 		vldr.32	s15, [r4, #20]
 3737 0032 FDEEE77A 		vcvt.s32.f32	s15, s15
 3738 0036 17EE903A 		vmov	r3, s15	@ int
 3739              	.LVL294:
 802:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 3740              		.loc 1 802 3 is_stmt 1 view .LVU1221
 800:Src/app.c     ****   h = (int)hand->height;
 3741              		.loc 1 800 5 is_stmt 0 view .LVU1222
 3742 003a D4ED047A 		vldr.32	s15, [r4, #16]
 3743 003e FDEEE77A 		vcvt.s32.f32	s15, s15
 3744 0042 17EE902A 		vmov	r2, s15	@ int
 802:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 3745              		.loc 1 802 16 view .LVU1223
 3746 0046 0132     		adds	r2, r2, #1
 802:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 3747              		.loc 1 802 21 view .LVU1224
ARM GAS  /tmp/ccHyRziO.s 			page 141


 3748 0048 02EBD272 		add	r2, r2, r2, lsr #31
 803:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 3749              		.loc 1 803 16 view .LVU1225
 3750 004c 0133     		adds	r3, r3, #1
 3751              	.LVL295:
 802:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 3752              		.loc 1 802 21 view .LVU1226
 3753 004e 5210     		asrs	r2, r2, #1
 803:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 3754              		.loc 1 803 21 view .LVU1227
 3755 0050 03EBD373 		add	r3, r3, r3, lsr #31
 3756              	.LVL296:
 802:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 3757              		.loc 1 802 21 view .LVU1228
 3758 0054 5242     		rsbs	r2, r2, #0
 803:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 3759              		.loc 1 803 21 view .LVU1229
 3760 0056 5B10     		asrs	r3, r3, #1
 802:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 3761              		.loc 1 802 11 view .LVU1230
 3762 0058 8618     		adds	r6, r0, r2
 803:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 3763              		.loc 1 803 21 view .LVU1231
 3764 005a 5B42     		rsbs	r3, r3, #0
 804:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 3765              		.loc 1 804 6 view .LVU1232
 3766 005c 801A     		subs	r0, r0, r2
 3767              	.LVL297:
 802:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 3768              		.loc 1 802 6 view .LVU1233
 3769 005e 0296     		str	r6, [sp, #8]
 803:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 3770              		.loc 1 803 3 is_stmt 1 view .LVU1234
 803:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 3771              		.loc 1 803 11 is_stmt 0 view .LVU1235
 3772 0060 CE18     		adds	r6, r1, r3
 805:Src/app.c     ****   clamp_point(&x0, &y0);
 3773              		.loc 1 805 6 view .LVU1236
 3774 0062 C91A     		subs	r1, r1, r3
 3775              	.LVL298:
 804:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 3776              		.loc 1 804 6 view .LVU1237
 3777 0064 0490     		str	r0, [sp, #16]
 805:Src/app.c     ****   clamp_point(&x0, &y0);
 3778              		.loc 1 805 6 view .LVU1238
 3779 0066 0C91     		str	r1, [sp, #48]
 806:Src/app.c     ****   clamp_point(&x1, &y1);
 3780              		.loc 1 806 3 view .LVU1239
 3781 0068 02A8     		add	r0, sp, #8
 3782 006a 03A9     		add	r1, sp, #12
 803:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 3783              		.loc 1 803 6 view .LVU1240
 3784 006c 0396     		str	r6, [sp, #12]
 804:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 3785              		.loc 1 804 3 is_stmt 1 view .LVU1241
 805:Src/app.c     ****   clamp_point(&x0, &y0);
 3786              		.loc 1 805 3 view .LVU1242
ARM GAS  /tmp/ccHyRziO.s 			page 142


 806:Src/app.c     ****   clamp_point(&x1, &y1);
 3787              		.loc 1 806 3 view .LVU1243
 3788 006e FFF7FEFF 		bl	clamp_point
 3789              	.LVL299:
 807:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 3790              		.loc 1 807 3 view .LVU1244
 3791 0072 0CA9     		add	r1, sp, #48
 3792 0074 04A8     		add	r0, sp, #16
 3793 0076 FFF7FEFF 		bl	clamp_point
 3794              	.LVL300:
 808:Src/app.c     **** 
 3795              		.loc 1 808 3 view .LVU1245
 3796 007a DDE90201 		ldrd	r0, r1, [sp, #8]
 3797 007e 4FF0FF23 		mov	r3, #-16711936
 3798 0082 049A     		ldr	r2, [sp, #16]
 3799 0084 0093     		str	r3, [sp]
 3800 0086 0C9B     		ldr	r3, [sp, #48]
 3801 0088 121A     		subs	r2, r2, r0
 3802 008a 5B1A     		subs	r3, r3, r1
 3803 008c FFF7FEFF 		bl	UTIL_LCD_DrawRect
 3804              	.LVL301:
 811:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 3805              		.loc 1 811 3 view .LVU1246
 811:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 3806              		.loc 1 811 17 discriminator 1 view .LVU1247
 811:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 3807              		.loc 1 811 10 is_stmt 0 view .LVU1248
 3808 0090 0026     		movs	r6, #0
 3809              	.LBB579:
 812:Src/app.c     **** 
 3810              		.loc 1 812 62 discriminator 3 view .LVU1249
 3811 0092 DFF8A081 		ldr	r8, .L173+4
 3812 0096 664F     		ldr	r7, .L173
 3813              	.LVL302:
 3814              	.L155:
 812:Src/app.c     **** 
 3815              		.loc 1 812 5 is_stmt 1 view .LVU1250
 814:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 3816              		.loc 1 814 25 is_stmt 0 view .LVU1251
 3817 0098 A269     		ldr	r2, [r4, #24]
 812:Src/app.c     **** 
 3818              		.loc 1 812 62 discriminator 3 view .LVU1252
 3819 009a 36F00203 		bics	r3, r6, #2
 814:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 3820              		.loc 1 814 25 view .LVU1253
 3821 009e 02EBC602 		add	r2, r2, r6, lsl #3
 814:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 3822              		.loc 1 814 10 view .LVU1254
 3823 00a2 D2ED007A 		vldr.32	s15, [r2]
 3824 00a6 FDEEE77A 		vcvt.s32.f32	s15, s15
 3825 00aa CDED027A 		vstr.32	s15, [sp, #8]	@ int
 815:Src/app.c     ****     clamp_point(&x0, &y0);
 3826              		.loc 1 815 10 view .LVU1255
 3827 00ae D2ED017A 		vldr.32	s15, [r2, #4]
 812:Src/app.c     **** 
 3828              		.loc 1 812 62 discriminator 3 view .LVU1256
 3829 00b2 0CBF     		ite	eq
ARM GAS  /tmp/ccHyRziO.s 			page 143


 3830 00b4 C146     		moveq	r9, r8
 3831 00b6 B946     		movne	r9, r7
 3832              	.LVL303:
 814:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 3833              		.loc 1 814 5 is_stmt 1 view .LVU1257
 815:Src/app.c     ****     clamp_point(&x0, &y0);
 3834              		.loc 1 815 5 view .LVU1258
 815:Src/app.c     ****     clamp_point(&x0, &y0);
 3835              		.loc 1 815 10 is_stmt 0 view .LVU1259
 3836 00b8 FDEEE77A 		vcvt.s32.f32	s15, s15
 816:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 3837              		.loc 1 816 5 view .LVU1260
 3838 00bc 03A9     		add	r1, sp, #12
 3839 00be 02A8     		add	r0, sp, #8
 815:Src/app.c     ****     clamp_point(&x0, &y0);
 3840              		.loc 1 815 10 view .LVU1261
 3841 00c0 CDED037A 		vstr.32	s15, [sp, #12]	@ int
 816:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 3842              		.loc 1 816 5 is_stmt 1 view .LVU1262
 3843              	.LBE579:
 811:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 3844              		.loc 1 811 23 is_stmt 0 discriminator 2 view .LVU1263
 3845 00c4 0136     		adds	r6, r6, #1
 3846              	.LVL304:
 3847              	.LBB580:
 816:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 3848              		.loc 1 816 5 view .LVU1264
 3849 00c6 FFF7FEFF 		bl	clamp_point
 3850              	.LVL305:
 817:Src/app.c     ****   }
 3851              		.loc 1 817 5 is_stmt 1 view .LVU1265
 3852 00ca DDE90201 		ldrd	r0, r1, [sp, #8]
 3853 00ce 4B46     		mov	r3, r9
 3854 00d0 0222     		movs	r2, #2
 3855 00d2 FFF7FEFF 		bl	UTIL_LCD_FillCircle
 3856              	.LVL306:
 3857              	.LBE580:
 811:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 3858              		.loc 1 811 23 discriminator 2 view .LVU1266
 811:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 3859              		.loc 1 811 17 discriminator 1 view .LVU1267
 3860 00d6 072E     		cmp	r6, #7
 3861 00d8 DED1     		bne	.L155
 3862              	.LVL307:
 811:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 3863              		.loc 1 811 17 is_stmt 0 discriminator 1 view .LVU1268
 3864              	.LBE578:
 3865              	.LBE577:
 962:Src/app.c     ****   }
 3866              		.loc 1 962 5 is_stmt 1 view .LVU1269
 3867              	.LBB581:
 3868              	.LBI581:
 879:Src/app.c     **** {
 3869              		.loc 1 879 13 view .LVU1270
 3870              	.LBB582:
 881:Src/app.c     ****   int corners[4][2];
 3871              		.loc 1 881 3 view .LVU1271
ARM GAS  /tmp/ccHyRziO.s 			page 144


 882:Src/app.c     ****   int is_clamp;
 3872              		.loc 1 882 3 view .LVU1272
 883:Src/app.c     ****   int i;
 3873              		.loc 1 883 3 view .LVU1273
 884:Src/app.c     **** 
 3874              		.loc 1 884 3 view .LVU1274
 887:Src/app.c     **** 
 3875              		.loc 1 887 3 view .LVU1275
 3876              	.LBB583:
 3877              	.LBI583:
 836:Src/app.c     **** {
 3878              		.loc 1 836 13 view .LVU1276
 3879              	.LBB584:
 838:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 3880              		.loc 1 838 3 view .LVU1277
 839:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 3881              		.loc 1 839 14 is_stmt 0 view .LVU1278
 3882 00da F6EE006A 		vmov.f32	s13, #5.0e-1
 839:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 3883              		.loc 1 839 6 view .LVU1279
 3884 00de D4ED097A 		vldr.32	s15, [r4, #36]
 839:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 3885              		.loc 1 839 19 view .LVU1280
 3886 00e2 94ED0A7A 		vldr.32	s14, [r4, #40]
 3887              	.LBB585:
 3888              	.LBB586:
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3889              		.loc 1 829 11 view .LVU1281
 3890 00e6 94ED0B9A 		vldr.32	s18, [r4, #44]
 3891              	.LBE586:
 3892              	.LBE585:
 839:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 3893              		.loc 1 839 14 view .LVU1282
 3894 00ea 67EEE67A 		vnmul.f32	s15, s15, s13
 3895              	.LVL308:
 839:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 3896              		.loc 1 839 27 view .LVU1283
 3897 00ee 27EE667A 		vnmul.f32	s14, s14, s13
 3898              	.LVL309:
 3899              	.LBB592:
 3900              	.LBB587:
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3901              		.loc 1 829 11 view .LVU1284
 3902 00f2 B7EEC99A 		vcvt.f64.f32	d9, s18
 3903 00f6 B1EE676A 		vneg.f32	s12, s15
 3904              	.LVL310:
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3905              		.loc 1 829 11 view .LVU1285
 3906 00fa F1EE476A 		vneg.f32	s13, s14
 3907              	.LVL311:
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3908              		.loc 1 829 11 view .LVU1286
 3909              	.LBE587:
 3910              	.LBE592:
 844:Src/app.c     **** 
 3911              		.loc 1 844 3 is_stmt 1 view .LVU1287
 846:Src/app.c     ****   /* rotate */
ARM GAS  /tmp/ccHyRziO.s 			page 145


 3912              		.loc 1 846 3 view .LVU1288
 3913              	.LBB593:
 3914              	.LBB588:
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3915              		.loc 1 829 11 is_stmt 0 view .LVU1289
 3916 00fe B0EE490B 		vmov.f64	d0, d9
 3917              	.LBE588:
 3918              	.LBE593:
 846:Src/app.c     ****   /* rotate */
 3919              		.loc 1 846 3 view .LVU1290
 3920 0102 CDED047A 		vstr.32	s15, [sp, #16]
 3921 0106 8DED057A 		vstr.32	s14, [sp, #20]
 3922 010a 8DED066A 		vstr.32	s12, [sp, #24]
 3923 010e 8DED077A 		vstr.32	s14, [sp, #28]
 3924 0112 8DED086A 		vstr.32	s12, [sp, #32]
 3925 0116 CDED096A 		vstr.32	s13, [sp, #36]
 3926 011a CDED0A7A 		vstr.32	s15, [sp, #40]
 3927 011e CDED0B6A 		vstr.32	s13, [sp, #44]
 848:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 3928              		.loc 1 848 3 is_stmt 1 view .LVU1291
 3929              	.LVL312:
 848:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 3930              		.loc 1 848 17 discriminator 1 view .LVU1292
 3931              	.LBB594:
 3932              	.LBB589:
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3933              		.loc 1 829 11 is_stmt 0 view .LVU1293
 3934 0122 FFF7FEFF 		bl	cos
 3935              	.LVL313:
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3936              		.loc 1 829 11 view .LVU1294
 3937 0126 B0EE408B 		vmov.f64	d8, d0
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3938              		.loc 1 829 31 discriminator 1 view .LVU1295
 3939 012a B0EE490B 		vmov.f64	d0, d9
 3940 012e FFF7FEFF 		bl	sin
 3941              	.LVL314:
 3942              	.LBE589:
 3943              	.LBE594:
 848:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 3944              		.loc 1 848 10 view .LVU1296
 3945 0132 4FF0040E 		mov	lr, #4
 3946 0136 0DF11009 		add	r9, sp, #16
 3947              	.LVL315:
 3948              	.LBB595:
 3949              	.LBB590:
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3950              		.loc 1 829 31 discriminator 1 view .LVU1297
 3951 013a 4B46     		mov	r3, r9
 3952              	.LBE590:
 3953              	.LBE595:
 848:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 3954              		.loc 1 848 10 view .LVU1298
 3955 013c 4EF001E0 		dls	lr, lr
 3956              	.LVL316:
 3957              	.L156:
 849:Src/app.c     **** 
ARM GAS  /tmp/ccHyRziO.s 			page 146


 3958              		.loc 1 849 5 is_stmt 1 view .LVU1299
 3959              	.LBB596:
 3960              	.LBI585:
 824:Src/app.c     **** {
 3961              		.loc 1 824 13 view .LVU1300
 3962              	.LBB591:
 826:Src/app.c     ****   float y = pt[1];
 3963              		.loc 1 826 3 view .LVU1301
 827:Src/app.c     **** 
 3964              		.loc 1 827 3 view .LVU1302
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3965              		.loc 1 829 3 view .LVU1303
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3966              		.loc 1 829 45 is_stmt 0 discriminator 2 view .LVU1304
 3967 0140 93ED017A 		vldr.32	s14, [r3, #4]
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3968              		.loc 1 829 25 discriminator 1 view .LVU1305
 3969 0144 93ED005A 		vldr.32	s10, [r3]
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3970              		.loc 1 829 45 discriminator 2 view .LVU1306
 3971 0148 B7EEC77A 		vcvt.f64.f32	d7, s14
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3972              		.loc 1 829 25 discriminator 1 view .LVU1307
 3973 014c B7EEC55A 		vcvt.f64.f32	d5, s10
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3974              		.loc 1 829 29 discriminator 2 view .LVU1308
 3975 0150 27EE406B 		vnmul.f64	d6, d7, d0
 830:Src/app.c     **** }
 3976              		.loc 1 830 45 discriminator 2 view .LVU1309
 3977 0154 28EE077B 		vmul.f64	d7, d8, d7
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3978              		.loc 1 829 29 discriminator 2 view .LVU1310
 3979 0158 A8EE056B 		vfma.f64	d6, d8, d5
 830:Src/app.c     **** }
 3980              		.loc 1 830 29 discriminator 2 view .LVU1311
 3981 015c A5EE007B 		vfma.f64	d7, d5, d0
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3982              		.loc 1 829 29 discriminator 2 view .LVU1312
 3983 0160 B7EEC66B 		vcvt.f32.f64	s12, d6
 830:Src/app.c     **** }
 3984              		.loc 1 830 29 discriminator 2 view .LVU1313
 3985 0164 B7EEC77B 		vcvt.f32.f64	s14, d7
 829:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 3986              		.loc 1 829 29 discriminator 2 view .LVU1314
 3987 0168 83ED006A 		vstr.32	s12, [r3]
 3988              	.LVL317:
 830:Src/app.c     **** }
 3989              		.loc 1 830 3 is_stmt 1 view .LVU1315
 830:Src/app.c     **** }
 3990              		.loc 1 830 29 is_stmt 0 discriminator 2 view .LVU1316
 3991 016c 83ED017A 		vstr.32	s14, [r3, #4]
 3992              	.LVL318:
 830:Src/app.c     **** }
 3993              		.loc 1 830 29 discriminator 2 view .LVU1317
 3994              	.LBE591:
 3995              	.LBE596:
 848:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
ARM GAS  /tmp/ccHyRziO.s 			page 147


 3996              		.loc 1 848 23 is_stmt 1 discriminator 3 view .LVU1318
 848:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 3997              		.loc 1 848 17 discriminator 1 view .LVU1319
 3998 0170 0833     		adds	r3, r3, #8
 3999 0172 0FF01BC8 		le	lr, .L156
 852:Src/app.c     ****     corners[i][0] += roi->cx;
 4000              		.loc 1 852 10 is_stmt 0 view .LVU1320
 4001 0176 4FF0040E 		mov	lr, #4
 853:Src/app.c     ****     corners[i][1] += roi->cy;
 4002              		.loc 1 853 25 view .LVU1321
 4003 017a D4ED076A 		vldr.32	s13, [r4, #28]
 854:Src/app.c     ****   }
 4004              		.loc 1 854 25 view .LVU1322
 4005 017e 94ED087A 		vldr.32	s14, [r4, #32]
 852:Src/app.c     ****     corners[i][0] += roi->cx;
 4006              		.loc 1 852 10 view .LVU1323
 4007 0182 4EF001E0 		dls	lr, lr
 854:Src/app.c     ****   }
 4008              		.loc 1 854 25 view .LVU1324
 4009 0186 04AB     		add	r3, sp, #16
 4010              	.L157:
 853:Src/app.c     ****     corners[i][1] += roi->cy;
 4011              		.loc 1 853 5 is_stmt 1 view .LVU1325
 853:Src/app.c     ****     corners[i][1] += roi->cy;
 4012              		.loc 1 853 19 is_stmt 0 view .LVU1326
 4013 0188 D3ED007A 		vldr.32	s15, [r3]
 4014 018c 77EEA67A 		vadd.f32	s15, s15, s13
 4015 0190 C3ED007A 		vstr.32	s15, [r3]
 854:Src/app.c     ****   }
 4016              		.loc 1 854 5 is_stmt 1 view .LVU1327
 854:Src/app.c     ****   }
 4017              		.loc 1 854 19 is_stmt 0 view .LVU1328
 4018 0194 D3ED017A 		vldr.32	s15, [r3, #4]
 4019 0198 77EE877A 		vadd.f32	s15, s15, s14
 852:Src/app.c     ****     corners[i][0] += roi->cx;
 4020              		.loc 1 852 17 discriminator 1 view .LVU1329
 4021 019c 0833     		adds	r3, r3, #8
 854:Src/app.c     ****   }
 4022              		.loc 1 854 19 view .LVU1330
 4023 019e 43ED017A 		vstr.32	s15, [r3, #-4]
 852:Src/app.c     ****     corners[i][0] += roi->cx;
 4024              		.loc 1 852 23 is_stmt 1 discriminator 3 view .LVU1331
 852:Src/app.c     ****     corners[i][0] += roi->cx;
 4025              		.loc 1 852 17 discriminator 1 view .LVU1332
 4026 01a2 0FF00FC8 		le	lr, .L157
 4027              	.LBE584:
 4028              	.LBE583:
 4029              	.LBB598:
 4030              	.LBB599:
 863:Src/app.c     ****   int i;
 4031              		.loc 1 863 7 is_stmt 0 view .LVU1333
 4032 01a6 0026     		movs	r6, #0
 863:Src/app.c     ****   int i;
 4033              		.loc 1 863 7 view .LVU1334
 4034 01a8 0CAF     		add	r7, sp, #48
 4035              	.LBE599:
 4036              	.LBE598:
ARM GAS  /tmp/ccHyRziO.s 			page 148


 4037              	.LBB601:
 4038              	.LBB597:
 852:Src/app.c     ****     corners[i][0] += roi->cx;
 4039              		.loc 1 852 17 discriminator 1 view .LVU1335
 4040 01aa B846     		mov	r8, r7
 4041              	.LBE597:
 4042              	.LBE601:
 4043              	.LBB602:
 4044              	.LBB600:
 866:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 4045              		.loc 1 866 10 view .LVU1336
 4046 01ac B246     		mov	r10, r6
 4047              	.LVL319:
 4048              	.L158:
 867:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 4049              		.loc 1 867 5 is_stmt 1 view .LVU1337
 867:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 4050              		.loc 1 867 25 is_stmt 0 view .LVU1338
 4051 01ae D9ED007A 		vldr.32	s15, [r9]
 4052 01b2 FDEEE77A 		vcvt.s32.f32	s15, s15
 4053 01b6 C8ED007A 		vstr.32	s15, [r8]	@ int
 868:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 4054              		.loc 1 868 5 is_stmt 1 view .LVU1339
 868:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 4055              		.loc 1 868 25 is_stmt 0 view .LVU1340
 4056 01ba D9ED017A 		vldr.32	s15, [r9, #4]
 4057 01be FDEEE77A 		vcvt.s32.f32	s15, s15
 4058 01c2 4146     		mov	r1, r8
 4059 01c4 17EE903A 		vmov	r3, s15	@ int
 869:Src/app.c     ****   }
 4060              		.loc 1 869 17 view .LVU1341
 4061 01c8 4046     		mov	r0, r8
 868:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 4062              		.loc 1 868 25 view .LVU1342
 4063 01ca 41F8043F 		str	r3, [r1, #4]!
 869:Src/app.c     ****   }
 4064              		.loc 1 869 5 is_stmt 1 view .LVU1343
 869:Src/app.c     ****   }
 4065              		.loc 1 869 17 is_stmt 0 view .LVU1344
 4066 01ce FFF7FEFF 		bl	clamp_point
 4067              	.LVL320:
 866:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 4068              		.loc 1 866 23 discriminator 3 view .LVU1345
 4069 01d2 0AF1010A 		add	r10, r10, #1
 4070              	.LVL321:
 866:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 4071              		.loc 1 866 17 discriminator 1 view .LVU1346
 4072 01d6 BAF1040F 		cmp	r10, #4
 869:Src/app.c     ****   }
 4073              		.loc 1 869 14 discriminator 1 view .LVU1347
 4074 01da 46EA0006 		orr	r6, r6, r0
 4075              	.LVL322:
 866:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 4076              		.loc 1 866 23 is_stmt 1 discriminator 3 view .LVU1348
 866:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 4077              		.loc 1 866 17 discriminator 1 view .LVU1349
 4078 01de 09F10809 		add	r9, r9, #8
ARM GAS  /tmp/ccHyRziO.s 			page 149


 4079 01e2 08F10808 		add	r8, r8, #8
 4080 01e6 E2D1     		bne	.L158
 872:Src/app.c     **** }
 4081              		.loc 1 872 3 view .LVU1350
 4082              	.LVL323:
 872:Src/app.c     **** }
 4083              		.loc 1 872 3 is_stmt 0 view .LVU1351
 4084              	.LBE600:
 4085              	.LBE602:
 891:Src/app.c     ****     return ;
 4086              		.loc 1 891 3 is_stmt 1 view .LVU1352
 891:Src/app.c     ****     return ;
 4087              		.loc 1 891 6 is_stmt 0 view .LVU1353
 4088 01e8 96B9     		cbnz	r6, .L153
 896:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 4089              		.loc 1 896 5 view .LVU1354
 4090 01ea DFF84480 		ldr	r8, .L173
 4091              	.LVL324:
 4092              	.L159:
 896:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 4093              		.loc 1 896 5 is_stmt 1 view .LVU1355
 896:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 4094              		.loc 1 896 64 is_stmt 0 view .LVU1356
 4095 01ee 0136     		adds	r6, r6, #1
 4096              	.LVL325:
 896:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 4097              		.loc 1 896 98 view .LVU1357
 4098 01f0 14AB     		add	r3, sp, #80
 896:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 4099              		.loc 1 896 69 view .LVU1358
 4100 01f2 06F00302 		and	r2, r6, #3
 896:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 4101              		.loc 1 896 5 view .LVU1359
 4102 01f6 CDF80080 		str	r8, [sp]
 896:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 4103              		.loc 1 896 98 view .LVU1360
 4104 01fa 03EBC202 		add	r2, r3, r2, lsl #3
 896:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 4105              		.loc 1 896 5 view .LVU1361
 4106 01fe 7968     		ldr	r1, [r7, #4]
 4107 0200 52E90823 		ldrd	r2, r3, [r2, #-32]
 4108 0204 57F8080B 		ldr	r0, [r7], #8
 4109 0208 FFF7FEFF 		bl	UTIL_LCD_DrawLine
 4110              	.LVL326:
 895:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 4111              		.loc 1 895 23 is_stmt 1 discriminator 3 view .LVU1362
 895:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 4112              		.loc 1 895 17 discriminator 1 view .LVU1363
 4113 020c 042E     		cmp	r6, #4
 4114 020e EED1     		bne	.L159
 4115              	.LVL327:
 4116              	.L153:
 895:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 4117              		.loc 1 895 17 is_stmt 0 discriminator 1 view .LVU1364
 4118              	.LBE582:
 4119              	.LBE581:
 964:Src/app.c     ****     display_ld_hand(hand);
ARM GAS  /tmp/ccHyRziO.s 			page 150


 4120              		.loc 1 964 3 is_stmt 1 view .LVU1365
 964:Src/app.c     ****     display_ld_hand(hand);
 4121              		.loc 1 964 6 is_stmt 0 view .LVU1366
 4122 0210 6B69     		ldr	r3, [r5, #20]
 4123 0212 3BB1     		cbz	r3, .L152
 965:Src/app.c     **** }
 4124              		.loc 1 965 5 is_stmt 1 view .LVU1367
 4125 0214 2046     		mov	r0, r4
 966:Src/app.c     **** 
 4126              		.loc 1 966 1 is_stmt 0 view .LVU1368
 4127 0216 14B0     		add	sp, sp, #80
 4128              		.cfi_remember_state
 4129              		.cfi_def_cfa_offset 48
 4130              		@ sp needed
 4131 0218 BDEC048B 		vldm	sp!, {d8-d9}
 4132              		.cfi_restore 82
 4133              		.cfi_restore 83
 4134              		.cfi_restore 80
 4135              		.cfi_restore 81
 4136              		.cfi_def_cfa_offset 32
 4137 021c BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 4138              		.cfi_restore 14
 4139              		.cfi_restore 10
 4140              		.cfi_restore 9
 4141              		.cfi_restore 8
 4142              		.cfi_restore 7
 4143              		.cfi_restore 6
 4144              		.cfi_restore 5
 4145              		.cfi_restore 4
 4146              		.cfi_def_cfa_offset 0
 4147              	.LVL328:
 965:Src/app.c     **** }
 4148              		.loc 1 965 5 view .LVU1369
 4149 0220 FFF7FEBF 		b	display_ld_hand
 4150              	.LVL329:
 4151              	.L152:
 4152              		.cfi_restore_state
 966:Src/app.c     **** 
 4153              		.loc 1 966 1 view .LVU1370
 4154 0224 14B0     		add	sp, sp, #80
 4155              		.cfi_def_cfa_offset 48
 4156              		@ sp needed
 4157 0226 BDEC048B 		vldm	sp!, {d8-d9}
 4158              		.cfi_restore 82
 4159              		.cfi_restore 83
 4160              		.cfi_restore 80
 4161              		.cfi_restore 81
 4162              		.cfi_def_cfa_offset 32
 4163 022a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4164              	.LVL330:
 4165              	.L174:
 966:Src/app.c     **** 
 4166              		.loc 1 966 1 view .LVU1371
 4167 022e 00BF     		.align	2
 4168              	.L173:
 4169 0230 0000FFFF 		.word	-65536
 4170 0234 FF0000FF 		.word	-16776961
ARM GAS  /tmp/ccHyRziO.s 			page 151


 4171              		.cfi_endproc
 4172              	.LFE7375:
 4174              		.global	__aeabi_ul2d
 4175              		.section	.rodata.dp_thread_fct.str1.1,"aMS",%progbits,1
 4176              	.LC19:
 4177 0000 43707520 		.ascii	"Cpu load\000"
 4177      6C6F6164 
 4177      00
 4178              	.LC20:
 4179 0009 20202025 		.ascii	"   %.1f%%\000"
 4179      2E316625 
 4179      2500
 4180              	.LC21:
 4181 0013 496E6665 		.ascii	"Inferences\000"
 4181      72656E63 
 4181      657300
 4182              	.LC22:
 4183 001e 20706420 		.ascii	" pd %2ums\000"
 4183      2532756D 
 4183      7300
 4184              	.LC23:
 4185 0028 20686C20 		.ascii	" hl %2ums\000"
 4185      2532756D 
 4185      7300
 4186              	.LC24:
 4187 0032 2020252E 		.ascii	"  %.1f FPS\000"
 4187      31662046 
 4187      505300
 4188              		.section	.text.dp_thread_fct,"ax",%progbits
 4189              		.align	1
 4190              		.syntax unified
 4191              		.thumb
 4192              		.thumb_func
 4194              	dp_thread_fct:
 4195              	.LVL331:
 4196              	.LFB7395:
1651:Src/app.c     ****   button_t ld_toggle_button;
 4197              		.loc 1 1651 1 is_stmt 1 view -0
 4198              		.cfi_startproc
 4199              		@ args = 0, pretend = 0, frame = 288
 4200              		@ frame_needed = 0, uses_anonymous_args = 0
1652:Src/app.c     ****   button_t hd_toggle_button;
 4201              		.loc 1 1652 3 view .LVU1373
1653:Src/app.c     ****   uint32_t disp_ms = 0;
 4202              		.loc 1 1653 3 view .LVU1374
1654:Src/app.c     ****   display_info_t info;
 4203              		.loc 1 1654 3 view .LVU1375
1655:Src/app.c     ****   uint32_t ts;
 4204              		.loc 1 1655 3 view .LVU1376
1656:Src/app.c     ****   int ret;
 4205              		.loc 1 1656 3 view .LVU1377
1657:Src/app.c     **** 
 4206              		.loc 1 1657 3 view .LVU1378
1660:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
 4207              		.loc 1 1660 3 view .LVU1379
1651:Src/app.c     ****   button_t ld_toggle_button;
 4208              		.loc 1 1651 1 is_stmt 0 view .LVU1380
ARM GAS  /tmp/ccHyRziO.s 			page 152


 4209 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4210              		.cfi_def_cfa_offset 36
 4211              		.cfi_offset 4, -36
 4212              		.cfi_offset 5, -32
 4213              		.cfi_offset 6, -28
 4214              		.cfi_offset 7, -24
 4215              		.cfi_offset 8, -20
 4216              		.cfi_offset 9, -16
 4217              		.cfi_offset 10, -12
 4218              		.cfi_offset 11, -8
 4219              		.cfi_offset 14, -4
 4220              	.LBB633:
 4221              	.LBB634:
 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4222              		.loc 1 489 9 view .LVU1381
 4223 0004 0021     		movs	r1, #0
 4224              	.LBE634:
 4225              	.LBE633:
1651:Src/app.c     ****   button_t ld_toggle_button;
 4226              		.loc 1 1651 1 view .LVU1382
 4227 0006 2DED048B 		vpush.64	{d8, d9}
 4228              		.cfi_def_cfa_offset 52
 4229              		.cfi_offset 80, -52
 4230              		.cfi_offset 81, -48
 4231              		.cfi_offset 82, -44
 4232              		.cfi_offset 83, -40
 4233              	.LBB638:
 4234              	.LBB635:
 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4235              		.loc 1 489 9 view .LVU1383
 4236 000a 0846     		mov	r0, r1
 4237              	.LVL332:
 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4238              		.loc 1 489 9 view .LVU1384
 4239              	.LBE635:
 4240              	.LBE638:
1651:Src/app.c     ****   button_t ld_toggle_button;
 4241              		.loc 1 1651 1 view .LVU1385
 4242 000c CBB0     		sub	sp, sp, #300
 4243              		.cfi_def_cfa_offset 352
 4244              	.LVL333:
 4245              	.LBB639:
 4246              	.LBI633:
 485:Src/app.c     **** {
 4247              		.loc 1 485 13 is_stmt 1 view .LVU1386
 4248              	.LBB636:
 487:Src/app.c     **** 
 4249              		.loc 1 487 3 view .LVU1387
 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4250              		.loc 1 489 3 view .LVU1388
 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4251              		.loc 1 489 9 is_stmt 0 view .LVU1389
 4252 000e FFF7FEFF 		bl	BSP_PB_Init
 4253              	.LVL334:
 490:Src/app.c     **** 
 4254              		.loc 1 490 3 is_stmt 1 view .LVU1390
 4255 0012 0146     		mov	r1, r0
ARM GAS  /tmp/ccHyRziO.s 			page 153


 4256 0014 08B1     		cbz	r0, .L176
 4257              	.LVL335:
 4258              	.L177:
 490:Src/app.c     **** 
 4259              		.loc 1 490 3 is_stmt 0 view .LVU1391
 4260 0016 FFF7FEFF 		bl	button_init.part.0
 4261              	.LVL336:
 4262              	.L176:
 492:Src/app.c     ****   b->on_click_handler = on_click_handler;
 4263              		.loc 1 492 3 is_stmt 1 view .LVU1392
 493:Src/app.c     ****   b->prev_state = 0;
 4264              		.loc 1 493 23 is_stmt 0 view .LVU1393
 4265 001a 974B     		ldr	r3, .L193+8
 495:Src/app.c     **** }
 4266              		.loc 1 495 14 view .LVU1394
 4267 001c 974F     		ldr	r7, .L193+12
 494:Src/app.c     ****   b->cb_args = cb_args;
 4268              		.loc 1 494 17 view .LVU1395
 4269 001e CDE90403 		strd	r0, r3, [sp, #16]
 492:Src/app.c     ****   b->on_click_handler = on_click_handler;
 4270              		.loc 1 492 16 view .LVU1396
 4271 0022 8DF80C00 		strb	r0, [sp, #12]
 493:Src/app.c     ****   b->prev_state = 0;
 4272              		.loc 1 493 3 is_stmt 1 view .LVU1397
 495:Src/app.c     **** }
 4273              		.loc 1 495 3 view .LVU1398
 4274              	.LBE636:
 4275              	.LBE639:
 4276              	.LBB640:
 4277              	.LBB641:
 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4278              		.loc 1 489 9 is_stmt 0 view .LVU1399
 4279 0026 0120     		movs	r0, #1
 4280              	.LVL337:
 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4281              		.loc 1 489 9 view .LVU1400
 4282              	.LBE641:
 4283              	.LBE640:
 4284              	.LBB645:
 4285              	.LBB637:
 495:Src/app.c     **** }
 4286              		.loc 1 495 14 view .LVU1401
 4287 0028 0697     		str	r7, [sp, #24]
 4288              	.LVL338:
 495:Src/app.c     **** }
 4289              		.loc 1 495 14 view .LVU1402
 4290              	.LBE637:
 4291              	.LBE645:
1661:Src/app.c     **** #else
 4292              		.loc 1 1661 3 is_stmt 1 view .LVU1403
 4293              	.LBB646:
 4294              	.LBI640:
 485:Src/app.c     **** {
 4295              		.loc 1 485 13 view .LVU1404
 4296              	.LBB642:
 487:Src/app.c     **** 
 4297              		.loc 1 487 3 view .LVU1405
ARM GAS  /tmp/ccHyRziO.s 			page 154


 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4298              		.loc 1 489 3 view .LVU1406
 489:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 4299              		.loc 1 489 9 is_stmt 0 view .LVU1407
 4300 002a FFF7FEFF 		bl	BSP_PB_Init
 4301              	.LVL339:
 490:Src/app.c     **** 
 4302              		.loc 1 490 3 is_stmt 1 view .LVU1408
 4303 002e 0028     		cmp	r0, #0
 4304 0030 F1D1     		bne	.L177
 492:Src/app.c     ****   b->on_click_handler = on_click_handler;
 4305              		.loc 1 492 3 view .LVU1409
 492:Src/app.c     ****   b->on_click_handler = on_click_handler;
 4306              		.loc 1 492 16 is_stmt 0 view .LVU1410
 4307 0032 0123     		movs	r3, #1
 4308              	.LBE642:
 4309              	.LBE646:
1654:Src/app.c     ****   display_info_t info;
 4310              		.loc 1 1654 12 view .LVU1411
 4311 0034 0446     		mov	r4, r0
 4312              	.LBB647:
 4313              	.LBB648:
 4314              	.LBB649:
 4315              	.LBB650:
 550:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 4316              		.loc 1 550 35 view .LVU1412
 4317 0036 9FED8E9B 		vldr.64	d9, .L193
 4318              	.LBE650:
 4319              	.LBE649:
 4320              	.LBE648:
 4321              	.LBE647:
 4322              	.LBB660:
 4323              	.LBB643:
 492:Src/app.c     ****   b->on_click_handler = on_click_handler;
 4324              		.loc 1 492 16 view .LVU1413
 4325 003a 8DF81C30 		strb	r3, [sp, #28]
 493:Src/app.c     ****   b->prev_state = 0;
 4326              		.loc 1 493 3 is_stmt 1 view .LVU1414
 493:Src/app.c     ****   b->prev_state = 0;
 4327              		.loc 1 493 23 is_stmt 0 view .LVU1415
 4328 003e 904B     		ldr	r3, .L193+16
 4329              	.LBE643:
 4330              	.LBE660:
 4331              	.LBB661:
 4332              	.LBB662:
1595:Src/app.c     ****   assert(ret == HAL_OK);
 4333              		.loc 1 1595 47 view .LVU1416
 4334 0040 DFF88492 		ldr	r9, .L193+88
 4335              	.LBE662:
 4336              	.LBE661:
 4337              	.LBB668:
 4338              	.LBB644:
 494:Src/app.c     ****   b->cb_args = cb_args;
 4339              		.loc 1 494 17 view .LVU1417
 4340 0044 CDE90803 		strd	r0, r3, [sp, #32]
 495:Src/app.c     **** }
 4341              		.loc 1 495 3 is_stmt 1 view .LVU1418
ARM GAS  /tmp/ccHyRziO.s 			page 155


 495:Src/app.c     **** }
 4342              		.loc 1 495 14 is_stmt 0 view .LVU1419
 4343 0048 0A97     		str	r7, [sp, #40]
 4344              	.LVL340:
 4345              	.L187:
 495:Src/app.c     **** }
 4346              		.loc 1 495 14 view .LVU1420
 4347              	.LBE644:
 4348              	.LBE668:
1666:Src/app.c     ****   {
 4349              		.loc 1 1666 3 is_stmt 1 view .LVU1421
1668:Src/app.c     ****     assert(ret == pdTRUE);
 4350              		.loc 1 1668 5 view .LVU1422
1668:Src/app.c     ****     assert(ret == pdTRUE);
 4351              		.loc 1 1668 11 is_stmt 0 view .LVU1423
 4352 004a 4FF0FF31 		mov	r1, #-1
 4353 004e 3868     		ldr	r0, [r7]
 4354 0050 FFF7FEFF 		bl	xQueueSemaphoreTake
 4355              	.LVL341:
1669:Src/app.c     **** 
 4356              		.loc 1 1669 5 is_stmt 1 view .LVU1424
 4357 0054 0128     		cmp	r0, #1
 4358 0056 06D0     		beq	.L178
1669:Src/app.c     **** 
 4359              		.loc 1 1669 5 is_stmt 0 discriminator 1 view .LVU1425
 4360 0058 40F28561 		movw	r1, #1669
 4361 005c 894B     		ldr	r3, .L193+20
 4362 005e 8A4A     		ldr	r2, .L193+24
 4363              	.LVL342:
 4364              	.L192:
1675:Src/app.c     ****     info = disp.info;
 4365              		.loc 1 1675 5 discriminator 1 view .LVU1426
 4366 0060 8A48     		ldr	r0, .L193+28
 4367 0062 FFF7FEFF 		bl	__assert_func
 4368              	.LVL343:
 4369              	.L178:
1671:Src/app.c     ****     button_process(&hd_toggle_button);
 4370              		.loc 1 1671 5 is_stmt 1 view .LVU1427
 4371 0066 03A8     		add	r0, sp, #12
 4372              	.LVL344:
1671:Src/app.c     ****     button_process(&hd_toggle_button);
 4373              		.loc 1 1671 5 is_stmt 0 view .LVU1428
 4374 0068 FFF7FEFF 		bl	button_process
 4375              	.LVL345:
1672:Src/app.c     **** 
 4376              		.loc 1 1672 5 is_stmt 1 view .LVU1429
 4377 006c 07A8     		add	r0, sp, #28
 4378 006e FFF7FEFF 		bl	button_process
 4379              	.LVL346:
1674:Src/app.c     ****     assert(ret == pdTRUE);
 4380              		.loc 1 1674 5 view .LVU1430
1674:Src/app.c     ****     assert(ret == pdTRUE);
 4381              		.loc 1 1674 11 is_stmt 0 view .LVU1431
 4382 0072 4FF0FF31 		mov	r1, #-1
 4383 0076 786D     		ldr	r0, [r7, #84]
 4384 0078 FFF7FEFF 		bl	xQueueSemaphoreTake
 4385              	.LVL347:
ARM GAS  /tmp/ccHyRziO.s 			page 156


1675:Src/app.c     ****     info = disp.info;
 4386              		.loc 1 1675 5 is_stmt 1 view .LVU1432
 4387 007c 0128     		cmp	r0, #1
 4388 007e 04D0     		beq	.L179
1675:Src/app.c     ****     info = disp.info;
 4389              		.loc 1 1675 5 is_stmt 0 discriminator 1 view .LVU1433
 4390 0080 40F28B61 		movw	r1, #1675
 4391 0084 7F4B     		ldr	r3, .L193+20
 4392 0086 804A     		ldr	r2, .L193+24
 4393 0088 EAE7     		b	.L192
 4394              	.L179:
1676:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 4395              		.loc 1 1676 5 is_stmt 1 view .LVU1434
1676:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 4396              		.loc 1 1676 10 is_stmt 0 view .LVU1435
 4397 008a FC22     		movs	r2, #252
 4398 008c 8049     		ldr	r1, .L193+32
 4399 008e 0BA8     		add	r0, sp, #44
 4400              	.LVL348:
1676:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 4401              		.loc 1 1676 10 view .LVU1436
 4402 0090 FFF7FEFF 		bl	memcpy
 4403              	.LVL349:
1677:Src/app.c     ****     assert(ret == pdTRUE);
 4404              		.loc 1 1677 5 is_stmt 1 view .LVU1437
1677:Src/app.c     ****     assert(ret == pdTRUE);
 4405              		.loc 1 1677 11 is_stmt 0 view .LVU1438
 4406 0094 0023     		movs	r3, #0
 4407 0096 786D     		ldr	r0, [r7, #84]
 4408 0098 1A46     		mov	r2, r3
 4409 009a 1946     		mov	r1, r3
 4410 009c FFF7FEFF 		bl	xQueueGenericSend
 4411              	.LVL350:
1678:Src/app.c     ****     info.disp_ms = disp_ms;
 4412              		.loc 1 1678 5 view .LVU1439
 4413 00a0 0128     		cmp	r0, #1
1677:Src/app.c     ****     assert(ret == pdTRUE);
 4414              		.loc 1 1677 11 view .LVU1440
 4415 00a2 0546     		mov	r5, r0
 4416              	.LVL351:
1678:Src/app.c     ****     info.disp_ms = disp_ms;
 4417              		.loc 1 1678 5 is_stmt 1 view .LVU1441
 4418 00a4 04D0     		beq	.L180
1678:Src/app.c     ****     info.disp_ms = disp_ms;
 4419              		.loc 1 1678 5 is_stmt 0 discriminator 1 view .LVU1442
 4420 00a6 40F28E61 		movw	r1, #1678
 4421 00aa 764B     		ldr	r3, .L193+20
 4422 00ac 764A     		ldr	r2, .L193+24
 4423 00ae D7E7     		b	.L192
 4424              	.L180:
1679:Src/app.c     **** 
 4425              		.loc 1 1679 5 is_stmt 1 view .LVU1443
1679:Src/app.c     **** 
 4426              		.loc 1 1679 18 is_stmt 0 view .LVU1444
 4427 00b0 0F94     		str	r4, [sp, #60]
1681:Src/app.c     ****     dp_update_drawing_area();
 4428              		.loc 1 1681 5 is_stmt 1 view .LVU1445
ARM GAS  /tmp/ccHyRziO.s 			page 157


1681:Src/app.c     ****     dp_update_drawing_area();
 4429              		.loc 1 1681 10 is_stmt 0 view .LVU1446
 4430 00b2 FFF7FEFF 		bl	HAL_GetTick
 4431              	.LVL352:
1681:Src/app.c     ****     dp_update_drawing_area();
 4432              		.loc 1 1681 10 view .LVU1447
 4433 00b6 8246     		mov	r10, r0
 4434              	.LVL353:
1682:Src/app.c     ****     Display_NetworkOutput(&info);
 4435              		.loc 1 1682 5 is_stmt 1 view .LVU1448
 4436              	.LBB669:
 4437              	.LBI661:
1590:Src/app.c     **** {
 4438              		.loc 1 1590 13 view .LVU1449
 4439              	.LBB667:
1592:Src/app.c     **** 
 4440              		.loc 1 1592 3 view .LVU1450
1594:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
 4441              		.loc 1 1594 3 view .LVU1451
 4442              	.LBB663:
 4443              	.LBI663:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
ARM GAS  /tmp/ccHyRziO.s 			page 158


 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
ARM GAS  /tmp/ccHyRziO.s 			page 159


 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHyRziO.s 			page 160


 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/ccHyRziO.s 			page 161


 479:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHyRziO.s 			page 162


 536:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccHyRziO.s 			page 163


 593:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  /tmp/ccHyRziO.s 			page 164


 650:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccHyRziO.s 			page 165


 707:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccHyRziO.s 			page 166


 764:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccHyRziO.s 			page 167


 821:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  /tmp/ccHyRziO.s 			page 168


 878:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHyRziO.s 			page 169


 935:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 4444              		.loc 4 960 27 view .LVU1452
 4445              	.LBB664:
 961:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 4446              		.loc 4 962 3 view .LVU1453
 4447              		.syntax unified
 4448              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4449 00b8 72B6     		cpsid i
 4450              	@ 0 "" 2
 4451              		.thumb
 4452              		.syntax unified
 4453              	.LBE664:
 4454              	.LBE663:
1595:Src/app.c     ****   assert(ret == HAL_OK);
 4455              		.loc 1 1595 3 view .LVU1454
1595:Src/app.c     ****   assert(ret == HAL_OK);
 4456              		.loc 1 1595 47 is_stmt 0 view .LVU1455
 4457 00ba DFF81082 		ldr	r8, .L193+92
 4458 00be D9F80030 		ldr	r3, [r9]
1595:Src/app.c     ****   assert(ret == HAL_OK);
 4459              		.loc 1 1595 9 view .LVU1456
 4460 00c2 7448     		ldr	r0, .L193+36
 4461              	.LVL354:
1595:Src/app.c     ****   assert(ret == HAL_OK);
 4462              		.loc 1 1595 9 view .LVU1457
 4463 00c4 2946     		mov	r1, r5
 4464 00c6 00FB0380 		mla	r0, r0, r3, r8
 4465 00ca FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 4466              	.LVL355:
1596:Src/app.c     ****   __enable_irq();
 4467              		.loc 1 1596 3 is_stmt 1 view .LVU1458
ARM GAS  /tmp/ccHyRziO.s 			page 170


 4468 00ce 8346     		mov	fp, r0
 4469 00d0 20B1     		cbz	r0, .L181
1596:Src/app.c     ****   __enable_irq();
 4470              		.loc 1 1596 3 is_stmt 0 discriminator 1 view .LVU1459
 4471 00d2 40F23C61 		movw	r1, #1596
 4472 00d6 704B     		ldr	r3, .L193+40
 4473 00d8 704A     		ldr	r2, .L193+44
 4474 00da C1E7     		b	.L192
 4475              	.L181:
1597:Src/app.c     **** }
 4476              		.loc 1 1597 3 is_stmt 1 view .LVU1460
 4477              	.LBB665:
 4478              	.LBI665:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4479              		.loc 4 949 27 view .LVU1461
 4480              	.LBB666:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4481              		.loc 4 951 3 view .LVU1462
 4482              		.syntax unified
 4483              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4484 00dc 62B6     		cpsie i
 4485              	@ 0 "" 2
 4486              	.LVL356:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4487              		.loc 4 951 3 is_stmt 0 view .LVU1463
 4488              		.thumb
 4489              		.syntax unified
 4490              	.LBE666:
 4491              	.LBE665:
 4492              	.LBE667:
 4493              	.LBE669:
1683:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
 4494              		.loc 1 1683 5 is_stmt 1 view .LVU1464
 4495              	.LBB670:
 4496              	.LBI647:
 974:Src/app.c     **** {
 4497              		.loc 1 974 13 view .LVU1465
 4498              	.LBB659:
 976:Src/app.c     ****   int line_nb = 0;
 4499              		.loc 1 976 3 view .LVU1466
 977:Src/app.c     ****   float nn_fps;
 4500              		.loc 1 977 3 view .LVU1467
 978:Src/app.c     ****   int i;
 4501              		.loc 1 978 3 view .LVU1468
 979:Src/app.c     **** 
 4502              		.loc 1 979 3 view .LVU1469
 982:Src/app.c     **** 
 4503              		.loc 1 982 3 view .LVU1470
 4504              	.LBB652:
 4505              	.LBB653:
 528:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 4506              		.loc 1 528 24 is_stmt 0 view .LVU1471
 4507 00de 704C     		ldr	r4, .L193+48
 4508              	.LVL357:
 528:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 4509              		.loc 1 528 24 view .LVU1472
 4510              	.LBE653:
ARM GAS  /tmp/ccHyRziO.s 			page 171


 4511              	.LBE652:
 982:Src/app.c     **** 
 4512              		.loc 1 982 3 view .LVU1473
 4513 00e0 4FF4F073 		mov	r3, #480
 4514 00e4 4FF44872 		mov	r2, #800
 4515 00e8 0146     		mov	r1, r0
 4516 00ea 0090     		str	r0, [sp]
 4517              	.LBB656:
 4518              	.LBB654:
 528:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 4519              		.loc 1 528 24 view .LVU1474
 4520 00ec 04F13805 		add	r5, r4, #56
 4521              	.LVL358:
 528:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 4522              		.loc 1 528 24 view .LVU1475
 4523 00f0 04F12006 		add	r6, r4, #32
 4524              	.LBE654:
 4525              	.LBE656:
 982:Src/app.c     **** 
 4526              		.loc 1 982 3 view .LVU1476
 4527 00f4 FFF7FEFF 		bl	UTIL_LCD_FillRect
 4528              	.LVL359:
 985:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 4529              		.loc 1 985 3 is_stmt 1 view .LVU1477
 4530              	.LBB657:
 4531              	.LBI652:
 524:Src/app.c     **** {
 4532              		.loc 1 524 13 view .LVU1478
 4533              	.LBB655:
 526:Src/app.c     **** 
 4534              		.loc 1 526 3 view .LVU1479
 528:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 4535              		.loc 1 528 3 view .LVU1480
 528:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 4536              		.loc 1 528 24 is_stmt 0 view .LVU1481
 4537 00f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4538 00fa 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 4539 00fc 96E80300 		ldm	r6, {r0, r1}
 4540 0100 85E80300 		stm	r5, {r0, r1}
 529:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 4541              		.loc 1 529 3 is_stmt 1 view .LVU1482
 529:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 4542              		.loc 1 529 32 is_stmt 0 view .LVU1483
 4543 0104 FFF7FEFF 		bl	TIM4_Get_Value
 4544              	.LVL360:
 4545 0108 0546     		mov	r5, r0
 529:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 4546              		.loc 1 529 30 discriminator 1 view .LVU1484
 4547 010a C4E9080B 		strd	r0, fp, [r4, #32]
 530:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 4548              		.loc 1 530 3 is_stmt 1 view .LVU1485
 530:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 4549              		.loc 1 530 62 is_stmt 0 view .LVU1486
 4550 010e FFF7FEFF 		bl	ulTaskGetIdleRunTimeCounter
 4551              	.LVL361:
 530:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 4552              		.loc 1 530 60 discriminator 1 view .LVU1487
ARM GAS  /tmp/ccHyRziO.s 			page 172


 4553 0112 2D1A     		subs	r5, r5, r0
 4554 0114 63EB0303 		sbc	r3, r3, r3
 530:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 4555              		.loc 1 530 31 discriminator 1 view .LVU1488
 4556 0118 C4E90A53 		strd	r5, r3, [r4, #40]
 531:Src/app.c     **** 
 4557              		.loc 1 531 3 is_stmt 1 view .LVU1489
 531:Src/app.c     **** 
 4558              		.loc 1 531 31 is_stmt 0 view .LVU1490
 4559 011c FFF7FEFF 		bl	HAL_GetTick
 4560              	.LVL362:
 533:Src/app.c     ****     return ;
 4561              		.loc 1 533 33 view .LVU1491
 4562 0120 A36C     		ldr	r3, [r4, #72]
 4563 0122 226E     		ldr	r2, [r4, #96]
 531:Src/app.c     **** 
 4564              		.loc 1 531 29 discriminator 1 view .LVU1492
 4565 0124 2063     		str	r0, [r4, #48]
 533:Src/app.c     ****     return ;
 4566              		.loc 1 533 3 is_stmt 1 view .LVU1493
 533:Src/app.c     ****     return ;
 4567              		.loc 1 533 33 is_stmt 0 view .LVU1494
 4568 0126 9B1A     		subs	r3, r3, r2
 533:Src/app.c     ****     return ;
 4569              		.loc 1 533 6 view .LVU1495
 4570 0128 B3F57A7F 		cmp	r3, #1000
 4571 012c 06D3     		bcc	.L182
 537:Src/app.c     **** }
 4572              		.loc 1 537 55 view .LVU1496
 4573 012e 9022     		movs	r2, #144
 4574 0130 04F13801 		add	r1, r4, #56
 4575 0134 04F15000 		add	r0, r4, #80
 4576 0138 FFF7FEFF 		bl	memmove
 4577              	.LVL363:
 4578              	.L182:
 537:Src/app.c     **** }
 4579              		.loc 1 537 55 view .LVU1497
 4580              	.LBE655:
 4581              	.LBE657:
 986:Src/app.c     **** 
 4582              		.loc 1 986 3 is_stmt 1 view .LVU1498
 4583              	.LBB658:
 4584              	.LBI649:
 543:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 4585              		.loc 1 543 13 view .LVU1499
 4586              	.LBB651:
 546:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 4587              		.loc 1 546 3 view .LVU1500
 549:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 4588              		.loc 1 549 3 view .LVU1501
 550:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 4589              		.loc 1 550 5 view .LVU1502
 550:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 4590              		.loc 1 550 66 is_stmt 0 view .LVU1503
 4591 013c D4E91C23 		ldrd	r2, r3, [r4, #112]
 4592 0140 D4E91601 		ldrd	r0, r1, [r4, #88]
 4593 0144 801A     		subs	r0, r0, r2
ARM GAS  /tmp/ccHyRziO.s 			page 173


 4594 0146 61EB0301 		sbc	r1, r1, r3
 550:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 4595              		.loc 1 550 35 view .LVU1504
 4596 014a FFF7FEFF 		bl	__aeabi_ul2d
 4597              	.LVL364:
 551:Src/app.c     ****   if (cpu_load_last_five_seconds)
 4598              		.loc 1 551 50 view .LVU1505
 4599 014e D4E91A32 		ldrd	r3, r2, [r4, #104]
 550:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 4600              		.loc 1 550 35 view .LVU1506
 4601 0152 41EC180B 		vmov	d8, r0, r1
 551:Src/app.c     ****   if (cpu_load_last_five_seconds)
 4602              		.loc 1 551 50 view .LVU1507
 4603 0156 D4E91401 		ldrd	r0, r1, [r4, #80]
 4604 015a C01A     		subs	r0, r0, r3
 4605 015c 61EB0201 		sbc	r1, r1, r2
 550:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 4606              		.loc 1 550 97 view .LVU1508
 4607 0160 FFF7FEFF 		bl	__aeabi_ul2d
 4608              	.LVL365:
 550:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 4609              		.loc 1 550 35 view .LVU1509
 4610 0164 28EE098B 		vmul.f64	d8, d8, d9
 550:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 4611              		.loc 1 550 97 view .LVU1510
 4612 0168 41EC160B 		vmov	d6, r0, r1
 4613 016c 88EE067B 		vdiv.f64	d7, d8, d6
 4614 0170 B7EEC78B 		vcvt.f32.f64	s16, d7
 4615              	.LVL366:
 552:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 4616              		.loc 1 552 3 is_stmt 1 view .LVU1511
 552:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 4617              		.loc 1 552 3 is_stmt 0 view .LVU1512
 4618              	.LBE651:
 4619              	.LBE658:
 989:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 4620              		.loc 1 989 3 is_stmt 1 view .LVU1513
 989:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 4621              		.loc 1 989 10 is_stmt 0 view .LVU1514
 4622 0174 9FED4B7A 		vldr.32	s14, .L193+52
 4623 0178 DDED0B7A 		vldr.32	s15, [sp, #44]
 4624 017c C7EE278A 		vdiv.f32	s17, s14, s15
 4625              	.LVL367:
 990:Src/app.c     ****   line_nb += 1;
 4626              		.loc 1 990 3 is_stmt 1 view .LVU1515
 990:Src/app.c     ****   line_nb += 1;
 4627              		.loc 1 990 26 is_stmt 0 view .LVU1516
 4628 0180 FFF7FEFF 		bl	UTIL_LCD_GetFont
 4629              	.LVL368:
 990:Src/app.c     ****   line_nb += 1;
 4630              		.loc 1 990 3 discriminator 1 view .LVU1517
 4631 0184 0021     		movs	r1, #0
 4632 0186 0222     		movs	r2, #2
 4633 0188 0846     		mov	r0, r1
 4634 018a 474B     		ldr	r3, .L193+56
 4635 018c FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 4636              	.LVL369:
ARM GAS  /tmp/ccHyRziO.s 			page 174


 991:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 4637              		.loc 1 991 3 is_stmt 1 view .LVU1518
 992:Src/app.c     ****   line_nb += 2;
 4638              		.loc 1 992 3 view .LVU1519
 992:Src/app.c     ****   line_nb += 2;
 4639              		.loc 1 992 26 is_stmt 0 view .LVU1520
 4640 0190 FFF7FEFF 		bl	UTIL_LCD_GetFont
 4641              	.LVL370:
 992:Src/app.c     ****   line_nb += 2;
 4642              		.loc 1 992 3 discriminator 1 view .LVU1521
 4643 0194 B7EEC87A 		vcvt.f64.f32	d7, s16
 4644 0198 C188     		ldrh	r1, [r0, #6]
 4645 019a 0222     		movs	r2, #2
 4646 019c 8DED007B 		vstr.64	d7, [sp]
 4647 01a0 424B     		ldr	r3, .L193+60
 4648 01a2 0020     		movs	r0, #0
 4649 01a4 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 4650              	.LVL371:
 993:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 4651              		.loc 1 993 3 is_stmt 1 view .LVU1522
 994:Src/app.c     ****   line_nb += 1;
 4652              		.loc 1 994 3 view .LVU1523
 994:Src/app.c     ****   line_nb += 1;
 4653              		.loc 1 994 26 is_stmt 0 view .LVU1524
 4654 01a8 FFF7FEFF 		bl	UTIL_LCD_GetFont
 4655              	.LVL372:
 994:Src/app.c     ****   line_nb += 1;
 4656              		.loc 1 994 26 discriminator 1 view .LVU1525
 4657 01ac C188     		ldrh	r1, [r0, #6]
 994:Src/app.c     ****   line_nb += 1;
 4658              		.loc 1 994 3 discriminator 1 view .LVU1526
 4659 01ae 0222     		movs	r2, #2
 4660 01b0 3F4B     		ldr	r3, .L193+64
 4661 01b2 01EB4101 		add	r1, r1, r1, lsl #1
 4662 01b6 0020     		movs	r0, #0
 4663 01b8 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 4664              	.LVL373:
 995:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 4665              		.loc 1 995 3 is_stmt 1 view .LVU1527
 996:Src/app.c     ****   line_nb += 1;
 4666              		.loc 1 996 3 view .LVU1528
 996:Src/app.c     ****   line_nb += 1;
 4667              		.loc 1 996 26 is_stmt 0 view .LVU1529
 4668 01bc FFF7FEFF 		bl	UTIL_LCD_GetFont
 4669              	.LVL374:
 996:Src/app.c     ****   line_nb += 1;
 4670              		.loc 1 996 3 discriminator 1 view .LVU1530
 4671 01c0 0222     		movs	r2, #2
 996:Src/app.c     ****   line_nb += 1;
 4672              		.loc 1 996 26 discriminator 1 view .LVU1531
 4673 01c2 C188     		ldrh	r1, [r0, #6]
 996:Src/app.c     ****   line_nb += 1;
 4674              		.loc 1 996 3 discriminator 1 view .LVU1532
 4675 01c4 0C9B     		ldr	r3, [sp, #48]
 4676 01c6 9140     		lsls	r1, r1, r2
 4677 01c8 0020     		movs	r0, #0
 4678 01ca 0093     		str	r3, [sp]
ARM GAS  /tmp/ccHyRziO.s 			page 175


 4679 01cc 394B     		ldr	r3, .L193+68
 4680 01ce FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 4681              	.LVL375:
 997:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 4682              		.loc 1 997 3 is_stmt 1 view .LVU1533
 998:Src/app.c     ****   line_nb += 2;
 4683              		.loc 1 998 3 view .LVU1534
 998:Src/app.c     ****   line_nb += 2;
 4684              		.loc 1 998 26 is_stmt 0 view .LVU1535
 4685 01d2 FFF7FEFF 		bl	UTIL_LCD_GetFont
 4686              	.LVL376:
 998:Src/app.c     ****   line_nb += 2;
 4687              		.loc 1 998 3 discriminator 1 view .LVU1536
 4688 01d6 0D9B     		ldr	r3, [sp, #52]
 998:Src/app.c     ****   line_nb += 2;
 4689              		.loc 1 998 26 discriminator 1 view .LVU1537
 4690 01d8 C188     		ldrh	r1, [r0, #6]
 998:Src/app.c     ****   line_nb += 2;
 4691              		.loc 1 998 3 discriminator 1 view .LVU1538
 4692 01da 0222     		movs	r2, #2
 4693 01dc 01EB8101 		add	r1, r1, r1, lsl #2
 4694 01e0 0020     		movs	r0, #0
 4695 01e2 0093     		str	r3, [sp]
 4696 01e4 344B     		ldr	r3, .L193+72
 4697 01e6 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 4698              	.LVL377:
 999:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 4699              		.loc 1 999 3 is_stmt 1 view .LVU1539
1000:Src/app.c     ****   line_nb += 2;
 4700              		.loc 1 1000 3 view .LVU1540
1000:Src/app.c     ****   line_nb += 2;
 4701              		.loc 1 1000 26 is_stmt 0 view .LVU1541
 4702 01ea FFF7FEFF 		bl	UTIL_LCD_GetFont
 4703              	.LVL378:
1000:Src/app.c     ****   line_nb += 2;
 4704              		.loc 1 1000 3 discriminator 1 view .LVU1542
 4705 01ee B7EEE87A 		vcvt.f64.f32	d7, s17
1000:Src/app.c     ****   line_nb += 2;
 4706              		.loc 1 1000 26 discriminator 1 view .LVU1543
 4707 01f2 C188     		ldrh	r1, [r0, #6]
1000:Src/app.c     ****   line_nb += 2;
 4708              		.loc 1 1000 3 discriminator 1 view .LVU1544
 4709 01f4 314B     		ldr	r3, .L193+76
 4710 01f6 8DED007B 		vstr.64	d7, [sp]
 4711 01fa 0222     		movs	r2, #2
 4712 01fc 0020     		movs	r0, #0
 4713 01fe C1EBC101 		rsb	r1, r1, r1, lsl #3
 4714 0202 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 4715              	.LVL379:
1001:Src/app.c     ****   if (DBG_INFO) {
 4716              		.loc 1 1001 3 is_stmt 1 view .LVU1545
1002:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 4717              		.loc 1 1002 3 view .LVU1546
1010:Src/app.c     ****     if (info->hands[i].is_valid)
 4718              		.loc 1 1010 3 view .LVU1547
1010:Src/app.c     ****     if (info->hands[i].is_valid)
 4719              		.loc 1 1010 17 discriminator 1 view .LVU1548
ARM GAS  /tmp/ccHyRziO.s 			page 176


 4720 0206 129B     		ldr	r3, [sp, #72]
 4721 0208 002B     		cmp	r3, #0
 4722 020a 05DD     		ble	.L183
1011:Src/app.c     ****       display_hand(info, &info->hands[i]);
 4723              		.loc 1 1011 5 view .LVU1549
1011:Src/app.c     ****       display_hand(info, &info->hands[i]);
 4724              		.loc 1 1011 8 is_stmt 0 view .LVU1550
 4725 020c 149B     		ldr	r3, [sp, #80]
 4726 020e 1BB1     		cbz	r3, .L183
1012:Src/app.c     ****   }
 4727              		.loc 1 1012 7 is_stmt 1 view .LVU1551
 4728 0210 14A9     		add	r1, sp, #80
 4729 0212 0BA8     		add	r0, sp, #44
 4730              	.LVL380:
1012:Src/app.c     ****   }
 4731              		.loc 1 1012 7 is_stmt 0 view .LVU1552
 4732 0214 FFF7FEFF 		bl	display_hand
 4733              	.LVL381:
1010:Src/app.c     ****     if (info->hands[i].is_valid)
 4734              		.loc 1 1010 38 is_stmt 1 discriminator 2 view .LVU1553
1010:Src/app.c     ****     if (info->hands[i].is_valid)
 4735              		.loc 1 1010 17 discriminator 1 view .LVU1554
 4736              	.L183:
1015:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 4737              		.loc 1 1015 3 view .LVU1555
1015:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 4738              		.loc 1 1015 3 is_stmt 0 view .LVU1556
 4739              	.LBE659:
 4740              	.LBE670:
1684:Src/app.c     ****     dp_commit_drawing_area();
 4741              		.loc 1 1684 5 is_stmt 1 view .LVU1557
 4742              	.LBB671:
 4743              	.LBI671:
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 4744              		.loc 3 388 27 view .LVU1558
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 4745              		.loc 3 391 5 view .LVU1559
 4746              	.LBB672:
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 4747              		.loc 3 392 8 view .LVU1560
 4748              	.LBE672:
 4749              	.LBE671:
1684:Src/app.c     ****     dp_commit_drawing_area();
 4750              		.loc 1 1684 42 is_stmt 0 view .LVU1561
 4751 0218 D9F80030 		ldr	r3, [r9]
 4752 021c 1D4A     		ldr	r2, .L193+36
 4753 021e 02FB0383 		mla	r3, r2, r3, r8
 4754              	.LVL382:
 4755              	.LBB680:
 4756              	.LBB679:
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 4757              		.loc 3 393 7 is_stmt 1 view .LVU1562
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 4758              		.loc 3 395 7 view .LVU1563
 4759              	.LBB673:
 4760              	.LBI673:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccHyRziO.s 			page 177


 4761              		.loc 4 269 27 view .LVU1564
 4762              	.LBB674:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4763              		.loc 4 271 3 view .LVU1565
 4764              		.syntax unified
 4765              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4766 0222 BFF34F8F 		dsb 0xF
 4767              	@ 0 "" 2
 4768              		.thumb
 4769              		.syntax unified
 4770              	.LBE674:
 4771              	.LBE673:
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 4772              		.loc 3 398 22 is_stmt 0 view .LVU1566
 4773 0226 45F6C05E 		movw	lr, #24000
 4774 022a 4EF001E0 		dls	lr, lr
 4775 022e 244A     		ldr	r2, .L193+80
 4776              	.LVL383:
 4777              	.L185:
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 4778              		.loc 3 397 7 is_stmt 1 view .LVU1567
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 4779              		.loc 3 398 9 view .LVU1568
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 4780              		.loc 3 398 22 is_stmt 0 view .LVU1569
 4781 0230 C2F86832 		str	r3, [r2, #616]
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 4782              		.loc 3 399 9 is_stmt 1 view .LVU1570
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 4783              		.loc 3 399 17 is_stmt 0 view .LVU1571
 4784 0234 2033     		adds	r3, r3, #32
 4785              	.LVL384:
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 4786              		.loc 3 400 9 is_stmt 1 view .LVU1572
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 4787              		.loc 3 401 25 discriminator 1 view .LVU1573
 4788 0236 0FF005C8 		le	lr, .L185
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 4789              		.loc 3 403 7 view .LVU1574
 4790              	.LBB675:
 4791              	.LBI675:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4792              		.loc 4 269 27 view .LVU1575
 4793              	.LBB676:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4794              		.loc 4 271 3 view .LVU1576
 4795              		.syntax unified
 4796              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4797 023a BFF34F8F 		dsb 0xF
 4798              	@ 0 "" 2
 4799              		.thumb
 4800              		.syntax unified
 4801              	.LBE676:
 4802              	.LBE675:
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 4803              		.loc 3 404 7 view .LVU1577
 4804              	.LBB677:
ARM GAS  /tmp/ccHyRziO.s 			page 178


 4805              	.LBI677:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4806              		.loc 4 258 27 view .LVU1578
 4807              	.LBB678:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4808              		.loc 4 260 3 view .LVU1579
 4809              		.syntax unified
 4810              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4811 023e BFF36F8F 		isb 0xF
 4812              	@ 0 "" 2
 4813              	.LVL385:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4814              		.loc 4 260 3 is_stmt 0 view .LVU1580
 4815              		.thumb
 4816              		.syntax unified
 4817              	.LBE678:
 4818              	.LBE677:
 4819              	.LBE679:
 4820              	.LBE680:
1685:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
 4821              		.loc 1 1685 5 is_stmt 1 view .LVU1581
 4822              	.LBB681:
 4823              	.LBI681:
1604:Src/app.c     **** {
 4824              		.loc 1 1604 13 view .LVU1582
 4825              	.LBB682:
1606:Src/app.c     **** 
 4826              		.loc 1 1606 3 view .LVU1583
1608:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
 4827              		.loc 1 1608 3 view .LVU1584
 4828              	.LBB683:
 4829              	.LBI683:
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4830              		.loc 4 960 27 view .LVU1585
 4831              	.LBB684:
 4832              		.loc 4 962 3 view .LVU1586
 4833              		.syntax unified
 4834              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4835 0242 72B6     		cpsid i
 4836              	@ 0 "" 2
 4837              		.thumb
 4838              		.syntax unified
 4839              	.LBE684:
 4840              	.LBE683:
1609:Src/app.c     ****   assert(ret == HAL_OK);
 4841              		.loc 1 1609 3 view .LVU1587
1609:Src/app.c     ****   assert(ret == HAL_OK);
 4842              		.loc 1 1609 9 is_stmt 0 view .LVU1588
 4843 0244 0120     		movs	r0, #1
 4844 0246 FFF7FEFF 		bl	SCRL_ReloadLayer
 4845              	.LVL386:
1610:Src/app.c     ****   __enable_irq();
 4846              		.loc 1 1610 3 is_stmt 1 view .LVU1589
 4847 024a 20B1     		cbz	r0, .L186
1610:Src/app.c     ****   __enable_irq();
 4848              		.loc 1 1610 3 is_stmt 0 discriminator 1 view .LVU1590
 4849 024c 40F24A61 		movw	r1, #1610
ARM GAS  /tmp/ccHyRziO.s 			page 179


 4850 0250 114B     		ldr	r3, .L193+40
 4851 0252 1C4A     		ldr	r2, .L193+84
 4852 0254 04E7     		b	.L192
 4853              	.L186:
1611:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
 4854              		.loc 1 1611 3 is_stmt 1 view .LVU1591
 4855              	.LBB685:
 4856              	.LBI685:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4857              		.loc 4 949 27 view .LVU1592
 4858              	.LBB686:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4859              		.loc 4 951 3 view .LVU1593
 4860              		.syntax unified
 4861              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4862 0256 62B6     		cpsie i
 4863              	@ 0 "" 2
 4864              		.thumb
 4865              		.syntax unified
 4866              	.LBE686:
 4867              	.LBE685:
1612:Src/app.c     **** }
 4868              		.loc 1 1612 3 view .LVU1594
1612:Src/app.c     **** }
 4869              		.loc 1 1612 28 is_stmt 0 view .LVU1595
 4870 0258 D9F80030 		ldr	r3, [r9]
 4871 025c C3F10103 		rsb	r3, r3, #1
1612:Src/app.c     **** }
 4872              		.loc 1 1612 24 view .LVU1596
 4873 0260 C9F80030 		str	r3, [r9]
 4874              	.LVL387:
1612:Src/app.c     **** }
 4875              		.loc 1 1612 24 view .LVU1597
 4876              	.LBE682:
 4877              	.LBE681:
1686:Src/app.c     ****   }
 4878              		.loc 1 1686 5 is_stmt 1 view .LVU1598
1686:Src/app.c     ****   }
 4879              		.loc 1 1686 15 is_stmt 0 view .LVU1599
 4880 0264 FFF7FEFF 		bl	HAL_GetTick
 4881              	.LVL388:
1686:Src/app.c     ****   }
 4882              		.loc 1 1686 13 discriminator 1 view .LVU1600
 4883 0268 A0EB0A04 		sub	r4, r0, r10
 4884              	.LVL389:
1666:Src/app.c     ****   {
 4885              		.loc 1 1666 9 is_stmt 1 view .LVU1601
1668:Src/app.c     ****     assert(ret == pdTRUE);
 4886              		.loc 1 1668 9 is_stmt 0 view .LVU1602
 4887 026c EDE6     		b	.L187
 4888              	.L194:
 4889 026e 00BF     		.align	3
 4890              	.L193:
 4891 0270 00000000 		.word	0
 4892 0274 00005940 		.word	1079574528
 4893 0278 00000000 		.word	on_ld_toggle_button_click
 4894 027c 00000000 		.word	disp
ARM GAS  /tmp/ccHyRziO.s 			page 180


 4895 0280 00000000 		.word	on_pd_toggle_button_click
 4896 0284 00000000 		.word	.LC4
 4897 0288 00000000 		.word	__func__.19
 4898 028c 0E000000 		.word	.LC5
 4899 0290 A8000000 		.word	disp+168
 4900 0294 00B80B00 		.word	768000
 4901 0298 35010000 		.word	.LC15
 4902 029c 00000000 		.word	__func__.15
 4903 02a0 00000000 		.word	cpu_load
 4904 02a4 00007A44 		.word	1148846080
 4905 02a8 00000000 		.word	.LC19
 4906 02ac 09000000 		.word	.LC20
 4907 02b0 13000000 		.word	.LC21
 4908 02b4 1E000000 		.word	.LC22
 4909 02b8 28000000 		.word	.LC23
 4910 02bc 32000000 		.word	.LC24
 4911 02c0 00ED00E0 		.word	-536810240
 4912 02c4 00000000 		.word	__func__.14
 4913 02c8 00000000 		.word	lcd_fg_buffer_rd_idx
 4914 02cc 00180F00 		.word	lcd_fg_buffer
 4915              		.cfi_endproc
 4916              	.LFE7395:
 4918              		.section	.rodata.app_run.str1.1,"aMS",%progbits,1
 4919              	.LC25:
 4920 0000 496E6974 		.ascii	"Init application\000"
 4920      20617070 
 4920      6C696361 
 4920      74696F6E 
 4920      00
 4921              	.LC26:
 4922 0011 72657420 		.ascii	"ret == 0\000"
 4922      3D3D2030 
 4922      00
 4923              	.LC27:
 4924 001a 6973705F 		.ascii	"isp_sem\000"
 4924      73656D00 
 4925              	.LC28:
 4926 0022 64697370 		.ascii	"disp.update\000"
 4926      2E757064 
 4926      61746500 
 4927              	.LC29:
 4928 002e 64697370 		.ascii	"disp.lock\000"
 4928      2E6C6F63 
 4928      6B00
 4929              	.LC30:
 4930 0038 6E6E00   		.ascii	"nn\000"
 4931              	.LC31:
 4932 003b 68646C20 		.ascii	"hdl != NULL\000"
 4932      213D204E 
 4932      554C4C00 
 4933              	.LC32:
 4934 0047 647000   		.ascii	"dp\000"
 4935              	.LC33:
 4936 004a 69737000 		.ascii	"isp\000"
 4937              		.section	.text.app_run,"ax",%progbits
 4938              		.align	1
 4939              		.global	app_run
ARM GAS  /tmp/ccHyRziO.s 			page 181


 4940              		.syntax unified
 4941              		.thumb
 4942              		.thumb_func
 4944              	app_run:
 4945              	.LFB7398:
1704:Src/app.c     ****   }
1705:Src/app.c     **** }
1706:Src/app.c     **** 
1707:Src/app.c     **** /**
1708:Src/app.c     ****  * @brief Initializes the display controller (SCRL) and graphics library (UTIL_LCD).
1709:Src/app.c     ****  * @details Configures the two screen layers: Layer 0 for the background video and
1710:Src/app.c     ****  * Layer 1 for the transparent UI overlay.
1711:Src/app.c     ****  */
1712:Src/app.c     **** static void Display_init()
1713:Src/app.c     **** {
1714:Src/app.c     ****   SCRL_LayerConfig layers_config[2] = {
1715:Src/app.c     ****     {
1716:Src/app.c     ****       .origin = {lcd_bg_area.X0, lcd_bg_area.Y0},
1717:Src/app.c     ****       .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1718:Src/app.c     ****       .format = SCRL_ARGB8888,
1719:Src/app.c     ****       .address = lcd_bg_buffer[lcd_bg_buffer_disp_idx],
1720:Src/app.c     ****     },
1721:Src/app.c     ****     {
1722:Src/app.c     ****       .origin = {lcd_fg_area.X0, lcd_fg_area.Y0},
1723:Src/app.c     ****       .size = {lcd_fg_area.XSize, lcd_fg_area.YSize},
1724:Src/app.c     ****       .format = SCRL_ARGB4444,
1725:Src/app.c     ****       .address = lcd_fg_buffer[1],
1726:Src/app.c     ****     },
1727:Src/app.c     ****   };
1728:Src/app.c     ****   SCRL_ScreenConfig screen_config = {
1729:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1730:Src/app.c     **** #ifdef SCR_LIB_USE_SPI
1731:Src/app.c     ****     .format = SCRL_RGB565,
1732:Src/app.c     **** #else
1733:Src/app.c     ****      .format = SCRL_YUV422, /* Use SCRL_RGB565 if host support this format to reduce cpu load */
1734:Src/app.c     **** #endif
1735:Src/app.c     ****     .address = screen_buffer,
1736:Src/app.c     ****     .fps = CAMERA_FPS,
1737:Src/app.c     ****   };
1738:Src/app.c     ****   int ret;
1739:Src/app.c     **** 
1740:Src/app.c     ****   ret = SCRL_Init((SCRL_LayerConfig *[2]){&layers_config[0], &layers_config[1]}, &screen_config);
1741:Src/app.c     ****   assert(ret == 0);
1742:Src/app.c     **** 
1743:Src/app.c     ****   UTIL_LCD_SetLayer(SCRL_LAYER_1);
1744:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
1745:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
1746:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
1747:Src/app.c     **** }
1748:Src/app.c     **** 
1749:Src/app.c     **** /**
1750:Src/app.c     ****  * @brief Main application entry point.
1751:Src/app.c     ****  * @details Initializes all hardware, software modules, and RTOS components,
1752:Src/app.c     ****  * then creates the three main application threads.
1753:Src/app.c     ****  */
1754:Src/app.c     **** void app_run()
1755:Src/app.c     **** {
ARM GAS  /tmp/ccHyRziO.s 			page 182


 4946              		.loc 1 1755 1 is_stmt 1 view -0
 4947              		.cfi_startproc
 4948              		@ args = 0, pretend = 0, frame = 56
 4949              		@ frame_needed = 0, uses_anonymous_args = 0
1756:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 4950              		.loc 1 1756 3 view .LVU1604
 4951              	.LVL390:
1757:Src/app.c     ****   UBaseType_t dp_priority = FREERTOS_PRIORITY(-2);
 4952              		.loc 1 1757 3 view .LVU1605
1758:Src/app.c     ****   UBaseType_t nn_priority = FREERTOS_PRIORITY(1);
 4953              		.loc 1 1758 3 view .LVU1606
1759:Src/app.c     ****   TaskHandle_t hdl;
 4954              		.loc 1 1759 3 view .LVU1607
1760:Src/app.c     ****   int ret;
 4955              		.loc 1 1760 3 view .LVU1608
1761:Src/app.c     **** 
1762:Src/app.c     ****   printf("Init application\n");
 4956              		.loc 1 1762 3 view .LVU1609
1755:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 4957              		.loc 1 1755 1 is_stmt 0 view .LVU1610
 4958 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4959              		.cfi_def_cfa_offset 28
 4960              		.cfi_offset 4, -28
 4961              		.cfi_offset 5, -24
 4962              		.cfi_offset 6, -20
 4963              		.cfi_offset 7, -16
 4964              		.cfi_offset 8, -12
 4965              		.cfi_offset 9, -8
 4966              		.cfi_offset 14, -4
1763:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
1764:Src/app.c     ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 4967              		.loc 1 1764 12 view .LVU1611
 4968 0004 854D     		ldr	r5, .L215
1755:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 4969              		.loc 1 1755 1 view .LVU1612
 4970 0006 93B0     		sub	sp, sp, #76
 4971              		.cfi_def_cfa_offset 104
1762:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
 4972              		.loc 1 1762 3 view .LVU1613
 4973 0008 8548     		ldr	r0, .L215+4
 4974 000a FFF7FEFF 		bl	puts
 4975              	.LVL391:
 4976              		.loc 1 1764 3 is_stmt 1 view .LVU1614
 4977              		.loc 1 1764 12 is_stmt 0 view .LVU1615
 4978 000e D5F8FC30 		ldr	r3, [r5, #252]
1765:Src/app.c     **** 
1766:Src/app.c     ****   /* screen init */
1767:Src/app.c     ****   memset(lcd_bg_buffer, 0, sizeof(lcd_bg_buffer));
 4979              		.loc 1 1767 3 view .LVU1616
 4980 0012 844C     		ldr	r4, .L215+8
1764:Src/app.c     **** 
 4981              		.loc 1 1764 20 view .LVU1617
 4982 0014 43F08073 		orr	r3, r3, #16777216
 4983              		.loc 1 1767 3 view .LVU1618
 4984 0018 0021     		movs	r1, #0
 4985 001a 2046     		mov	r0, r4
 4986 001c 824A     		ldr	r2, .L215+12
ARM GAS  /tmp/ccHyRziO.s 			page 183


1764:Src/app.c     **** 
 4987              		.loc 1 1764 20 view .LVU1619
 4988 001e C5F8FC30 		str	r3, [r5, #252]
 4989              		.loc 1 1767 3 is_stmt 1 view .LVU1620
 4990 0022 FFF7FEFF 		bl	memset
 4991              	.LVL392:
1768:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_bg_buffer, sizeof(lcd_bg_buffer)));
 4992              		.loc 1 1768 3 view .LVU1621
 4993              		.loc 1 1768 3 view .LVU1622
 4994              		.loc 1 1768 3 discriminator 1 view .LVU1623
 4995              	.LBB709:
 4996              	.LBI709:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 4997              		.loc 3 418 27 view .LVU1624
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 4998              		.loc 3 421 5 view .LVU1625
 4999              	.LBB710:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 5000              		.loc 3 422 8 view .LVU1626
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5001              		.loc 3 423 7 view .LVU1627
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5002              		.loc 3 425 7 view .LVU1628
 5003              	.LBB711:
 5004              	.LBI711:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5005              		.loc 4 269 27 view .LVU1629
 5006              	.LBB712:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5007              		.loc 4 271 3 view .LVU1630
 5008              		.syntax unified
 5009              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5010 0026 BFF34F8F 		dsb 0xF
 5011              	@ 0 "" 2
 5012              		.thumb
 5013              		.syntax unified
 5014              	.LBE712:
 5015              	.LBE711:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5016              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1631
 5017 002a DFF880E2 		ldr	lr, .L215+144
 5018              	.LBB714:
 5019              	.LBB713:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5020              		.loc 4 272 1 view .LVU1632
 5021 002e 0023     		movs	r3, #0
 5022              	.LBE713:
 5023              	.LBE714:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5024              		.loc 3 431 25 discriminator 1 view .LVU1633
 5025 0030 4EF001E0 		dls	lr, lr
 5026              	.LVL393:
 5027              	.L196:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5028              		.loc 3 431 25 discriminator 1 view .LVU1634
 5029 0034 E218     		adds	r2, r4, r3
 5030              	.LVL394:
ARM GAS  /tmp/ccHyRziO.s 			page 184


 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 5031              		.loc 3 427 7 is_stmt 1 view .LVU1635
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 5032              		.loc 3 428 9 view .LVU1636
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 5033              		.loc 3 428 23 is_stmt 0 view .LVU1637
 5034 0036 C5F87022 		str	r2, [r5, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 5035              		.loc 3 429 9 is_stmt 1 view .LVU1638
 5036              	.LVL395:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 5037              		.loc 3 430 9 view .LVU1639
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5038              		.loc 3 431 25 discriminator 1 view .LVU1640
 5039 003a 2033     		adds	r3, r3, #32
 5040              	.LVL396:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5041              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1641
 5042 003c 0FF007C0 		le	lr, .L196
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 5043              		.loc 3 433 7 is_stmt 1 view .LVU1642
 5044              	.LBB715:
 5045              	.LBI715:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5046              		.loc 4 269 27 view .LVU1643
 5047              	.LBB716:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5048              		.loc 4 271 3 view .LVU1644
 5049              		.syntax unified
 5050              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5051 0040 BFF34F8F 		dsb 0xF
 5052              	@ 0 "" 2
 5053              		.thumb
 5054              		.syntax unified
 5055              	.LBE716:
 5056              	.LBE715:
 5057              		.loc 3 434 7 view .LVU1645
 5058              	.LBB717:
 5059              	.LBI717:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5060              		.loc 4 258 27 view .LVU1646
 5061              	.LBB718:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5062              		.loc 4 260 3 view .LVU1647
 5063              		.syntax unified
 5064              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5065 0044 BFF36F8F 		isb 0xF
 5066              	@ 0 "" 2
 5067              	.LVL397:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5068              		.loc 4 260 3 is_stmt 0 view .LVU1648
 5069              		.thumb
 5070              		.syntax unified
 5071              	.LBE718:
 5072              	.LBE717:
 5073              	.LBE710:
 5074              	.LBE709:
ARM GAS  /tmp/ccHyRziO.s 			page 185


 5075              		.loc 1 1768 3 is_stmt 1 discriminator 3 view .LVU1649
1769:Src/app.c     ****   memset(lcd_fg_buffer, 0, sizeof(lcd_fg_buffer));
 5076              		.loc 1 1769 3 view .LVU1650
 5077 0048 784D     		ldr	r5, .L215+16
 5078 004a 0021     		movs	r1, #0
 5079 004c 2846     		mov	r0, r5
 5080 004e 784A     		ldr	r2, .L215+20
 5081 0050 FFF7FEFF 		bl	memset
 5082              	.LVL398:
1770:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_fg_buffer, sizeof(lcd_fg_buffer)));
 5083              		.loc 1 1770 3 view .LVU1651
 5084              		.loc 1 1770 3 view .LVU1652
 5085              		.loc 1 1770 3 discriminator 1 view .LVU1653
 5086              	.LBB719:
 5087              	.LBI719:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 5088              		.loc 3 418 27 view .LVU1654
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 5089              		.loc 3 421 5 view .LVU1655
 5090              	.LBB720:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 5091              		.loc 3 422 8 view .LVU1656
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5092              		.loc 3 423 7 view .LVU1657
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5093              		.loc 3 425 7 view .LVU1658
 5094              	.LBB721:
 5095              	.LBI721:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5096              		.loc 4 269 27 view .LVU1659
 5097              	.LBB722:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5098              		.loc 4 271 3 view .LVU1660
 5099              		.syntax unified
 5100              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5101 0054 BFF34F8F 		dsb 0xF
 5102              	@ 0 "" 2
 5103              		.thumb
 5104              		.syntax unified
 5105              	.LBE722:
 5106              	.LBE721:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5107              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1661
 5108 0058 4BF6803E 		movw	lr, #48000
 5109              	.LBB724:
 5110              	.LBB723:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5111              		.loc 4 272 1 view .LVU1662
 5112 005c 0023     		movs	r3, #0
 5113              	.LBE723:
 5114              	.LBE724:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5115              		.loc 3 431 25 discriminator 1 view .LVU1663
 5116 005e 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 5117              		.loc 3 428 23 view .LVU1664
 5118 0062 6E4A     		ldr	r2, .L215
ARM GAS  /tmp/ccHyRziO.s 			page 186


 5119              	.LVL399:
 5120              	.L197:
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 5121              		.loc 3 428 23 view .LVU1665
 5122 0064 E918     		adds	r1, r5, r3
 5123              	.LVL400:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 5124              		.loc 3 427 7 is_stmt 1 view .LVU1666
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 5125              		.loc 3 428 9 view .LVU1667
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 5126              		.loc 3 428 23 is_stmt 0 view .LVU1668
 5127 0066 C2F87012 		str	r1, [r2, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 5128              		.loc 3 429 9 is_stmt 1 view .LVU1669
 5129              	.LVL401:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 5130              		.loc 3 430 9 view .LVU1670
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5131              		.loc 3 431 25 discriminator 1 view .LVU1671
 5132 006a 2033     		adds	r3, r3, #32
 5133              	.LVL402:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 5134              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1672
 5135 006c 0FF007C0 		le	lr, .L197
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 5136              		.loc 3 433 7 is_stmt 1 view .LVU1673
 5137              	.LBB725:
 5138              	.LBI725:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5139              		.loc 4 269 27 view .LVU1674
 5140              	.LBB726:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5141              		.loc 4 271 3 view .LVU1675
 5142              		.syntax unified
 5143              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5144 0070 BFF34F8F 		dsb 0xF
 5145              	@ 0 "" 2
 5146              		.thumb
 5147              		.syntax unified
 5148              	.LBE726:
 5149              	.LBE725:
 5150              		.loc 3 434 7 view .LVU1676
 5151              	.LBB727:
 5152              	.LBI727:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5153              		.loc 4 258 27 view .LVU1677
 5154              	.LBB728:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5155              		.loc 4 260 3 view .LVU1678
 5156              		.syntax unified
 5157              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5158 0074 BFF36F8F 		isb 0xF
 5159              	@ 0 "" 2
 5160              	.LVL403:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5161              		.loc 4 260 3 is_stmt 0 view .LVU1679
ARM GAS  /tmp/ccHyRziO.s 			page 187


 5162              		.thumb
 5163              		.syntax unified
 5164              	.LBE728:
 5165              	.LBE727:
 5166              	.LBE720:
 5167              	.LBE719:
 5168              		.loc 1 1770 3 is_stmt 1 discriminator 3 view .LVU1680
1771:Src/app.c     ****   Display_init();
 5169              		.loc 1 1771 3 view .LVU1681
 5170              	.LBB729:
 5171              	.LBI729:
1712:Src/app.c     **** {
 5172              		.loc 1 1712 13 view .LVU1682
 5173              	.LBB730:
1714:Src/app.c     ****     {
 5174              		.loc 1 1714 3 view .LVU1683
1714:Src/app.c     ****     {
 5175              		.loc 1 1714 20 is_stmt 0 view .LVU1684
 5176 0078 0320     		movs	r0, #3
 5177 007a 0021     		movs	r1, #0
 5178 007c 0126     		movs	r6, #1
1728:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 5179              		.loc 1 1728 21 view .LVU1685
 5180 007e 0227     		movs	r7, #2
 5181 0080 4FF01E09 		mov	r9, #30
1714:Src/app.c     ****     {
 5182              		.loc 1 1714 20 view .LVU1686
 5183 0084 8DF83000 		strb	r0, [sp, #48]
1719:Src/app.c     ****     },
 5184              		.loc 1 1719 31 view .LVU1687
 5185 0088 6A48     		ldr	r0, .L215+24
1714:Src/app.c     ****     {
 5186              		.loc 1 1714 20 view .LVU1688
 5187 008a 6B4A     		ldr	r2, .L215+28
1719:Src/app.c     ****     },
 5188              		.loc 1 1719 18 view .LVU1689
 5189 008c 0068     		ldr	r0, [r0]
1714:Src/app.c     ****     {
 5190              		.loc 1 1714 20 view .LVU1690
 5191 008e CDE90A12 		strd	r1, r2, [sp, #40]
1719:Src/app.c     ****     },
 5192              		.loc 1 1719 18 view .LVU1691
 5193 0092 03FB0044 		mla	r4, r3, r0, r4
1714:Src/app.c     ****     {
 5194              		.loc 1 1714 20 view .LVU1692
 5195 0096 694B     		ldr	r3, .L215+32
 5196 0098 CDE90D41 		strd	r4, r1, [sp, #52]
 5197 009c 1193     		str	r3, [sp, #68]
1728:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 5198              		.loc 1 1728 3 is_stmt 1 view .LVU1693
1728:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 5199              		.loc 1 1728 21 is_stmt 0 view .LVU1694
 5200 009e 684B     		ldr	r3, .L215+36
1740:Src/app.c     ****   assert(ret == 0);
 5201              		.loc 1 1740 9 view .LVU1695
 5202 00a0 06A9     		add	r1, sp, #24
1728:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
ARM GAS  /tmp/ccHyRziO.s 			page 188


 5203              		.loc 1 1728 21 view .LVU1696
 5204 00a2 0893     		str	r3, [sp, #32]
1740:Src/app.c     ****   assert(ret == 0);
 5205              		.loc 1 1740 42 view .LVU1697
 5206 00a4 0AAB     		add	r3, sp, #40
 5207 00a6 0493     		str	r3, [sp, #16]
1740:Src/app.c     ****   assert(ret == 0);
 5208              		.loc 1 1740 9 view .LVU1698
 5209 00a8 04A8     		add	r0, sp, #16
1740:Src/app.c     ****   assert(ret == 0);
 5210              		.loc 1 1740 42 view .LVU1699
 5211 00aa 0EAB     		add	r3, sp, #56
1714:Src/app.c     ****     {
 5212              		.loc 1 1714 20 view .LVU1700
 5213 00ac 0F92     		str	r2, [sp, #60]
 5214 00ae 8DF84060 		strb	r6, [sp, #64]
1728:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 5215              		.loc 1 1728 21 view .LVU1701
 5216 00b2 0692     		str	r2, [sp, #24]
 5217 00b4 8DF81C70 		strb	r7, [sp, #28]
 5218 00b8 ADF82490 		strh	r9, [sp, #36]	@ movhi
1738:Src/app.c     **** 
 5219              		.loc 1 1738 3 is_stmt 1 view .LVU1702
1740:Src/app.c     ****   assert(ret == 0);
 5220              		.loc 1 1740 3 view .LVU1703
1740:Src/app.c     ****   assert(ret == 0);
 5221              		.loc 1 1740 42 is_stmt 0 view .LVU1704
 5222 00bc 0593     		str	r3, [sp, #20]
1740:Src/app.c     ****   assert(ret == 0);
 5223              		.loc 1 1740 9 view .LVU1705
 5224 00be FFF7FEFF 		bl	SCRL_Init
 5225              	.LVL404:
1741:Src/app.c     **** 
 5226              		.loc 1 1741 3 is_stmt 1 view .LVU1706
 5227 00c2 0446     		mov	r4, r0
 5228 00c4 30B1     		cbz	r0, .L198
1741:Src/app.c     **** 
 5229              		.loc 1 1741 3 is_stmt 0 discriminator 1 view .LVU1707
 5230 00c6 40F2CD61 		movw	r1, #1741
 5231 00ca 5E4B     		ldr	r3, .L215+40
 5232 00cc 5E4A     		ldr	r2, .L215+44
 5233              	.LVL405:
 5234              	.L214:
1741:Src/app.c     **** 
 5235              		.loc 1 1741 3 discriminator 1 view .LVU1708
 5236              	.LBE730:
 5237              	.LBE729:
1772:Src/app.c     **** 
1773:Src/app.c     ****   /* create buffer queues */
1774:Src/app.c     ****   ret = bqueue_init(&nn_input_queue, 2, (uint8_t *[2]){nn_input_buffers[0], nn_input_buffers[1]});
1775:Src/app.c     ****   assert(ret == 0);
 5238              		.loc 1 1775 3 discriminator 1 view .LVU1709
 5239 00ce 5F48     		ldr	r0, .L215+48
 5240 00d0 FFF7FEFF 		bl	__assert_func
 5241              	.LVL406:
 5242              	.L198:
 5243              	.LBB733:
ARM GAS  /tmp/ccHyRziO.s 			page 189


 5244              	.LBB731:
1743:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 5245              		.loc 1 1743 3 is_stmt 1 view .LVU1710
 5246 00d4 3046     		mov	r0, r6
 5247              	.LVL407:
1743:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 5248              		.loc 1 1743 3 is_stmt 0 view .LVU1711
 5249 00d6 FFF7FEFF 		bl	UTIL_LCD_SetLayer
 5250              	.LVL408:
1744:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
 5251              		.loc 1 1744 3 is_stmt 1 view .LVU1712
 5252 00da 2046     		mov	r0, r4
 5253 00dc FFF7FEFF 		bl	UTIL_LCD_Clear
 5254              	.LVL409:
1745:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 5255              		.loc 1 1745 3 view .LVU1713
 5256              	.LBE731:
 5257              	.LBE733:
 5258              	.LBB734:
 5259              	.LBB735:
 569:Src/app.c     ****   if (!bq->free)
 5260              		.loc 1 569 14 is_stmt 0 view .LVU1714
 5261 00e0 DFF8CC81 		ldr	r8, .L215+148
 5262              	.LBE735:
 5263              	.LBE734:
 5264              	.LBB740:
 5265              	.LBB732:
1745:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 5266              		.loc 1 1745 3 view .LVU1715
 5267 00e4 5A48     		ldr	r0, .L215+52
 5268 00e6 FFF7FEFF 		bl	UTIL_LCD_SetFont
 5269              	.LVL410:
1746:Src/app.c     **** }
 5270              		.loc 1 1746 3 is_stmt 1 view .LVU1716
 5271 00ea 4FF0FF30 		mov	r0, #-1
 5272 00ee FFF7FEFF 		bl	UTIL_LCD_SetTextColor
 5273              	.LVL411:
1746:Src/app.c     **** }
 5274              		.loc 1 1746 3 is_stmt 0 view .LVU1717
 5275              	.LBE732:
 5276              	.LBE740:
1774:Src/app.c     ****   assert(ret == 0);
 5277              		.loc 1 1774 3 is_stmt 1 view .LVU1718
 5278              	.LBB741:
 5279              	.LBI734:
 562:Src/app.c     **** {
 5280              		.loc 1 562 12 view .LVU1719
 5281              	.LBB736:
 564:Src/app.c     **** 
 5282              		.loc 1 564 3 view .LVU1720
 566:Src/app.c     ****     return -1;
 5283              		.loc 1 566 3 view .LVU1721
 569:Src/app.c     ****   if (!bq->free)
 5284              		.loc 1 569 3 view .LVU1722
 569:Src/app.c     ****   if (!bq->free)
 5285              		.loc 1 569 14 is_stmt 0 view .LVU1723
 5286 00f2 4246     		mov	r2, r8
ARM GAS  /tmp/ccHyRziO.s 			page 190


 5287 00f4 3946     		mov	r1, r7
 5288 00f6 3846     		mov	r0, r7
 5289 00f8 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 5290              	.LVL412:
 569:Src/app.c     ****   if (!bq->free)
 5291              		.loc 1 569 12 discriminator 1 view .LVU1724
 5292 00fc A8F10405 		sub	r5, r8, #4
 5293 0100 48F8040C 		str	r0, [r8, #-4]
 570:Src/app.c     ****     goto free_sem_error;
 5294              		.loc 1 570 3 is_stmt 1 view .LVU1725
 570:Src/app.c     ****     goto free_sem_error;
 5295              		.loc 1 570 6 is_stmt 0 view .LVU1726
 5296 0104 58B1     		cbz	r0, .L199
 572:Src/app.c     ****   if (!bq->ready)
 5297              		.loc 1 572 3 is_stmt 1 view .LVU1727
 572:Src/app.c     ****   if (!bq->ready)
 5298              		.loc 1 572 15 is_stmt 0 view .LVU1728
 5299 0106 2146     		mov	r1, r4
 5300 0108 3846     		mov	r0, r7
 5301 010a 08F15402 		add	r2, r8, #84
 5302 010e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 5303              	.LVL413:
 572:Src/app.c     ****   if (!bq->ready)
 5304              		.loc 1 572 13 discriminator 1 view .LVU1729
 5305 0112 6865     		str	r0, [r5, #84]
 573:Src/app.c     ****     goto ready_sem_error;
 5306              		.loc 1 573 3 is_stmt 1 view .LVU1730
 573:Src/app.c     ****     goto ready_sem_error;
 5307              		.loc 1 573 6 is_stmt 0 view .LVU1731
 5308 0114 40B9     		cbnz	r0, .L200
 574:Src/app.c     **** 
 5309              		.loc 1 574 5 is_stmt 1 view .LVU1732
 5310              	.LDL1:
 587:Src/app.c     **** free_sem_error:
 5311              		.loc 1 587 3 view .LVU1733
 5312 0116 58F8040C 		ldr	r0, [r8, #-4]
 5313 011a FFF7FEFF 		bl	vQueueDelete
 5314              	.LVL414:
 587:Src/app.c     **** free_sem_error:
 5315              		.loc 1 587 3 is_stmt 0 view .LVU1734
 5316              	.LBE736:
 5317              	.LBE741:
 5318              		.loc 1 1775 3 is_stmt 1 view .LVU1735
 5319              	.L199:
 5320              		.loc 1 1775 3 is_stmt 0 discriminator 1 view .LVU1736
 5321 011e 40F2EF61 		movw	r1, #1775
 5322 0122 484B     		ldr	r3, .L215+40
 5323 0124 4B4A     		ldr	r2, .L215+56
 5324 0126 D2E7     		b	.L214
 5325              	.LVL415:
 5326              	.L200:
 5327              	.LBB742:
 5328              	.LBB737:
 576:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 5329              		.loc 1 576 3 is_stmt 1 view .LVU1737
 579:Src/app.c     ****   }
 5330              		.loc 1 579 20 is_stmt 0 view .LVU1738
ARM GAS  /tmp/ccHyRziO.s 			page 191


 5331 0128 4B4B     		ldr	r3, .L215+60
 5332              	.LBE737:
 5333              	.LBE742:
 5334              	.LBB743:
 5335              	.LBB744:
 517:Src/app.c     **** }
 5336              		.loc 1 517 3 view .LVU1739
 5337 012a E022     		movs	r2, #224
 5338 012c 2146     		mov	r1, r4
 5339              	.LBE744:
 5340              	.LBE743:
 5341              	.LBB747:
 5342              	.LBB738:
 579:Src/app.c     ****   }
 5343              		.loc 1 579 20 view .LVU1740
 5344 012e C5F8AC30 		str	r3, [r5, #172]
 5345              	.LBE738:
 5346              	.LBE747:
 5347              	.LBB748:
 5348              	.LBB745:
 517:Src/app.c     **** }
 5349              		.loc 1 517 3 view .LVU1741
 5350 0132 4A48     		ldr	r0, .L215+64
 5351              	.LBE745:
 5352              	.LBE748:
 5353              	.LBB749:
 5354              	.LBB739:
 579:Src/app.c     ****   }
 5355              		.loc 1 579 20 view .LVU1742
 5356 0134 03F5D833 		add	r3, r3, #110592
 581:Src/app.c     ****   bq->ready_idx = 0;
 5357              		.loc 1 581 16 view .LVU1743
 5358 0138 C5E92C34 		strd	r3, r4, [r5, #176]
 576:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 5359              		.loc 1 576 17 view .LVU1744
 5360 013c C5F8A870 		str	r7, [r5, #168]
 577:Src/app.c     ****     assert(buffers[i]);
 5361              		.loc 1 577 3 is_stmt 1 view .LVU1745
 5362              	.LVL416:
 577:Src/app.c     ****     assert(buffers[i]);
 5363              		.loc 1 577 17 discriminator 1 view .LVU1746
 578:Src/app.c     ****     bq->buffers[i] = buffers[i];
 5364              		.loc 1 578 5 view .LVU1747
 579:Src/app.c     ****   }
 5365              		.loc 1 579 5 view .LVU1748
 577:Src/app.c     ****     assert(buffers[i]);
 5366              		.loc 1 577 31 discriminator 2 view .LVU1749
 577:Src/app.c     ****     assert(buffers[i]);
 5367              		.loc 1 577 17 discriminator 1 view .LVU1750
 578:Src/app.c     ****     bq->buffers[i] = buffers[i];
 5368              		.loc 1 578 5 view .LVU1751
 579:Src/app.c     ****   }
 5369              		.loc 1 579 5 view .LVU1752
 582:Src/app.c     **** 
 5370              		.loc 1 582 3 view .LVU1753
 582:Src/app.c     **** 
 5371              		.loc 1 582 17 is_stmt 0 view .LVU1754
ARM GAS  /tmp/ccHyRziO.s 			page 192


 5372 0140 C5F8B840 		str	r4, [r5, #184]
 584:Src/app.c     **** 
 5373              		.loc 1 584 3 is_stmt 1 view .LVU1755
 5374              	.LVL417:
 584:Src/app.c     **** 
 5375              		.loc 1 584 3 is_stmt 0 view .LVU1756
 5376              	.LBE739:
 5377              	.LBE749:
 5378              		.loc 1 1775 3 is_stmt 1 view .LVU1757
1776:Src/app.c     **** 
1777:Src/app.c     ****   cpuload_init(&cpu_load);
 5379              		.loc 1 1777 3 view .LVU1758
 5380              	.LBB750:
 5381              	.LBI743:
 515:Src/app.c     **** {
 5382              		.loc 1 515 13 view .LVU1759
 5383              	.LBB746:
 517:Src/app.c     **** }
 5384              		.loc 1 517 3 view .LVU1760
 5385 0144 FFF7FEFF 		bl	memset
 5386              	.LVL418:
 517:Src/app.c     **** }
 5387              		.loc 1 517 3 is_stmt 0 view .LVU1761
 5388              	.LBE746:
 5389              	.LBE750:
1778:Src/app.c     **** 
1779:Src/app.c     ****   /*** Camera Init ************************************************************/  
1780:Src/app.c     ****   CAM_Init();
 5390              		.loc 1 1780 3 is_stmt 1 view .LVU1762
 5391 0148 FFF7FEFF 		bl	CAM_Init
 5392              	.LVL419:
1781:Src/app.c     **** 
1782:Src/app.c     ****   /* sems + mutex init */
1783:Src/app.c     ****   isp_sem = xSemaphoreCreateCountingStatic(1, 0, &isp_sem_buffer);
 5393              		.loc 1 1783 3 view .LVU1763
 5394              		.loc 1 1783 13 is_stmt 0 view .LVU1764
 5395 014c 2146     		mov	r1, r4
 5396 014e 3046     		mov	r0, r6
 5397 0150 434A     		ldr	r2, .L215+68
 5398 0152 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 5399              	.LVL420:
 5400              		.loc 1 1783 11 discriminator 1 view .LVU1765
 5401 0156 434B     		ldr	r3, .L215+72
 5402 0158 1860     		str	r0, [r3]
1784:Src/app.c     ****   assert(isp_sem);
 5403              		.loc 1 1784 3 is_stmt 1 view .LVU1766
 5404 015a 20B9     		cbnz	r0, .L213
 5405              		.loc 1 1784 3 is_stmt 0 discriminator 1 view .LVU1767
 5406 015c 4FF4DF61 		mov	r1, #1784
 5407 0160 414B     		ldr	r3, .L215+76
 5408 0162 3C4A     		ldr	r2, .L215+56
 5409 0164 B3E7     		b	.L214
 5410              	.L213:
1785:Src/app.c     ****   disp.update = xSemaphoreCreateCountingStatic(1, 0, &disp.update_buffer);
 5411              		.loc 1 1785 3 is_stmt 1 view .LVU1768
 5412              		.loc 1 1785 17 is_stmt 0 view .LVU1769
 5413 0166 414D     		ldr	r5, .L215+80
ARM GAS  /tmp/ccHyRziO.s 			page 193


 5414 0168 2146     		mov	r1, r4
 5415 016a 2A46     		mov	r2, r5
 5416 016c 3046     		mov	r0, r6
 5417 016e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 5418              	.LVL421:
 5419              		.loc 1 1785 15 discriminator 1 view .LVU1770
 5420 0172 2F1F     		subs	r7, r5, #4
 5421 0174 45F8040C 		str	r0, [r5, #-4]
1786:Src/app.c     ****   assert(disp.update);
 5422              		.loc 1 1786 3 is_stmt 1 view .LVU1771
 5423 0178 20B9     		cbnz	r0, .L203
 5424              		.loc 1 1786 3 is_stmt 0 discriminator 1 view .LVU1772
 5425 017a 40F2FA61 		movw	r1, #1786
 5426 017e 3C4B     		ldr	r3, .L215+84
 5427 0180 344A     		ldr	r2, .L215+56
 5428 0182 A4E7     		b	.L214
 5429              	.L203:
1787:Src/app.c     ****   disp.lock = xSemaphoreCreateMutexStatic(&disp.lock_buffer);
 5430              		.loc 1 1787 3 is_stmt 1 view .LVU1773
 5431              		.loc 1 1787 15 is_stmt 0 view .LVU1774
 5432 0184 3046     		mov	r0, r6
 5433 0186 05F15401 		add	r1, r5, #84
 5434 018a FFF7FEFF 		bl	xQueueCreateMutexStatic
 5435              	.LVL422:
 5436              		.loc 1 1787 13 discriminator 1 view .LVU1775
 5437 018e 7865     		str	r0, [r7, #84]
1788:Src/app.c     ****   assert(disp.lock);
 5438              		.loc 1 1788 3 is_stmt 1 view .LVU1776
 5439 0190 20B9     		cbnz	r0, .L204
 5440              		.loc 1 1788 3 is_stmt 0 discriminator 1 view .LVU1777
 5441 0192 40F2FC61 		movw	r1, #1788
 5442 0196 374B     		ldr	r3, .L215+88
 5443 0198 2E4A     		ldr	r2, .L215+56
 5444 019a 98E7     		b	.L214
 5445              	.L204:
1789:Src/app.c     **** 
1790:Src/app.c     ****   /* Start LCD Display camera pipe stream */
1791:Src/app.c     ****   CAM_DisplayPipe_Start(lcd_bg_buffer[0], CMW_MODE_CONTINUOUS);
 5446              		.loc 1 1791 3 is_stmt 1 view .LVU1778
 5447 019c 2146     		mov	r1, r4
 5448 019e 2148     		ldr	r0, .L215+8
 5449 01a0 FFF7FEFF 		bl	CAM_DisplayPipe_Start
 5450              	.LVL423:
1792:Src/app.c     **** 
1793:Src/app.c     ****   /* threads init */
1794:Src/app.c     ****   hdl = xTaskCreateStatic(nn_thread_fct, "nn", configMINIMAL_STACK_SIZE * 2, NULL, nn_priority, nn_
 5451              		.loc 1 1794 3 view .LVU1779
 5452              		.loc 1 1794 9 is_stmt 0 view .LVU1780
 5453 01a4 344B     		ldr	r3, .L215+92
 5454 01a6 4FF40062 		mov	r2, #2048
 5455 01aa 0293     		str	r3, [sp, #8]
 5456 01ac 334B     		ldr	r3, .L215+96
 5457 01ae 3449     		ldr	r1, .L215+100
 5458 01b0 0193     		str	r3, [sp, #4]
 5459 01b2 1D23     		movs	r3, #29
 5460 01b4 3348     		ldr	r0, .L215+104
 5461 01b6 0093     		str	r3, [sp]
ARM GAS  /tmp/ccHyRziO.s 			page 194


 5462 01b8 2346     		mov	r3, r4
 5463 01ba FFF7FEFF 		bl	xTaskCreateStatic
 5464              	.LVL424:
1795:Src/app.c     ****                           &nn_thread);
1796:Src/app.c     ****   assert(hdl != NULL);
 5465              		.loc 1 1796 3 is_stmt 1 view .LVU1781
 5466 01be 20B9     		cbnz	r0, .L205
 5467              		.loc 1 1796 3 is_stmt 0 discriminator 1 view .LVU1782
 5468 01c0 40F20471 		movw	r1, #1796
 5469 01c4 304B     		ldr	r3, .L215+108
 5470 01c6 234A     		ldr	r2, .L215+56
 5471 01c8 81E7     		b	.L214
 5472              	.L205:
1797:Src/app.c     ****   hdl = xTaskCreateStatic(dp_thread_fct, "dp", configMINIMAL_STACK_SIZE * 2, NULL, dp_priority, dp_
 5473              		.loc 1 1797 3 is_stmt 1 view .LVU1783
 5474              		.loc 1 1797 9 is_stmt 0 view .LVU1784
 5475 01ca 304B     		ldr	r3, .L215+112
 5476 01cc 4FF40062 		mov	r2, #2048
 5477 01d0 0293     		str	r3, [sp, #8]
 5478 01d2 2F4B     		ldr	r3, .L215+116
 5479 01d4 2F49     		ldr	r1, .L215+120
 5480 01d6 0193     		str	r3, [sp, #4]
 5481 01d8 1A23     		movs	r3, #26
 5482 01da 2F48     		ldr	r0, .L215+124
 5483              	.LVL425:
 5484              		.loc 1 1797 9 view .LVU1785
 5485 01dc 0093     		str	r3, [sp]
 5486 01de 2346     		mov	r3, r4
 5487 01e0 FFF7FEFF 		bl	xTaskCreateStatic
 5488              	.LVL426:
1798:Src/app.c     ****                           &dp_thread);
1799:Src/app.c     ****   assert(hdl != NULL);
 5489              		.loc 1 1799 3 is_stmt 1 view .LVU1786
 5490 01e4 20B9     		cbnz	r0, .L206
 5491              		.loc 1 1799 3 is_stmt 0 discriminator 1 view .LVU1787
 5492 01e6 40F20771 		movw	r1, #1799
 5493 01ea 274B     		ldr	r3, .L215+108
 5494 01ec 194A     		ldr	r2, .L215+56
 5495 01ee 6EE7     		b	.L214
 5496              	.L206:
1800:Src/app.c     ****   hdl = xTaskCreateStatic(isp_thread_fct, "isp", configMINIMAL_STACK_SIZE * 2, NULL, isp_priority, 
 5497              		.loc 1 1800 3 is_stmt 1 view .LVU1788
 5498              		.loc 1 1800 9 is_stmt 0 view .LVU1789
 5499 01f0 2A4B     		ldr	r3, .L215+128
 5500 01f2 4FF40062 		mov	r2, #2048
 5501 01f6 0293     		str	r3, [sp, #8]
 5502 01f8 294B     		ldr	r3, .L215+132
 5503 01fa 2A49     		ldr	r1, .L215+136
 5504 01fc CDE90093 		strd	r9, r3, [sp]
 5505 0200 2948     		ldr	r0, .L215+140
 5506              	.LVL427:
 5507              		.loc 1 1800 9 view .LVU1790
 5508 0202 2346     		mov	r3, r4
 5509 0204 FFF7FEFF 		bl	xTaskCreateStatic
 5510              	.LVL428:
1801:Src/app.c     ****                           &isp_thread);
1802:Src/app.c     ****   assert(hdl != NULL);
ARM GAS  /tmp/ccHyRziO.s 			page 195


 5511              		.loc 1 1802 3 is_stmt 1 view .LVU1791
 5512 0208 20B9     		cbnz	r0, .L195
 5513              		.loc 1 1802 3 is_stmt 0 discriminator 1 view .LVU1792
 5514 020a 40F20A71 		movw	r1, #1802
 5515 020e 1E4B     		ldr	r3, .L215+108
 5516 0210 104A     		ldr	r2, .L215+56
 5517 0212 5CE7     		b	.L214
 5518              	.L195:
1803:Src/app.c     **** }
 5519              		.loc 1 1803 1 view .LVU1793
 5520 0214 13B0     		add	sp, sp, #76
 5521              		.cfi_def_cfa_offset 28
 5522              		@ sp needed
 5523 0216 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5524              	.L216:
 5525 021a 00BF     		.align	2
 5526              	.L215:
 5527 021c 00ED00E0 		.word	-536810240
 5528 0220 00000000 		.word	.LC25
 5529 0224 00882600 		.word	lcd_bg_buffer
 5530 0228 00C05D00 		.word	6144000
 5531 022c 00180F00 		.word	lcd_fg_buffer
 5532 0230 00701700 		.word	1536000
 5533 0234 00000000 		.word	lcd_bg_buffer_disp_idx
 5534 0238 2003E001 		.word	31458080
 5535 023c 00D01A00 		.word	lcd_fg_buffer+768000
 5536 0240 00600300 		.word	screen_buffer
 5537 0244 11000000 		.word	.LC26
 5538 0248 00000000 		.word	__func__.5
 5539 024c 0E000000 		.word	.LC5
 5540 0250 00000000 		.word	Font20
 5541 0254 00000000 		.word	__func__.21
 5542 0258 00000000 		.word	nn_input_buffers
 5543 025c 00000000 		.word	cpu_load
 5544 0260 00000000 		.word	isp_sem_buffer
 5545 0264 00000000 		.word	isp_sem
 5546 0268 1A000000 		.word	.LC27
 5547 026c 04000000 		.word	disp+4
 5548 0270 22000000 		.word	.LC28
 5549 0274 2E000000 		.word	.LC29
 5550 0278 00000000 		.word	nn_thread
 5551 027c 00000000 		.word	nn_thread_stack
 5552 0280 38000000 		.word	.LC30
 5553 0284 00000000 		.word	nn_thread_fct
 5554 0288 3B000000 		.word	.LC31
 5555 028c 00000000 		.word	dp_thread
 5556 0290 00000000 		.word	dp_thread_stack
 5557 0294 47000000 		.word	.LC32
 5558 0298 00000000 		.word	dp_thread_fct
 5559 029c 00000000 		.word	isp_thread
 5560 02a0 00000000 		.word	isp_thread_stack
 5561 02a4 4A000000 		.word	.LC33
 5562 02a8 00000000 		.word	isp_thread_fct
 5563 02ac 00EE0200 		.word	192000
 5564 02b0 04000000 		.word	nn_input_queue+4
 5565              		.cfi_endproc
 5566              	.LFE7398:
ARM GAS  /tmp/ccHyRziO.s 			page 196


 5568              		.section	.text.CMW_CAMERA_PIPE_FrameEventCallback,"ax",%progbits
 5569              		.align	1
 5570              		.global	CMW_CAMERA_PIPE_FrameEventCallback
 5571              		.syntax unified
 5572              		.thumb
 5573              		.thumb_func
 5575              	CMW_CAMERA_PIPE_FrameEventCallback:
 5576              	.LVL429:
 5577              	.LFB7399:
1804:Src/app.c     **** 
1805:Src/app.c     **** /**
1806:Src/app.c     ****  * @brief System-level callback registered with the camera driver for frame events.
1807:Src/app.c     ****  * @details This function is called from an Interrupt Service Routine (ISR) and
1808:Src/app.c     ****  * routes the event to the appropriate application-level handler.
1809:Src/app.c     ****  */
1810:Src/app.c     **** int CMW_CAMERA_PIPE_FrameEventCallback(uint32_t pipe)
1811:Src/app.c     **** {
 5578              		.loc 1 1811 1 is_stmt 1 view -0
 5579              		.cfi_startproc
 5580              		@ args = 0, pretend = 0, frame = 8
 5581              		@ frame_needed = 0, uses_anonymous_args = 0
1812:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 5582              		.loc 1 1812 3 view .LVU1795
 5583              		.loc 1 1812 6 is_stmt 0 view .LVU1796
 5584 0000 0128     		cmp	r0, #1
1811:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 5585              		.loc 1 1811 1 view .LVU1797
 5586 0002 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 5587              		.cfi_def_cfa_offset 40
 5588              		.cfi_offset 4, -32
 5589              		.cfi_offset 5, -28
 5590              		.cfi_offset 6, -24
 5591              		.cfi_offset 7, -20
 5592              		.cfi_offset 8, -16
 5593              		.cfi_offset 9, -12
 5594              		.cfi_offset 10, -8
 5595              		.cfi_offset 14, -4
1811:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 5596              		.loc 1 1811 1 view .LVU1798
 5597 0006 0646     		mov	r6, r0
 5598              		.loc 1 1812 6 view .LVU1799
 5599 0008 50D1     		bne	.L218
1813:Src/app.c     ****     app_main_pipe_frame_event();
 5600              		.loc 1 1813 5 is_stmt 1 view .LVU1800
 5601              	.LBB761:
 5602              	.LBI761:
 686:Src/app.c     **** {
 5603              		.loc 1 686 13 view .LVU1801
 5604              	.LBB762:
 689:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 5605              		.loc 1 689 3 view .LVU1802
 689:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 5606              		.loc 1 689 47 is_stmt 0 view .LVU1803
 5607 000a 514F     		ldr	r7, .L244
 690:Src/app.c     ****   int ret;
 5608              		.loc 1 690 47 view .LVU1804
 5609 000c DFF87081 		ldr	r8, .L244+48
ARM GAS  /tmp/ccHyRziO.s 			page 197


 689:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 5610              		.loc 1 689 47 view .LVU1805
 5611 0010 3D68     		ldr	r5, [r7]
 690:Src/app.c     ****   int ret;
 5612              		.loc 1 690 47 view .LVU1806
 5613 0012 D8F80040 		ldr	r4, [r8]
 689:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 5614              		.loc 1 689 47 view .LVU1807
 5615 0016 0135     		adds	r5, r5, #1
 689:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 5616              		.loc 1 689 7 view .LVU1808
 5617 0018 6B42     		rsbs	r3, r5, #0
 5618 001a 03F00303 		and	r3, r3, #3
 690:Src/app.c     ****   int ret;
 5619              		.loc 1 690 47 view .LVU1809
 5620 001e 04F10104 		add	r4, r4, #1
 689:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 5621              		.loc 1 689 7 view .LVU1810
 5622 0022 05F00305 		and	r5, r5, #3
 5623 0026 55EA43B5 		csneg	r5, r5, r3, mi
 5624              	.LVL430:
 690:Src/app.c     ****   int ret;
 5625              		.loc 1 690 3 is_stmt 1 view .LVU1811
 690:Src/app.c     ****   int ret;
 5626              		.loc 1 690 7 is_stmt 0 view .LVU1812
 5627 002a 6342     		rsbs	r3, r4, #0
 5628 002c 03F00303 		and	r3, r3, #3
 695:Src/app.c     ****   assert(ret == HAL_OK);
 5629              		.loc 1 695 78 view .LVU1813
 5630 0030 DFF850A1 		ldr	r10, .L244+52
 5631 0034 DFF85091 		ldr	r9, .L244+56
 690:Src/app.c     ****   int ret;
 5632              		.loc 1 690 7 view .LVU1814
 5633 0038 04F00304 		and	r4, r4, #3
 5634 003c 54EA43B4 		csneg	r4, r4, r3, mi
 5635              	.LVL431:
 691:Src/app.c     **** 
 5636              		.loc 1 691 3 is_stmt 1 view .LVU1815
 694:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 5637              		.loc 1 694 3 view .LVU1816
 694:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 5638              		.loc 1 694 9 is_stmt 0 view .LVU1817
 5639 0040 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 5640              	.LVL432:
 694:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 5641              		.loc 1 694 9 view .LVU1818
 5642 0044 3146     		mov	r1, r6
 5643 0046 0022     		movs	r2, #0
 5644 0048 0AFB0493 		mla	r3, r10, r4, r9
 5645 004c FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 5646              	.LVL433:
 696:Src/app.c     **** 
 5647              		.loc 1 696 3 is_stmt 1 view .LVU1819
 5648 0050 0146     		mov	r1, r0
 5649 0052 30B1     		cbz	r0, .L219
 696:Src/app.c     **** 
 5650              		.loc 1 696 3 is_stmt 0 discriminator 1 view .LVU1820
ARM GAS  /tmp/ccHyRziO.s 			page 198


 5651 0054 4FF42E71 		mov	r1, #696
 5652 0058 3E4B     		ldr	r3, .L244+4
 5653 005a 3F4A     		ldr	r2, .L244+8
 5654              	.LVL434:
 5655              	.L243:
 5656              	.LBB763:
 5657              	.LBB764:
 672:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 5658              		.loc 1 672 3 discriminator 1 view .LVU1821
 5659 005c 3F48     		ldr	r0, .L244+12
 5660 005e FFF7FEFF 		bl	__assert_func
 5661              	.LVL435:
 5662              	.L219:
 672:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 5663              		.loc 1 672 3 discriminator 1 view .LVU1822
 5664              	.LBE764:
 5665              	.LBE763:
 699:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 5666              		.loc 1 699 3 is_stmt 1 view .LVU1823
 5667              	.LBB766:
 5668              	.LBI763:
 667:Src/app.c     **** {
 5669              		.loc 1 667 13 view .LVU1824
 5670              	.LBB765:
 669:Src/app.c     **** 
 5671              		.loc 1 669 3 view .LVU1825
 671:Src/app.c     ****   assert(ret == 0);
 5672              		.loc 1 671 3 view .LVU1826
 671:Src/app.c     ****   assert(ret == 0);
 5673              		.loc 1 671 9 is_stmt 0 view .LVU1827
 5674 0062 0AFB0590 		mla	r0, r10, r5, r9
 5675              	.LVL436:
 671:Src/app.c     ****   assert(ret == 0);
 5676              		.loc 1 671 9 view .LVU1828
 5677 0066 FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 5678              	.LVL437:
 672:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 5679              		.loc 1 672 3 is_stmt 1 view .LVU1829
 5680 006a 20B1     		cbz	r0, .L220
 672:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 5681              		.loc 1 672 3 is_stmt 0 discriminator 1 view .LVU1830
 5682 006c 4FF42871 		mov	r1, #672
 5683 0070 3B4B     		ldr	r3, .L244+16
 5684 0072 3C4A     		ldr	r2, .L244+20
 5685 0074 F2E7     		b	.L243
 5686              	.L220:
 673:Src/app.c     ****   assert(ret == 0);
 5687              		.loc 1 673 3 is_stmt 1 view .LVU1831
 673:Src/app.c     ****   assert(ret == 0);
 5688              		.loc 1 673 9 is_stmt 0 view .LVU1832
 5689 0076 FFF7FEFF 		bl	SCRL_ReloadLayer
 5690              	.LVL438:
 674:Src/app.c     **** 
 5691              		.loc 1 674 3 is_stmt 1 view .LVU1833
 5692 007a 20B1     		cbz	r0, .L221
 674:Src/app.c     **** 
 5693              		.loc 1 674 3 is_stmt 0 discriminator 1 view .LVU1834
ARM GAS  /tmp/ccHyRziO.s 			page 199


 5694 007c 40F2A221 		movw	r1, #674
 5695 0080 374B     		ldr	r3, .L244+16
 5696 0082 384A     		ldr	r2, .L244+20
 5697 0084 EAE7     		b	.L243
 5698              	.L221:
 676:Src/app.c     ****   assert(ret == 0);
 5699              		.loc 1 676 3 is_stmt 1 view .LVU1835
 676:Src/app.c     ****   assert(ret == 0);
 5700              		.loc 1 676 9 is_stmt 0 view .LVU1836
 5701 0086 FFF7FEFF 		bl	SRCL_Update
 5702              	.LVL439:
 677:Src/app.c     **** }
 5703              		.loc 1 677 3 is_stmt 1 view .LVU1837
 5704 008a 20B1     		cbz	r0, .L222
 677:Src/app.c     **** }
 5705              		.loc 1 677 3 is_stmt 0 discriminator 1 view .LVU1838
 5706 008c 40F2A521 		movw	r1, #677
 5707 0090 334B     		ldr	r3, .L244+16
 5708 0092 344A     		ldr	r2, .L244+20
 5709 0094 E2E7     		b	.L243
 5710              	.L222:
 5711              	.LVL440:
 677:Src/app.c     **** }
 5712              		.loc 1 677 3 discriminator 1 view .LVU1839
 5713              	.LBE765:
 5714              	.LBE766:
 700:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 5715              		.loc 1 700 3 is_stmt 1 view .LVU1840
 703:Src/app.c     **** }
 5716              		.loc 1 703 17 is_stmt 0 view .LVU1841
 5717 0096 344A     		ldr	r2, .L244+24
 700:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 5718              		.loc 1 700 26 view .LVU1842
 5719 0098 3D60     		str	r5, [r7]
 701:Src/app.c     **** 
 5720              		.loc 1 701 3 is_stmt 1 view .LVU1843
 703:Src/app.c     **** }
 5721              		.loc 1 703 17 is_stmt 0 view .LVU1844
 5722 009a 1368     		ldr	r3, [r2]
 701:Src/app.c     **** 
 5723              		.loc 1 701 26 view .LVU1845
 5724 009c C8F80040 		str	r4, [r8]
 703:Src/app.c     **** }
 5725              		.loc 1 703 3 is_stmt 1 view .LVU1846
 703:Src/app.c     **** }
 5726              		.loc 1 703 17 is_stmt 0 view .LVU1847
 5727 00a0 0133     		adds	r3, r3, #1
 5728 00a2 1360     		str	r3, [r2]
 5729              	.LVL441:
 5730              	.L223:
 703:Src/app.c     **** }
 5731              		.loc 1 703 17 view .LVU1848
 5732              	.LBE762:
 5733              	.LBE761:
1814:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
1815:Src/app.c     ****     app_ancillary_pipe_frame_event();
1816:Src/app.c     **** 
ARM GAS  /tmp/ccHyRziO.s 			page 200


1817:Src/app.c     ****   return HAL_OK;
 5734              		.loc 1 1817 3 is_stmt 1 view .LVU1849
1818:Src/app.c     **** }
 5735              		.loc 1 1818 1 is_stmt 0 view .LVU1850
 5736 00a4 0020     		movs	r0, #0
 5737 00a6 02B0     		add	sp, sp, #8
 5738              		.cfi_remember_state
 5739              		.cfi_def_cfa_offset 32
 5740              		@ sp needed
 5741 00a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5742              	.LVL442:
 5743              	.L218:
 5744              		.cfi_restore_state
1814:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 5745              		.loc 1 1814 8 is_stmt 1 view .LVU1851
1814:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 5746              		.loc 1 1814 11 is_stmt 0 view .LVU1852
 5747 00ac 0228     		cmp	r0, #2
 5748 00ae F9D1     		bne	.L223
1815:Src/app.c     **** 
 5749              		.loc 1 1815 5 is_stmt 1 view .LVU1853
 5750              	.LBB767:
 5751              	.LBI767:
 711:Src/app.c     **** {
 5752              		.loc 1 711 13 view .LVU1854
 5753              	.LBB768:
 713:Src/app.c     ****   int ret;
 5754              		.loc 1 713 3 view .LVU1855
 714:Src/app.c     **** 
 5755              		.loc 1 714 3 view .LVU1856
 716:Src/app.c     ****   if (next_buffer) {
 5756              		.loc 1 716 3 view .LVU1857
 5757              	.LBB769:
 5758              	.LBI769:
 597:Src/app.c     **** {
 5759              		.loc 1 597 17 view .LVU1858
 5760              	.LVL443:
 5761              	.LBB770:
 599:Src/app.c     ****   int ret;
 5762              		.loc 1 599 3 view .LVU1859
 600:Src/app.c     **** 
 5763              		.loc 1 600 3 view .LVU1860
 602:Src/app.c     ****   if (ret == pdFALSE)
 5764              		.loc 1 602 3 view .LVU1861
 602:Src/app.c     ****   if (ret == pdFALSE)
 5765              		.loc 1 602 9 is_stmt 0 view .LVU1862
 5766 00b0 2E4C     		ldr	r4, .L244+28
 602:Src/app.c     ****   if (ret == pdFALSE)
 5767              		.loc 1 602 9 discriminator 4 view .LVU1863
 5768 00b2 0021     		movs	r1, #0
 5769 00b4 2068     		ldr	r0, [r4]
 5770              	.LVL444:
 602:Src/app.c     ****   if (ret == pdFALSE)
 5771              		.loc 1 602 9 discriminator 4 view .LVU1864
 5772 00b6 FFF7FEFF 		bl	xQueueSemaphoreTake
 5773              	.LVL445:
 603:Src/app.c     ****     return NULL;
ARM GAS  /tmp/ccHyRziO.s 			page 201


 5774              		.loc 1 603 3 is_stmt 1 view .LVU1865
 603:Src/app.c     ****     return NULL;
 5775              		.loc 1 603 6 is_stmt 0 view .LVU1866
 5776 00ba 0028     		cmp	r0, #0
 5777 00bc F2D0     		beq	.L223
 606:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 5778              		.loc 1 606 3 is_stmt 1 view .LVU1867
 606:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 5779              		.loc 1 606 23 is_stmt 0 view .LVU1868
 5780 00be D4F8B420 		ldr	r2, [r4, #180]
 606:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 5781              		.loc 1 606 7 view .LVU1869
 5782 00c2 04EB8203 		add	r3, r4, r2, lsl #2
 5783 00c6 D3F8AC50 		ldr	r5, [r3, #172]
 5784              	.LVL446:
 607:Src/app.c     **** 
 5785              		.loc 1 607 3 is_stmt 1 view .LVU1870
 607:Src/app.c     **** 
 5786              		.loc 1 607 37 is_stmt 0 view .LVU1871
 5787 00ca D4F8A830 		ldr	r3, [r4, #168]
 607:Src/app.c     **** 
 5788              		.loc 1 607 32 view .LVU1872
 5789 00ce 0132     		adds	r2, r2, #1
 607:Src/app.c     **** 
 5790              		.loc 1 607 37 view .LVU1873
 5791 00d0 92FBF3F1 		sdiv	r1, r2, r3
 5792 00d4 03FB1122 		mls	r2, r3, r1, r2
 607:Src/app.c     **** 
 5793              		.loc 1 607 16 view .LVU1874
 5794 00d8 C4F8B420 		str	r2, [r4, #180]
 609:Src/app.c     **** }
 5795              		.loc 1 609 3 is_stmt 1 view .LVU1875
 5796              	.LVL447:
 609:Src/app.c     **** }
 5797              		.loc 1 609 3 is_stmt 0 view .LVU1876
 5798              	.LBE770:
 5799              	.LBE769:
 717:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 5800              		.loc 1 717 3 is_stmt 1 view .LVU1877
 717:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 5801              		.loc 1 717 6 is_stmt 0 view .LVU1878
 5802 00dc 002D     		cmp	r5, #0
 5803 00de E1D0     		beq	.L223
 718:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 5804              		.loc 1 718 5 is_stmt 1 view .LVU1879
 718:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 5805              		.loc 1 718 11 is_stmt 0 view .LVU1880
 5806 00e0 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 5807              	.LVL448:
 718:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 5808              		.loc 1 718 11 discriminator 1 view .LVU1881
 5809 00e4 2B46     		mov	r3, r5
 5810 00e6 0022     		movs	r2, #0
 5811 00e8 3146     		mov	r1, r6
 5812 00ea FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 5813              	.LVL449:
 720:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
ARM GAS  /tmp/ccHyRziO.s 			page 202


 5814              		.loc 1 720 5 is_stmt 1 view .LVU1882
 5815 00ee 20B1     		cbz	r0, .L226
 720:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 5816              		.loc 1 720 5 is_stmt 0 discriminator 1 view .LVU1883
 5817 00f0 4FF43471 		mov	r1, #720
 5818 00f4 174B     		ldr	r3, .L244+4
 5819 00f6 1E4A     		ldr	r2, .L244+32
 5820 00f8 B0E7     		b	.L243
 5821              	.L226:
 722:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);     /* Put the buffer into the 'ready' queue so the NN task 
 5822              		.loc 1 722 5 is_stmt 1 view .LVU1884
 722:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);     /* Put the buffer into the 'ready' queue so the NN task 
 5823              		.loc 1 722 48 is_stmt 0 view .LVU1885
 5824 00fa 1B4B     		ldr	r3, .L244+24
 722:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);     /* Put the buffer into the 'ready' queue so the NN task 
 5825              		.loc 1 722 31 view .LVU1886
 5826 00fc 1D4A     		ldr	r2, .L244+36
 722:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);     /* Put the buffer into the 'ready' queue so the NN task 
 5827              		.loc 1 722 48 view .LVU1887
 5828 00fe 1B68     		ldr	r3, [r3]
 5829              	.LBB771:
 5830              	.LBB772:
 648:Src/app.c     ****   int ret;
 5831              		.loc 1 648 14 view .LVU1888
 5832 0100 0190     		str	r0, [sp, #4]
 5833              	.LBE772:
 5834              	.LBE771:
 722:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);     /* Put the buffer into the 'ready' queue so the NN task 
 5835              		.loc 1 722 48 view .LVU1889
 5836 0102 013B     		subs	r3, r3, #1
 722:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);     /* Put the buffer into the 'ready' queue so the NN task 
 5837              		.loc 1 722 31 view .LVU1890
 5838 0104 1360     		str	r3, [r2]
 723:Src/app.c     ****   }
 5839              		.loc 1 723 5 is_stmt 1 view .LVU1891
 5840              	.LBB774:
 5841              	.LBI771:
 646:Src/app.c     **** {
 5842              		.loc 1 646 13 view .LVU1892
 5843              	.LVL450:
 5844              	.LBB773:
 648:Src/app.c     ****   int ret;
 5845              		.loc 1 648 3 view .LVU1893
 649:Src/app.c     **** 
 5846              		.loc 1 649 3 view .LVU1894
 651:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 5847              		.loc 1 651 3 view .LVU1895
 651:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 5848              		.loc 1 651 7 is_stmt 0 view .LVU1896
 5849 0106 FFF7FEFF 		bl	xPortIsInsideInterrupt
 5850              	.LVL451:
 651:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 5851              		.loc 1 651 6 discriminator 1 view .LVU1897
 5852 010a 0346     		mov	r3, r0
 5853 010c A0B1     		cbz	r0, .L227
 652:Src/app.c     ****     assert(ret == pdTRUE);
 5854              		.loc 1 652 5 is_stmt 1 view .LVU1898
ARM GAS  /tmp/ccHyRziO.s 			page 203


 652:Src/app.c     ****     assert(ret == pdTRUE);
 5855              		.loc 1 652 11 is_stmt 0 view .LVU1899
 5856 010e 606D     		ldr	r0, [r4, #84]
 5857 0110 01A9     		add	r1, sp, #4
 5858 0112 FFF7FEFF 		bl	xQueueGiveFromISR
 5859              	.LVL452:
 653:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 5860              		.loc 1 653 5 is_stmt 1 view .LVU1900
 5861 0116 0128     		cmp	r0, #1
 5862 0118 04D0     		beq	.L228
 653:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 5863              		.loc 1 653 5 is_stmt 0 discriminator 1 view .LVU1901
 5864 011a 40F28D21 		movw	r1, #653
 5865 011e 164B     		ldr	r3, .L244+40
 5866 0120 164A     		ldr	r2, .L244+44
 5867 0122 9BE7     		b	.L243
 5868              	.L228:
 654:Src/app.c     ****   } else {
 5869              		.loc 1 654 5 is_stmt 1 view .LVU1902
 654:Src/app.c     ****   } else {
 5870              		.loc 1 654 5 view .LVU1903
 5871 0124 019B     		ldr	r3, [sp, #4]
 5872 0126 002B     		cmp	r3, #0
 5873 0128 BCD0     		beq	.L223
 654:Src/app.c     ****   } else {
 5874              		.loc 1 654 5 discriminator 1 view .LVU1904
 5875 012a 4FF0E023 		mov	r3, #-536813568
 5876 012e 4FF08052 		mov	r2, #268435456
 5877 0132 C3F8042D 		str	r2, [r3, #3332]
 5878 0136 B5E7     		b	.L223
 5879              	.LVL453:
 5880              	.L227:
 656:Src/app.c     ****     assert(ret == pdTRUE);
 5881              		.loc 1 656 5 view .LVU1905
 656:Src/app.c     ****     assert(ret == pdTRUE);
 5882              		.loc 1 656 11 is_stmt 0 view .LVU1906
 5883 0138 0246     		mov	r2, r0
 5884 013a 0146     		mov	r1, r0
 5885 013c 606D     		ldr	r0, [r4, #84]
 5886 013e FFF7FEFF 		bl	xQueueGenericSend
 5887              	.LVL454:
 657:Src/app.c     ****   }
 5888              		.loc 1 657 5 is_stmt 1 view .LVU1907
 5889 0142 0128     		cmp	r0, #1
 5890 0144 AED0     		beq	.L223
 657:Src/app.c     ****   }
 5891              		.loc 1 657 5 is_stmt 0 discriminator 1 view .LVU1908
 5892 0146 40F29121 		movw	r1, #657
 5893 014a 0B4B     		ldr	r3, .L244+40
 5894 014c 0B4A     		ldr	r2, .L244+44
 5895 014e 85E7     		b	.L243
 5896              	.L245:
 5897              		.align	2
 5898              	.L244:
 5899 0150 00000000 		.word	lcd_bg_buffer_disp_idx
 5900 0154 35010000 		.word	.LC15
 5901 0158 00000000 		.word	__func__.3
ARM GAS  /tmp/ccHyRziO.s 			page 204


 5902 015c 0E000000 		.word	.LC5
 5903 0160 11000000 		.word	.LC26
 5904 0164 00000000 		.word	__func__.2
 5905 0168 00000000 		.word	frame_event_nb
 5906 016c 00000000 		.word	nn_input_queue
 5907 0170 00000000 		.word	__func__.1
 5908 0174 00000000 		.word	frame_event_nb_for_resize
 5909 0178 00000000 		.word	.LC4
 5910 017c 00000000 		.word	__func__.0
 5911 0180 00000000 		.word	lcd_bg_buffer_capt_idx
 5912 0184 00701700 		.word	1536000
 5913 0188 00882600 		.word	lcd_bg_buffer
 5914              	.LBE773:
 5915              	.LBE774:
 5916              	.LBE768:
 5917              	.LBE767:
 5918              		.cfi_endproc
 5919              	.LFE7399:
 5921              		.section	.text.CMW_CAMERA_PIPE_VsyncEventCallback,"ax",%progbits
 5922              		.align	1
 5923              		.global	CMW_CAMERA_PIPE_VsyncEventCallback
 5924              		.syntax unified
 5925              		.thumb
 5926              		.thumb_func
 5928              	CMW_CAMERA_PIPE_VsyncEventCallback:
 5929              	.LVL455:
 5930              	.LFB7400:
1819:Src/app.c     **** 
1820:Src/app.c     **** /**
1821:Src/app.c     ****  * @brief System-level callback for VSYNC events.
1822:Src/app.c     ****  */
1823:Src/app.c     **** int CMW_CAMERA_PIPE_VsyncEventCallback(uint32_t pipe)
1824:Src/app.c     **** {
 5931              		.loc 1 1824 1 is_stmt 1 view -0
 5932              		.cfi_startproc
 5933              		@ args = 0, pretend = 0, frame = 8
 5934              		@ frame_needed = 0, uses_anonymous_args = 0
1825:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 5935              		.loc 1 1825 3 view .LVU1910
 5936              		.loc 1 1825 6 is_stmt 0 view .LVU1911
 5937 0000 0128     		cmp	r0, #1
1824:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 5938              		.loc 1 1824 1 view .LVU1912
 5939 0002 07B5     		push	{r0, r1, r2, lr}
 5940              		.cfi_def_cfa_offset 16
 5941              		.cfi_offset 14, -4
 5942              		.loc 1 1825 6 view .LVU1913
 5943 0004 10D1     		bne	.L247
1826:Src/app.c     ****     app_main_pipe_vsync_event();
 5944              		.loc 1 1826 5 is_stmt 1 view .LVU1914
 5945              	.LBB777:
 5946              	.LBI777:
 733:Src/app.c     **** {
 5947              		.loc 1 733 13 view .LVU1915
 5948              	.LBB778:
 735:Src/app.c     ****   int ret;
 5949              		.loc 1 735 3 view .LVU1916
ARM GAS  /tmp/ccHyRziO.s 			page 205


 735:Src/app.c     ****   int ret;
 5950              		.loc 1 735 14 is_stmt 0 view .LVU1917
 5951 0006 0023     		movs	r3, #0
 5952 0008 0193     		str	r3, [sp, #4]
 736:Src/app.c     **** 
 5953              		.loc 1 736 3 is_stmt 1 view .LVU1918
 738:Src/app.c     ****   if (ret == pdTRUE)
 5954              		.loc 1 738 3 view .LVU1919
 738:Src/app.c     ****   if (ret == pdTRUE)
 5955              		.loc 1 738 9 is_stmt 0 view .LVU1920
 5956 000a 094B     		ldr	r3, .L252
 5957 000c 01A9     		add	r1, sp, #4
 5958 000e 1868     		ldr	r0, [r3]
 5959              	.LVL456:
 738:Src/app.c     ****   if (ret == pdTRUE)
 5960              		.loc 1 738 9 view .LVU1921
 5961 0010 FFF7FEFF 		bl	xQueueGiveFromISR
 5962              	.LVL457:
 739:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 5963              		.loc 1 739 3 is_stmt 1 view .LVU1922
 739:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 5964              		.loc 1 739 6 is_stmt 0 view .LVU1923
 5965 0014 0128     		cmp	r0, #1
 5966 0016 07D1     		bne	.L247
 740:Src/app.c     **** }
 5967              		.loc 1 740 5 is_stmt 1 view .LVU1924
 740:Src/app.c     **** }
 5968              		.loc 1 740 5 view .LVU1925
 5969 0018 019B     		ldr	r3, [sp, #4]
 5970 001a 2BB1     		cbz	r3, .L247
 740:Src/app.c     **** }
 5971              		.loc 1 740 5 discriminator 1 view .LVU1926
 5972 001c 4FF0E023 		mov	r3, #-536813568
 5973 0020 4FF08052 		mov	r2, #268435456
 5974 0024 C3F8042D 		str	r2, [r3, #3332]
 740:Src/app.c     **** }
 5975              		.loc 1 740 5 discriminator 3 view .LVU1927
 5976              	.LVL458:
 5977              	.L247:
 740:Src/app.c     **** }
 5978              		.loc 1 740 5 is_stmt 0 discriminator 3 view .LVU1928
 5979              	.LBE778:
 5980              	.LBE777:
1827:Src/app.c     **** 
1828:Src/app.c     ****   return HAL_OK;
 5981              		.loc 1 1828 3 is_stmt 1 view .LVU1929
1829:Src/app.c     **** }
 5982              		.loc 1 1829 1 is_stmt 0 view .LVU1930
 5983 0028 0020     		movs	r0, #0
 5984 002a 03B0     		add	sp, sp, #12
 5985              		.cfi_def_cfa_offset 4
 5986              		@ sp needed
 5987 002c 5DF804FB 		ldr	pc, [sp], #4
 5988              	.L253:
 5989              		.align	2
 5990              	.L252:
 5991 0030 00000000 		.word	isp_sem
ARM GAS  /tmp/ccHyRziO.s 			page 206


 5992              		.cfi_endproc
 5993              	.LFE7400:
 5995              		.section	.rodata.__func__.0,"a"
 5998              	__func__.0:
 5999 0000 62717565 		.ascii	"bqueue_put_ready\000"
 5999      75655F70 
 5999      75745F72 
 5999      65616479 
 5999      00
 6000              		.section	.rodata.__func__.1,"a"
 6003              	__func__.1:
 6004 0000 6170705F 		.ascii	"app_ancillary_pipe_frame_event\000"
 6004      616E6369 
 6004      6C6C6172 
 6004      795F7069 
 6004      70655F66 
 6005              		.section	.rodata.__func__.2,"a"
 6008              	__func__.2:
 6009 0000 72656C6F 		.ascii	"reload_bg_layer\000"
 6009      61645F62 
 6009      675F6C61 
 6009      79657200 
 6010              		.section	.rodata.__func__.3,"a"
 6013              	__func__.3:
 6014 0000 6170705F 		.ascii	"app_main_pipe_frame_event\000"
 6014      6D61696E 
 6014      5F706970 
 6014      655F6672 
 6014      616D655F 
 6015              		.section	.rodata.__func__.5,"a"
 6018              	__func__.5:
 6019 0000 44697370 		.ascii	"Display_init\000"
 6019      6C61795F 
 6019      696E6974 
 6019      00
 6020              		.section	.rodata.__func__.6,"a"
 6023              	__func__.6:
 6024 0000 68616E64 		.ascii	"hand_landmark_prepare_input\000"
 6024      5F6C616E 
 6024      646D6172 
 6024      6B5F7072 
 6024      65706172 
 6025              		.section	.rodata.__func__.7,"a"
 6028              	__func__.7:
 6029 0000 62717565 		.ascii	"bqueue_put_free\000"
 6029      75655F70 
 6029      75745F66 
 6029      72656500 
 6030              		.section	.rodata.__func__.8,"a"
 6033              	__func__.8:
 6034 0000 70616C6D 		.ascii	"palm_detector_run\000"
 6034      5F646574 
 6034      6563746F 
 6034      725F7275 
 6034      6E00
 6035              		.section	.rodata.__func__.9,"a"
 6038              	__func__.9:
ARM GAS  /tmp/ccHyRziO.s 			page 207


 6039 0000 62717565 		.ascii	"bqueue_get_ready\000"
 6039      75655F67 
 6039      65745F72 
 6039      65616479 
 6039      00
 6040              		.section	.rodata.__func__.10,"a"
 6043              	__func__.10:
 6044 0000 6170705F 		.ascii	"app_rot_init\000"
 6044      726F745F 
 6044      696E6974 
 6044      00
 6045              		.section	.rodata.__func__.11,"a"
 6048              	__func__.11:
 6049 0000 68616E64 		.ascii	"hand_landmark_init\000"
 6049      5F6C616E 
 6049      646D6172 
 6049      6B5F696E 
 6049      697400
 6050              		.section	.rodata.__func__.12,"a"
 6053              	__func__.12:
 6054 0000 70616C6D 		.ascii	"palm_detector_init\000"
 6054      5F646574 
 6054      6563746F 
 6054      725F696E 
 6054      697400
 6055              		.section	.rodata.__func__.13,"a"
 6058              	__func__.13:
 6059 0000 6E6E5F74 		.ascii	"nn_thread_fct\000"
 6059      68726561 
 6059      645F6663 
 6059      7400
 6060              		.section	.rodata.__func__.14,"a"
 6063              	__func__.14:
 6064 0000 64705F63 		.ascii	"dp_commit_drawing_area\000"
 6064      6F6D6D69 
 6064      745F6472 
 6064      6177696E 
 6064      675F6172 
 6065              		.section	.rodata.__func__.15,"a"
 6068              	__func__.15:
 6069 0000 64705F75 		.ascii	"dp_update_drawing_area\000"
 6069      70646174 
 6069      655F6472 
 6069      6177696E 
 6069      675F6172 
 6070              		.section	.rodata.__func__.16,"a"
 6073              	__func__.16:
 6074 0000 62757474 		.ascii	"button_init\000"
 6074      6F6E5F69 
 6074      6E697400 
 6075              		.section	.rodata.__func__.17,"a"
 6078              	__func__.17:
 6079 0000 6F6E5F6C 		.ascii	"on_ld_toggle_button_click\000"
 6079      645F746F 
 6079      67676C65 
 6079      5F627574 
 6079      746F6E5F 
ARM GAS  /tmp/ccHyRziO.s 			page 208


 6080              		.section	.rodata.__func__.18,"a"
 6083              	__func__.18:
 6084 0000 6F6E5F70 		.ascii	"on_pd_toggle_button_click\000"
 6084      645F746F 
 6084      67676C65 
 6084      5F627574 
 6084      746F6E5F 
 6085              		.section	.rodata.__func__.19,"a"
 6088              	__func__.19:
 6089 0000 64705F74 		.ascii	"dp_thread_fct\000"
 6089      68726561 
 6089      645F6663 
 6089      7400
 6090              		.section	.rodata.__func__.20,"a"
 6093              	__func__.20:
 6094 0000 6973705F 		.ascii	"isp_thread_fct\000"
 6094      74687265 
 6094      61645F66 
 6094      637400
 6095              		.section	.rodata.__func__.21,"a"
 6098              	__func__.21:
 6099 0000 6170705F 		.ascii	"app_run\000"
 6099      72756E00 
 6100              		.section	.bss.cl,"aw",%nobits
 6101              		.align	2
 6104              	cl:
 6105 0000 00000000 		.space	60
 6105      00000000 
 6105      00000000 
 6105      00000000 
 6105      00000000 
 6106              		.section	.bss.hgfxmmu,"aw",%nobits
 6107              		.align	2
 6110              	hgfxmmu:
 6111 0000 00000000 		.space	48
 6111      00000000 
 6111      00000000 
 6111      00000000 
 6111      00000000 
 6112              		.section	.bss.isp_sem_buffer,"aw",%nobits
 6113              		.align	2
 6116              	isp_sem_buffer:
 6117 0000 00000000 		.space	80
 6117      00000000 
 6117      00000000 
 6117      00000000 
 6117      00000000 
 6118              		.section	.bss.isp_sem,"aw",%nobits
 6119              		.align	2
 6122              	isp_sem:
 6123 0000 00000000 		.space	4
 6124              		.section	.bss.isp_thread_stack,"aw",%nobits
 6125              		.align	2
 6128              	isp_thread_stack:
 6129 0000 00000000 		.space	8192
 6129      00000000 
 6129      00000000 
ARM GAS  /tmp/ccHyRziO.s 			page 209


 6129      00000000 
 6129      00000000 
 6130              		.section	.bss.isp_thread,"aw",%nobits
 6131              		.align	2
 6134              	isp_thread:
 6135 0000 00000000 		.space	96
 6135      00000000 
 6135      00000000 
 6135      00000000 
 6135      00000000 
 6136              		.section	.bss.dp_thread_stack,"aw",%nobits
 6137              		.align	2
 6140              	dp_thread_stack:
 6141 0000 00000000 		.space	8192
 6141      00000000 
 6141      00000000 
 6141      00000000 
 6141      00000000 
 6142              		.section	.bss.dp_thread,"aw",%nobits
 6143              		.align	2
 6146              	dp_thread:
 6147 0000 00000000 		.space	96
 6147      00000000 
 6147      00000000 
 6147      00000000 
 6147      00000000 
 6148              		.section	.bss.nn_thread_stack,"aw",%nobits
 6149              		.align	2
 6152              	nn_thread_stack:
 6153 0000 00000000 		.space	8192
 6153      00000000 
 6153      00000000 
 6153      00000000 
 6153      00000000 
 6154              		.section	.bss.nn_thread,"aw",%nobits
 6155              		.align	2
 6158              	nn_thread:
 6159 0000 00000000 		.space	96
 6159      00000000 
 6159      00000000 
 6159      00000000 
 6159      00000000 
 6160              		.section	.bss.nn_input_queue,"aw",%nobits
 6161              		.align	2
 6164              	nn_input_queue:
 6165 0000 00000000 		.space	188
 6165      00000000 
 6165      00000000 
 6165      00000000 
 6165      00000000 
 6166              		.section	.psram_bss,"aw"
 6167              		.align	5
 6170              	nn_input_buffers:
 6171 0000 00000000 		.space	221184
 6171      00000000 
 6171      00000000 
 6171      00000000 
ARM GAS  /tmp/ccHyRziO.s 			page 210


 6171      00000000 
 6172              		.section	.bss.frame_event_nb_for_resize,"aw",%nobits
 6173              		.align	2
 6176              	frame_event_nb_for_resize:
 6177 0000 00000000 		.space	4
 6178              		.section	.bss.frame_event_nb,"aw",%nobits
 6179              		.align	2
 6182              	frame_event_nb:
 6183 0000 00000000 		.space	4
 6184              		.section	.bss.ld_landmarks,"aw",%nobits
 6185              		.align	2
 6188              	ld_landmarks:
 6189 0000 00000000 		.space	168
 6189      00000000 
 6189      00000000 
 6189      00000000 
 6189      00000000 
 6190              		.section	.data.NN_Instance_hand_landmark,"aw"
 6191              		.align	2
 6194              	NN_Instance_hand_landmark:
 6195 0000 00000000 		.word	NN_Interface_hand_landmark
 6196 0004 00000000 		.word	0
 6197 0008 00000000 		.space	40
 6197      00000000 
 6197      00000000 
 6197      00000000 
 6197      00000000 
 6198              		.section	.rodata.str1.1,"aMS",%progbits,1
 6199              	.LC34:
 6200 0000 68616E64 		.ascii	"hand_landmark\000"
 6200      5F6C616E 
 6200      646D6172 
 6200      6B00
 6201              		.section	.rodata.NN_Interface_hand_landmark,"a"
 6202              		.align	2
 6205              	NN_Interface_hand_landmark:
 6206 0000 00000000 		.word	.LC34
 6207 0004 00000000 		.word	LL_ATON_EC_Network_Init_hand_landmark
 6208 0008 00000000 		.word	LL_ATON_EC_Inference_Init_hand_landmark
 6209 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_hand_landmark
 6210 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_hand_landmark
 6211 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_hand_landmark
 6212 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_hand_landmark
 6213 001c 00000000 		.word	LL_ATON_EpochBlockItems_hand_landmark
 6214 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_hand_landmark
 6215 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_hand_landmark
 6216 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_hand_landmark
 6217              		.section	.bss.rois,"aw",%nobits
 6218              		.align	2
 6221              	rois:
 6222 0000 00000000 		.space	20
 6222      00000000 
 6222      00000000 
 6222      00000000 
 6222      00000000 
 6223              		.section	.data.NN_Instance_palm_detector,"aw"
 6224              		.align	2
ARM GAS  /tmp/ccHyRziO.s 			page 211


 6227              	NN_Instance_palm_detector:
 6228 0000 00000000 		.word	NN_Interface_palm_detector
 6229 0004 00000000 		.word	0
 6230 0008 00000000 		.space	40
 6230      00000000 
 6230      00000000 
 6230      00000000 
 6230      00000000 
 6231              		.section	.rodata.str1.1
 6232              	.LC35:
 6233 000e 70616C6D 		.ascii	"palm_detector\000"
 6233      5F646574 
 6233      6563746F 
 6233      7200
 6234              		.section	.rodata.NN_Interface_palm_detector,"a"
 6235              		.align	2
 6238              	NN_Interface_palm_detector:
 6239 0000 0E000000 		.word	.LC35
 6240 0004 00000000 		.word	LL_ATON_EC_Network_Init_palm_detector
 6241 0008 00000000 		.word	LL_ATON_EC_Inference_Init_palm_detector
 6242 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_palm_detector
 6243 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_palm_detector
 6244 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_palm_detector
 6245 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_palm_detector
 6246 001c 00000000 		.word	LL_ATON_EpochBlockItems_palm_detector
 6247 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_palm_detector
 6248 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_palm_detector
 6249 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_palm_detector
 6250              		.section	.psram_bss
 6251              		.align	5
 6254              	screen_buffer:
 6255 36000 00000000 		.space	768000
 6255      00000000 
 6255      00000000 
 6255      00000000 
 6255      00000000 
 6256              		.section	.bss.cpu_load,"aw",%nobits
 6257              		.align	3
 6260              	cpu_load:
 6261 0000 00000000 		.space	224
 6261      00000000 
 6261      00000000 
 6261      00000000 
 6261      00000000 
 6262              		.section	.data.disp,"aw"
 6263              		.align	2
 6266              	disp:
 6267 0000 00000000 		.space	168
 6267      00000000 
 6267      00000000 
 6267      00000000 
 6267      00000000 
 6268 00a8 00000000 		.space	20
 6268      00000000 
 6268      00000000 
 6268      00000000 
 6268      00000000 
ARM GAS  /tmp/ccHyRziO.s 			page 212


 6269 00bc 01000000 		.word	1
 6270 00c0 00000000 		.word	0
 6271 00c4 00000000 		.space	224
 6271      00000000 
 6271      00000000 
 6271      00000000 
 6271      00000000 
 6272              		.section	.bss.lcd_fg_buffer_rd_idx,"aw",%nobits
 6273              		.align	2
 6276              	lcd_fg_buffer_rd_idx:
 6277 0000 00000000 		.space	4
 6278              		.section	.psram_bss
 6279              		.align	5
 6282              	lcd_fg_buffer:
 6283 f1800 00000000 		.space	1536000
 6283      00000000 
 6283      00000000 
 6283      00000000 
 6283      00000000 
 6284              		.section	.bss.lcd_bg_buffer_capt_idx,"aw",%nobits
 6285              		.align	2
 6288              	lcd_bg_buffer_capt_idx:
 6289 0000 00000000 		.space	4
 6290              		.section	.data.lcd_bg_buffer_disp_idx,"aw"
 6291              		.align	2
 6294              	lcd_bg_buffer_disp_idx:
 6295 0000 01000000 		.word	1
 6296              		.section	.psram_bss
 6297              		.align	5
 6300              	lcd_bg_buffer:
 6301 268800 00000000 		.space	6144000
 6301      00000000 
 6301      00000000 
 6301      00000000 
 6301      00000000 
 6302              		.section	.rodata
 6303              		.align	2
 6304              		.set	.LANCHOR0,. + 0
 6305              	.LC1:
 6306 0000 00000000 		.word	0
 6307 0004 00000000 		.word	0
 6308 0008 0000803F 		.word	1065353216
 6309 000c 00004844 		.word	1145569280
 6310 0010 00000000 		.word	0
 6311 0014 0000803F 		.word	1065353216
 6312 0018 00004844 		.word	1145569280
 6313 001c 0000F043 		.word	1139802112
 6314 0020 0000803F 		.word	1065353216
 6315 0024 00000000 		.word	0
 6316 0028 0000F043 		.word	1139802112
 6317 002c 0000803F 		.word	1065353216
 6318              	.LC2:
 6319 0030 00000000 		.word	0
 6320 0034 05000000 		.word	5
 6321 0038 09000000 		.word	9
 6322 003c 0D000000 		.word	13
 6323 0040 11000000 		.word	17
ARM GAS  /tmp/ccHyRziO.s 			page 213


 6324 0044 01000000 		.word	1
 6325 0048 02000000 		.word	2
 6326              	.LC3:
 6327 004c 00000000 		.word	0
 6328 0050 01000000 		.word	1
 6329 0054 02000000 		.word	2
 6330 0058 03000000 		.word	3
 6331 005c 05000000 		.word	5
 6332 0060 06000000 		.word	6
 6333 0064 09000000 		.word	9
 6334 0068 0A000000 		.word	10
 6335 006c 0D000000 		.word	13
 6336 0070 0E000000 		.word	14
 6337 0074 11000000 		.word	17
 6338 0078 12000000 		.word	18
 6339              		.text
 6340              	.Letext0:
 6341              		.file 6 "/opt/st/stm32cubeide_1.18.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 6342              		.file 7 "/opt/st/stm32cubeide_1.18.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 6343              		.file 8 "/opt/st/stm32cubeide_1.18.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 6344              		.file 9 "/opt/st/stm32cubeide_1.18.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 6345              		.file 10 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_pp_output_if.h"
 6346              		.file 11 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_yolov8_pp_if.h"
 6347              		.file 12 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/pd_pp_output_if.h"
 6348              		.file 13 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/pd_model_pp_if.h"
 6349              		.file 14 "STM32Cube_FW_N6/Drivers/CMSIS/Include/core_cm55.h"
 6350              		.file 15 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n657xx.h"
 6351              		.file 16 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n6xx.h"
 6352              		.file 17 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_def.h"
 6353              		.file 18 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gpio.h"
 6354              		.file 19 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dcmipp.h"
 6355              		.file 20 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gfxmmu.h"
 6356              		.file 21 "Inc/ld.h"
 6357              		.file 22 "Lib/FreeRTOS/Source/include/projdefs.h"
 6358              		.file 23 "Lib/FreeRTOS/Source/portable/GCC/ARM_CM55_NTZ/non_secure/portmacrocommon.h"
 6359              		.file 24 "Lib/FreeRTOS/Source/include/FreeRTOS.h"
 6360              		.file 25 "Lib/FreeRTOS/Source/include/task.h"
 6361              		.file 26 "Lib/FreeRTOS/Source/include/queue.h"
 6362              		.file 27 "Lib/FreeRTOS/Source/include/semphr.h"
 6363              		.file 28 "Lib/screenl/Inc/scrl.h"
 6364              		.file 29 "STM32Cube_FW_N6/Drivers/BSP/STM32N6570-DK/stm32n6570_discovery.h"
 6365              		.file 30 "STM32Cube_FW_N6/Utilities/lcd/../Fonts/fonts.h"
 6366              		.file 31 "STM32Cube_FW_N6/Utilities/lcd/stm32_lcd.h"
 6367              		.file 32 "Lib/NemaGFX/include/nema_hal.h"
 6368              		.file 33 "Lib/NemaGFX/include/nema_cmdlist.h"
 6369              		.file 34 "Lib/NemaGFX/include/nema_matrix3x3.h"
 6370              		.file 35 "Lib/NemaGFX/include/nema_graphics.h"
 6371              		.file 36 "Lib/Camera_Middleware/cmw_camera.h"
 6372              		.file 37 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_icache.h"
 6373              		.file 38 "/opt/st/stm32cubeide_1.18.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 6374              		.file 39 "Lib/ai-postprocessing-wrapper/app_postprocess.h"
 6375              		.file 40 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_runtime.h"
 6376              		.file 41 "/opt/st/stm32cubeide_1.18.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 6377              		.file 42 "Lib/NemaGFX/include/nema_error.h"
 6378              		.file 43 "Inc/app_cam.h"
 6379              		.file 44 "Inc/FreeRTOSConfig.h"
 6380              		.file 45 "Inc/stm32_lcd_ex.h"
ARM GAS  /tmp/ccHyRziO.s 			page 214


 6381              		.file 46 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
 6382              		.file 47 "/opt/st/stm32cubeide_1.18.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 6383              		.file 48 "/opt/st/stm32cubeide_1.18.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 6384              		.file 49 "<built-in>"
ARM GAS  /tmp/ccHyRziO.s 			page 215


DEFINED SYMBOLS
                            *ABS*:00000000 app.c
     /tmp/ccHyRziO.s:26     .text.LL_Buffer_addr_start:00000000 $t
     /tmp/ccHyRziO.s:31     .text.LL_Buffer_addr_start:00000000 LL_Buffer_addr_start
     /tmp/ccHyRziO.s:76     .text.copy_pd_box:00000000 $t
     /tmp/ccHyRziO.s:81     .text.copy_pd_box:00000000 copy_pd_box
     /tmp/ccHyRziO.s:155    .text.clamp_point:00000000 $t
     /tmp/ccHyRziO.s:160    .text.clamp_point:00000000 clamp_point
     /tmp/ccHyRziO.s:241    .text.decode_ld_landmark:00000000 $t
     /tmp/ccHyRziO.s:246    .text.decode_ld_landmark:00000000 decode_ld_landmark
     /tmp/ccHyRziO.s:385    .text.isp_thread_fct:00000000 $t
     /tmp/ccHyRziO.s:390    .text.isp_thread_fct:00000000 isp_thread_fct
     /tmp/ccHyRziO.s:436    .text.isp_thread_fct:00000028 $d
     /tmp/ccHyRziO.s:6122   .bss.isp_sem:00000000 isp_sem
     /tmp/ccHyRziO.s:6093   .rodata.__func__.20:00000000 __func__.20
     /tmp/ccHyRziO.s:444    .text.on_pd_toggle_button_click:00000000 $t
     /tmp/ccHyRziO.s:449    .text.on_pd_toggle_button_click:00000000 on_pd_toggle_button_click
     /tmp/ccHyRziO.s:523    .text.on_pd_toggle_button_click:0000004c $d
     /tmp/ccHyRziO.s:6083   .rodata.__func__.18:00000000 __func__.18
     /tmp/ccHyRziO.s:530    .text.on_ld_toggle_button_click:00000000 $t
     /tmp/ccHyRziO.s:535    .text.on_ld_toggle_button_click:00000000 on_ld_toggle_button_click
     /tmp/ccHyRziO.s:609    .text.on_ld_toggle_button_click:0000004c $d
     /tmp/ccHyRziO.s:6078   .rodata.__func__.17:00000000 __func__.17
     /tmp/ccHyRziO.s:616    .text.button_process:00000000 $t
     /tmp/ccHyRziO.s:621    .text.button_process:00000000 button_process
     /tmp/ccHyRziO.s:679    .text.button_init.part.0:00000000 $t
     /tmp/ccHyRziO.s:684    .text.button_init.part.0:00000000 button_init.part.0
     /tmp/ccHyRziO.s:707    .text.button_init.part.0:00000010 $d
     /tmp/ccHyRziO.s:6073   .rodata.__func__.16:00000000 __func__.16
     /tmp/ccHyRziO.s:714    .text.display_ld_hand:00000000 $t
     /tmp/ccHyRziO.s:719    .text.display_ld_hand:00000000 display_ld_hand
     /tmp/ccHyRziO.s:919    .text.display_ld_hand:000000ec $d
     /tmp/ccHyRziO.s:924    .text.roi_shift_and_scale.constprop.0:00000000 $t
     /tmp/ccHyRziO.s:929    .text.roi_shift_and_scale.constprop.0:00000000 roi_shift_and_scale.constprop.0
     /tmp/ccHyRziO.s:1067   .text.roi_shift_and_scale.constprop.0:000000a0 $d
     /tmp/ccHyRziO.s:1099   .text.nn_thread_fct:00000000 $t
     /tmp/ccHyRziO.s:1104   .text.nn_thread_fct:00000000 nn_thread_fct
     /tmp/ccHyRziO.s:1945   .text.nn_thread_fct:000002d8 $d
     /tmp/ccHyRziO.s:6053   .rodata.__func__.12:00000000 __func__.12
     /tmp/ccHyRziO.s:6048   .rodata.__func__.11:00000000 __func__.11
     /tmp/ccHyRziO.s:6043   .rodata.__func__.10:00000000 __func__.10
     /tmp/ccHyRziO.s:6110   .bss.hgfxmmu:00000000 hgfxmmu
     /tmp/ccHyRziO.s:6104   .bss.cl:00000000 cl
     /tmp/ccHyRziO.s:6164   .bss.nn_input_queue:00000000 nn_input_queue
     /tmp/ccHyRziO.s:6058   .rodata.__func__.13:00000000 __func__.13
     /tmp/ccHyRziO.s:6038   .rodata.__func__.9:00000000 __func__.9
     /tmp/ccHyRziO.s:6176   .bss.frame_event_nb_for_resize:00000000 frame_event_nb_for_resize
     /tmp/ccHyRziO.s:6033   .rodata.__func__.8:00000000 __func__.8
     /tmp/ccHyRziO.s:6227   .data.NN_Instance_palm_detector:00000000 NN_Instance_palm_detector
     /tmp/ccHyRziO.s:1981   .text.nn_thread_fct:0000035c $t
     /tmp/ccHyRziO.s:2823   .text.nn_thread_fct:000006c8 $d
     /tmp/ccHyRziO.s:6028   .rodata.__func__.7:00000000 __func__.7
     /tmp/ccHyRziO.s:6221   .bss.rois:00000000 rois
     /tmp/ccHyRziO.s:6300   .psram_bss:00268800 lcd_bg_buffer
     /tmp/ccHyRziO.s:6023   .rodata.__func__.6:00000000 __func__.6
     /tmp/ccHyRziO.s:2858   .text.nn_thread_fct:00000718 $t
     /tmp/ccHyRziO.s:3646   .text.nn_thread_fct:00000a30 $d
ARM GAS  /tmp/ccHyRziO.s 			page 216


     /tmp/ccHyRziO.s:6194   .data.NN_Instance_hand_landmark:00000000 NN_Instance_hand_landmark
     /tmp/ccHyRziO.s:6188   .bss.ld_landmarks:00000000 ld_landmarks
     /tmp/ccHyRziO.s:6266   .data.disp:00000000 disp
     /tmp/ccHyRziO.s:3669   .text.display_hand:00000000 $t
     /tmp/ccHyRziO.s:3675   .text.display_hand:00000000 display_hand
     /tmp/ccHyRziO.s:4169   .text.display_hand:00000230 $d
     /tmp/ccHyRziO.s:4189   .text.dp_thread_fct:00000000 $t
     /tmp/ccHyRziO.s:4194   .text.dp_thread_fct:00000000 dp_thread_fct
     /tmp/ccHyRziO.s:4891   .text.dp_thread_fct:00000270 $d
     /tmp/ccHyRziO.s:6088   .rodata.__func__.19:00000000 __func__.19
     /tmp/ccHyRziO.s:6068   .rodata.__func__.15:00000000 __func__.15
     /tmp/ccHyRziO.s:6260   .bss.cpu_load:00000000 cpu_load
     /tmp/ccHyRziO.s:6063   .rodata.__func__.14:00000000 __func__.14
     /tmp/ccHyRziO.s:6276   .bss.lcd_fg_buffer_rd_idx:00000000 lcd_fg_buffer_rd_idx
     /tmp/ccHyRziO.s:6282   .psram_bss:000f1800 lcd_fg_buffer
     /tmp/ccHyRziO.s:4938   .text.app_run:00000000 $t
     /tmp/ccHyRziO.s:4944   .text.app_run:00000000 app_run
     /tmp/ccHyRziO.s:5527   .text.app_run:0000021c $d
     /tmp/ccHyRziO.s:6294   .data.lcd_bg_buffer_disp_idx:00000000 lcd_bg_buffer_disp_idx
     /tmp/ccHyRziO.s:6254   .psram_bss:00036000 screen_buffer
     /tmp/ccHyRziO.s:6018   .rodata.__func__.5:00000000 __func__.5
     /tmp/ccHyRziO.s:6098   .rodata.__func__.21:00000000 __func__.21
     /tmp/ccHyRziO.s:6170   .psram_bss:00000000 nn_input_buffers
     /tmp/ccHyRziO.s:6116   .bss.isp_sem_buffer:00000000 isp_sem_buffer
     /tmp/ccHyRziO.s:6158   .bss.nn_thread:00000000 nn_thread
     /tmp/ccHyRziO.s:6152   .bss.nn_thread_stack:00000000 nn_thread_stack
     /tmp/ccHyRziO.s:6146   .bss.dp_thread:00000000 dp_thread
     /tmp/ccHyRziO.s:6140   .bss.dp_thread_stack:00000000 dp_thread_stack
     /tmp/ccHyRziO.s:6134   .bss.isp_thread:00000000 isp_thread
     /tmp/ccHyRziO.s:6128   .bss.isp_thread_stack:00000000 isp_thread_stack
     /tmp/ccHyRziO.s:5569   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 $t
     /tmp/ccHyRziO.s:5575   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 CMW_CAMERA_PIPE_FrameEventCallback
     /tmp/ccHyRziO.s:5899   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000150 $d
     /tmp/ccHyRziO.s:6013   .rodata.__func__.3:00000000 __func__.3
     /tmp/ccHyRziO.s:6008   .rodata.__func__.2:00000000 __func__.2
     /tmp/ccHyRziO.s:6182   .bss.frame_event_nb:00000000 frame_event_nb
     /tmp/ccHyRziO.s:6003   .rodata.__func__.1:00000000 __func__.1
     /tmp/ccHyRziO.s:5998   .rodata.__func__.0:00000000 __func__.0
     /tmp/ccHyRziO.s:6288   .bss.lcd_bg_buffer_capt_idx:00000000 lcd_bg_buffer_capt_idx
     /tmp/ccHyRziO.s:5922   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 $t
     /tmp/ccHyRziO.s:5928   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 CMW_CAMERA_PIPE_VsyncEventCallback
     /tmp/ccHyRziO.s:5991   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000030 $d
     /tmp/ccHyRziO.s:6101   .bss.cl:00000000 $d
     /tmp/ccHyRziO.s:6107   .bss.hgfxmmu:00000000 $d
     /tmp/ccHyRziO.s:6113   .bss.isp_sem_buffer:00000000 $d
     /tmp/ccHyRziO.s:6119   .bss.isp_sem:00000000 $d
     /tmp/ccHyRziO.s:6125   .bss.isp_thread_stack:00000000 $d
     /tmp/ccHyRziO.s:6131   .bss.isp_thread:00000000 $d
     /tmp/ccHyRziO.s:6137   .bss.dp_thread_stack:00000000 $d
     /tmp/ccHyRziO.s:6143   .bss.dp_thread:00000000 $d
     /tmp/ccHyRziO.s:6149   .bss.nn_thread_stack:00000000 $d
     /tmp/ccHyRziO.s:6155   .bss.nn_thread:00000000 $d
     /tmp/ccHyRziO.s:6161   .bss.nn_input_queue:00000000 $d
     /tmp/ccHyRziO.s:6167   .psram_bss:00000000 $d
     /tmp/ccHyRziO.s:6173   .bss.frame_event_nb_for_resize:00000000 $d
     /tmp/ccHyRziO.s:6179   .bss.frame_event_nb:00000000 $d
     /tmp/ccHyRziO.s:6185   .bss.ld_landmarks:00000000 $d
ARM GAS  /tmp/ccHyRziO.s 			page 217


     /tmp/ccHyRziO.s:6191   .data.NN_Instance_hand_landmark:00000000 $d
     /tmp/ccHyRziO.s:6205   .rodata.NN_Interface_hand_landmark:00000000 NN_Interface_hand_landmark
     /tmp/ccHyRziO.s:6202   .rodata.NN_Interface_hand_landmark:00000000 $d
     /tmp/ccHyRziO.s:6218   .bss.rois:00000000 $d
     /tmp/ccHyRziO.s:6224   .data.NN_Instance_palm_detector:00000000 $d
     /tmp/ccHyRziO.s:6238   .rodata.NN_Interface_palm_detector:00000000 NN_Interface_palm_detector
     /tmp/ccHyRziO.s:6235   .rodata.NN_Interface_palm_detector:00000000 $d
     /tmp/ccHyRziO.s:6257   .bss.cpu_load:00000000 $d
     /tmp/ccHyRziO.s:6263   .data.disp:00000000 $d
     /tmp/ccHyRziO.s:6273   .bss.lcd_fg_buffer_rd_idx:00000000 $d
     /tmp/ccHyRziO.s:6285   .bss.lcd_bg_buffer_capt_idx:00000000 $d
     /tmp/ccHyRziO.s:6291   .data.lcd_bg_buffer_disp_idx:00000000 $d
     /tmp/ccHyRziO.s:6303   .rodata:00000000 $d
                           .group:00000000 wm4.0.c552ae9005b0f2cca11872fae5d4b7f2
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.newlib.h.7.a37ffbe9e5aff74303f4e60b1cc1c01b
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.string.h.177.59a005921fa78485abc80a0267de5752
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.arm_math_types.h.94.a6c8422e2657ad4cd95bd8be69ba02aa
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.arm_mve.h.38.47b22bbd301ce82bc6dafd1a387f65a3
                           .group:00000000 wm4.arm_math_types.h.559.cab78f278b684a3ea2271947c7aea680
                           .group:00000000 wm4.arm_math_memory.h.28.fe8a81c6a9ac13061a5f748732089249
                           .group:00000000 wm4.none.h.185.db055cca83e83f96d8d0bb450fbdf4bb
                           .group:00000000 wm4.utils.h.27.57524573fe37b04009eecf3582a4c591
                           .group:00000000 wm4.fast_math_functions.h.28.8eb7477260c1d6b62047c49a01c4cbaa
                           .group:00000000 wm4.controller_functions.h.28.7bed7d7a726df2f65b8a3d89cff01247
                           .group:00000000 wm4.filtering_functions.h.46.6cf1424fb1f86d5f9958d208b83340a1
                           .group:00000000 wm4.postprocess_conf.h.22.8fb7890cba4665223adeb18e003381c8
                           .group:00000000 wm4.app.h.24.08bb40488efd2dfcc732c5f0f1ffdd10
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.dc31ec4674d7bcb103c9f08809549f45
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
ARM GAS  /tmp/ccHyRziO.s 			page 218


                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.app_cam.h.19.2495a46447d71a1025370e29864418f5
                           .group:00000000 wm4.app_config.h.19.88dee04c97f3e42d3acfeeca22b174e5
                           .group:00000000 wm4.od_pp_output_if.h.11.62a3da738caf687aa42d96759c237b2c
                           .group:00000000 wm4.mpe_pp_output_if.h.11.db0dd5ceb87072354c56b51e8f9b2a0d
                           .group:00000000 wm4.pd_pp_output_if.h.19.b7de9bd1876930668a82409743b6dbf4
                           .group:00000000 wm4.spe_pp_output_if.h.11.7212d2990e83c8afeadfa97fa05d17c4
                           .group:00000000 wm4.iseg_pp_output_if.h.11.94ad86e1bcba0c03902fb099324716f2
                           .group:00000000 wm4.sseg_pp_output_if.h.11.caf00fb1ae24f8dc9c80bee7827b96f2
                           .group:00000000 wm4.app_postprocess.h.46.5719832142b7cbde626021bdb2b1e6d5
                           .group:00000000 wm4.isp_conf.h.21.bfb1d020517608810095aa56acf25d1e
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.004a06df6e15ac197e03f723792da58a
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.3a8f01490e8852464e9fcb69092e9c75
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_gfxmmu.h.21.9784a9103143d48bd3c37389d0e0b8e6
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_icache.h.21.194b4ec6e76f32b14f65c85616854850
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_ll_usb.h.21.d518a5d97876c2ff49040c20a2c4a120
                           .group:00000000 wm4.stm32n6xx_hal_pcd.h.155.27040aac6844effe2af8c180caf1dd2e
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.21.9f810303326e2d91749800e9911f8e4d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.906.93ec0695066db4253cdbcb7d84358a0b
                           .group:00000000 wm4.stm32n6xx_hal_tim.h.21.839dd2b2a70382fb2c44f8f293a84d5f
ARM GAS  /tmp/ccHyRziO.s 			page 219


                           .group:00000000 wm4.stm32n6xx_hal_tim_ex.h.21.e372d5ac63c13441211ea4ecbd353150
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal_gpu2d.h.21.48d0249122abad294a630c39cc4ebaed
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.isp_core.h.109.be5387f515355b6edcb70af2607f9a68
                           .group:00000000 wm4.ld.h.19.0265bc80a0b44244ca0b5cbb3eb7cf16
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.ll_aton_config.h.20.79eb8be0291ee9086e6be08969d61846
                           .group:00000000 wm4.assert.h.11.d99a111e320bc5106fc4046225782672
                           .group:00000000 wm4.ll_aton_attributes.h.20.d1fce4a2519a8c4442db76dcb52b420f
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.ll_aton_util.h.34.a290753adbb2447ca7ee3415db495399
                           .group:00000000 wm4.ll_aton_NN_interface.h.391.60880269f073611ab8a2cfeebdea17d5
                           .group:00000000 wm4.FreeRTOS.h.59.647b1b0da38e4e98108aae13c8abe9ee
                           .group:00000000 wm4.FreeRTOSConfig.h.59.0e97f89e6eb1b28c12ea610dd500bb25
                           .group:00000000 wm4.FreeRTOS.h.80.7742fabaf5accf3762dc12f7f259a8a0
                           .group:00000000 wm4.projdefs.h.30.55a824156f299c075c33148a9fdadb99
                           .group:00000000 wm4.portmacro.h.30.cbb4b2da41f551c2a9904f0d03a1ce3e
                           .group:00000000 wm4.portmacrocommon.h.30.d5cb67896ab50a95311be7e023da5c4f
                           .group:00000000 wm4.portmacro.h.68.4051ecf710d074fb55b16d91dfebeeaa
                           .group:00000000 wm4.portable.h.61.d557c57974d490f056246a26cdcddd6c
                           .group:00000000 wm4.mpu_wrappers.h.30.ccc5f1a6903f941a88c268f5f62af3fe
                           .group:00000000 wm4.portable.h.189.522b8bd52a171d3fd1432ef06d0caa63
                           .group:00000000 wm4.FreeRTOS.h.102.fb871f3e464d99c5a57b3115545a02ad
                           .group:00000000 wm4.list.h.59.bce6419520cd4f5f98779a1530bf2118
                           .group:00000000 wm4.task.h.56.84290139c73b47f5b9aac361361a2a31
                           .group:00000000 wm4.queue.h.68.219f47fba8b59640449b84d04c5bd6d8
                           .group:00000000 wm4.semphr.h.40.c1a9c6f5bf0feb4da0b6a45d234a79d0
                           .group:00000000 wm4.ll_aton_platform.h.20.06ded592ee586a6abb6019a90ebd54df
                           .group:00000000 wm4.ll_aton_platform.h.288.664a74b8c5792a861b3d52bd39f4a693
                           .group:00000000 wm4.ATON.h.19.cf7dff4c0f1bfe90e42066f604751dc7
                           .group:00000000 wm4.ll_aton_rcompat.h.22.1535a015a52fd365f115f7d75d780d81
                           .group:00000000 wm4.ll_aton_platform.h.383.f09ccd502bb682b863f991d963ee7462
                           .group:00000000 wm4.ll_aton_osal_freertos.h.62.85a065f77def7f6fef26149f92fe1378
                           .group:00000000 wm4.ll_aton_osal.h.116.bc018513feb9b28713cf2afc78ec679b
                           .group:00000000 wm4.cmw_errno.h.21.91021ac9b2627a1ce6b8517d105715d1
                           .group:00000000 wm4.stm32n6570_discovery_conf.h.21.f52c8202689527a3dc0d9c6cba9c0416
                           .group:00000000 wm4.stm32n6570_discovery_errno.h.22.80e523b09444a11ebe4b6e24ae914f0e
                           .group:00000000 wm4.stm32n6570_discovery_bus.h.62.3b5b2c6837f7adeb489604fa214cd371
                           .group:00000000 wm4.cmw_camera.h.33.b34cbb506ffb5bbc0bae0cee9fc48966
                           .group:00000000 wm4.stm32n6570_discovery.h.25.5fc3699797f7c334a2e25a2a6a563b07
                           .group:00000000 wm4.lcd.h.21.98701c105e66fef2e089854e5bc0fe32
                           .group:00000000 wm4.stm32_lcd.h.55.1a04e503950bf34ef3721d2ebb9542fc
                           .group:00000000 wm4.stm32_lcd_ex.h.21.eaf9c9c1000e162e58259e027110f2f5
                           .group:00000000 wm4.utils.h.19.2f7e4a8a839d9215c56961f5a9914d6d
                           .group:00000000 wm4.nema_sys_defs.h.24.0b35b5138cb9b4a3130f5d424bc2bcc0
                           .group:00000000 wm4.nema_hal.h.193.74a3b292db2bcbda0132dae40ae0f4e5
                           .group:00000000 wm4.nema_cmdlist.h.30.a652eb980f08f0ed22ad00119d504926
                           .group:00000000 wm4.nema_graphics.h.61.b3907f86eccb4e55a4b69e8aebdd3657
                           .group:00000000 wm4.nema_blender.h.30.fb13cc9231bd108bca212984b3a891e0
ARM GAS  /tmp/ccHyRziO.s 			page 220


                           .group:00000000 wm4.nema_math.h.30.ef7265c89982f7dae18e3ec2d7f3d003
                           .group:00000000 wm4.nema_version.h.35.6aae27202c190348dff84b89d4c12df7
                           .group:00000000 wm4.nema_error.h.29.50848ed81d21ff4ae4b870fae3681118

UNDEFINED SYMBOLS
cos
sin
xQueueSemaphoreTake
__assert_func
CAM_IspUpdate
xQueueGenericSend
BSP_PB_GetState
UTIL_LCD_FillCircle
UTIL_LCD_DrawLine
ld_bindings_idx
LL_ATON_Output_Buffers_Info_palm_detector
LL_ATON_Input_Buffers_Info_palm_detector
app_postprocess_init
LL_ATON_Output_Buffers_Info_hand_landmark
LL_ATON_Input_Buffers_Info_hand_landmark
memset
puts
nema_init
nema_get_error
nema_ext_hold_enable
nema_ext_hold_irq_enable
nema_get_sw_device_name
printf
HAL_GFXMMU_Init
HAL_GFXMMU_ConfigPacking
nema_cl_create_sized
nema_cl_bind_circular
LL_ATON_Output_Buffers_Info_yolo_detector
LL_ATON_Input_Buffers_Info_yolo_detector
HAL_GetTick
CAM_NNPipe_Start
LL_ATON_Set_User_Input_Buffer_palm_detector
LL_ATON_RT_Main
app_postprocess_run
atan2f
HAL_GFXMMU_ModifyBuffers
nema_bind_dst_tex
nema_set_clip
nema_clear
nema_bind_src_tex
nema_enable_tiling
nema_set_blend
nema_mat3x3_load_identity
nema_mat3x3_translate
nema_mat3x3_rotate
nema_mat3x3_scale
nema_blit_quad_fit
nema_cl_submit
nema_cl_wait
HAL_ICACHE_Invalidate
ld_post_process
memcpy
ARM GAS  /tmp/ccHyRziO.s 			page 221


UTIL_LCD_DrawRect
__aeabi_ul2d
BSP_PB_Init
SCRL_SetAddress_NoReload
UTIL_LCD_FillRect
TIM4_Get_Value
ulTaskGetIdleRunTimeCounter
memmove
UTIL_LCD_GetFont
UTIL_LCDEx_PrintfAt
SCRL_ReloadLayer
SCRL_Init
UTIL_LCD_SetLayer
UTIL_LCD_Clear
UTIL_LCD_SetFont
UTIL_LCD_SetTextColor
xQueueCreateCountingSemaphoreStatic
vQueueDelete
CAM_Init
xQueueCreateMutexStatic
CAM_DisplayPipe_Start
xTaskCreateStatic
Font20
CMW_CAMERA_GetDCMIPPHandle
HAL_DCMIPP_PIPE_SetMemoryAddress
SRCL_Update
xPortIsInsideInterrupt
xQueueGiveFromISR
LL_ATON_EC_Network_Init_hand_landmark
LL_ATON_EC_Inference_Init_hand_landmark
LL_ATON_Set_User_Input_Buffer_hand_landmark
LL_ATON_Get_User_Input_Buffer_hand_landmark
LL_ATON_Set_User_Output_Buffer_hand_landmark
LL_ATON_Get_User_Output_Buffer_hand_landmark
LL_ATON_EpochBlockItems_hand_landmark
LL_ATON_Internal_Buffers_Info_hand_landmark
LL_ATON_EC_Network_Init_palm_detector
LL_ATON_EC_Inference_Init_palm_detector
LL_ATON_Get_User_Input_Buffer_palm_detector
LL_ATON_Set_User_Output_Buffer_palm_detector
LL_ATON_Get_User_Output_Buffer_palm_detector
LL_ATON_EpochBlockItems_palm_detector
LL_ATON_Internal_Buffers_Info_palm_detector
